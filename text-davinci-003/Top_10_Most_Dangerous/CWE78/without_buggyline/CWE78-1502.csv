Original code,Plausible Program,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : case '&' : case '$' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }",136,-5.109517618801501,-0.03756998249118751
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; case '&': * b ++ = ' '; break; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }",139,-7.771932298419999,-0.05591318200302158
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : case '&' : case '$' : case '>' : case '<' : case '*' : case '(' : case ')': case '""' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }",163,-21.529768784601504,-0.13208447107117488
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; size_t arg_len = strlen ( arg ) ; char * a = malloc ( arg_len + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; const char * disallowed_chars = ""@`|;\\n""; size_t disallowed_len = strlen (disallowed_chars); int i; for (i = 0; i < arg_len; i++) { int j; for (j = 0; j < disallowed_len; j++) { if (arg[i] == disallowed_chars[j]) { break; } } if (j < disallowed_len) { continue; } *b++ = arg[i]; } *b = 0; return a; }",193,-37.835693880878004,-0.1960398646677617
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; case '&': break; case '>': break; case '<': break; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }",144,-11.364758977882499,-0.07892193734640623
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 2 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : * b ++ = '\\' ; * b ++ = * arg ; break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }",141,-10.529192347235,-0.07467512303003546
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } const char * disallowed = ""@`|;\\n""; //Added const char * disallowed char * b = a ; while ( * arg ) { //Added check of the char in the disallowed string if (strchr(disallowed, *arg) == NULL) { * b ++ = * arg ; } arg ++ ; } * b = 0 ; return a ; }",135,-44.22607775383249,-0.32760057595431474
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : if ( isalnum ( * arg ) || isspace ( * arg ) ) * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }",143,-10.224306377616003,-0.0714986459973147
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : case '$': case '&': break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }",134,-7.217455513675497,-0.05386160831101117
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } // Create an array to hold special characters char special_chars [ 6 ] = { '@' , '`' , '|' , ';' , '\\n' , '\0' }; char * b = a ; while ( * arg ) { int i ; int is_special_char = 0 ; // Loop through the array of special characters for ( i = 0 ; special_chars [ i ] != '\0' ; i ++ ) { // If the current character in the argument is in the array of special characters if ( * arg == special_chars [ i ] ) { is_special_char = 1 ; break ; } } // If the character is not a special character, add it to the new string if ( is_special_char == 0 ) { * b ++ = * arg ; } arg ++ ; } * b = 0 ; return a ; }",243,-58.475076562161206,-0.24063817515292676
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { if ( strcmp ( arg , ""@"") != 0 && strcmp ( arg , ""`"") != 0 && strcmp ( arg , ""|"") != 0 && strcmp ( arg , "";"") != 0 && strcmp ( arg , ""\n"") != 0 ) { * b ++ = * arg ; } arg ++ ; } * b = 0 ; return a ; }",145,-16.924778519691497,-0.11672261048063101
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' :  case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }",122,-9.667777089766005,-0.07924407450627874
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) {
    r_return_val_if_fail ( arg , NULL ) ;
    char * a = malloc ( strlen ( arg ) + 1 ) ;
    if ( ! a ) {
        return NULL ;
    }
    char * b = a ;
    while ( * arg ) {
        switch ( * arg ) {
            case '@' :
            case '`' :
            case '|' :
            case ';' :
            case '\\n' :
            case '&' : // Add a restriction to disallow the & character
            case '$' : // Add a restriction to disallow the $ character
            case '<' : // Add a restriction to disallow the < character
            case '>' : // Add a restriction to disallow the > character
            case '(' : // Add a restriction to disallow the ( character
            case ')' : // Add a restriction to disallow the ) character
            break ;
            default :
            * b ++ = * arg ;
            break ;
        }
        arg ++ ;
    }
    * b = 0 ;
    return a ;
}",271,-39.06397423533622,-0.14414750640345467
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\' : case 'n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }",130,-6.106807837709001,-0.04697544490545385
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; const char * whitelist_chars = ""ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_ \ n \ t () . , "" ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { if ( strchr ( whitelist_chars , * arg ) ) { * b ++ = * arg ; } arg ++ ; } * b = 0 ; return a ; }",160,-38.34676307894349,-0.23966726924339682
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\n' : case '\'' : case '""' : case '&' : case '(' : case ')' : case '$' : case '<' : case '>': case '*' : case '?' : case '#' : case '{' : case '}' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }",186,-27.961754106956004,-0.15033201132772045
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ;  while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : case '$' : //added case '$' break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }",138,-21.943010493124003,-0.15900732241394205
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : case '\\' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }",131,-5.23410446555,-0.039954995920229004
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : return NULL; break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }",129,-3.819007517615999,-0.029604709438883714
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) {
 r_return_val_if_fail ( arg , NULL ) ;
 char * a = malloc ( strlen ( arg ) + 1 ) ;
 if ( ! a ) {
  return NULL ;
 }

 char * b = a ;
 while ( * arg ) {
  if ( * arg == '@' || * arg == '`' || * arg == '|' || * arg == ';' || * arg == '\\n' ) {
   break ;
  } else {
   * b ++ = * arg ;
  }
  arg ++ ;
 }
 * b = 0 ;
 return a ;
}

The code has been changed to use a single if-statement to check for the specific characters that are considered malicious and should be filtered out. This fixes the vulnerability by avoiding the use of a switch statement and prevents malicious code from being executed.",206,-72.46693180069099,-0.3517812223334514
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }",125,-5.354527826580998,-0.04283622261264799
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) {
r_return_val_if_fail ( arg , NULL ) ;
char * a = malloc ( strlen ( arg ) + 1 ) ;
if ( ! a ) {
return NULL ;
}
char * b = a ;
while ( * arg ) {
if ( * arg == '@' || * arg == '`' || * arg == '|' || * arg == ';' || * arg == '\n' ) {
break ;
} else {
* b ++ = * arg ;
}
arg ++ ;
}
* b = 0 ;
return a ;
}",149,-15.125916741653992,-0.10151621974264424
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; case '$' : if ( * ( arg + 1 ) == '(' ) { break ; } default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }",147,-11.450216149945998,-0.07789262687038094
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; case '$': case '&': case '>': case '<': return NULL; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }",145,-12.183340503313996,-0.08402303795388963
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '\\' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }",126,-5.809999083428002,-0.04611110383673017
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char* __filterShell(const char* arg) {
 r_return_val_if_fail(arg, NULL);
 char* a = malloc(strlen(arg) + 1);
 if (!a) {
  return NULL;
 }
 char* b = a;
 while (*arg) {
  switch (*arg) {
   case '@':
   case '`':
   case '|':
   case ';':
   case '\\n':
   case '&':
   case '$':
   case '>':
   case '<':
   case '{':
   case '}':
    break;
   default:
    *b++ = *arg;
    break;
  }
  arg++;
 }
 *b = 0;
 return a;
}",187,-24.76498129924599,-0.13243305507618175
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; // Escape all shell metacharacters const char * meta_chars = ""@`|;\\n"" ; for ( int i = 0 ; i < strlen ( meta_chars ) ; i ++ ) { arg = remove_char ( arg , meta_chars [ i ] ) ; } char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { * b ++ = * arg ; arg ++ ; } * b = 0 ; return a ; } static char * remove_char ( const char * str , char c ) { int count = 0 ; const char * temp = str ; while ( * temp ) { if ( * temp != c ) { count ++ ; } temp ++ ; } char * result = malloc ( count + 1 ) ; int i , j = 0 ; for ( i = 0 ; i < strlen ( str ) ; i ++ ) { if ( str [ i ] != c ) { result [ j ++ ] = str [ i ] ; } } result [ j ] = '\0' ; return result ; }",276,-47.56140209705394,-0.1723239206414998
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : return NULL; break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }",129,-3.8964315861659986,-0.030204896016790685
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; size_t len = strlen ( arg ) ; char * a = malloc ( len + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; int count = 0 ; while ( * arg && count < len ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; count ++ ; } * b = 0 ; return a ; }",145,-15.227883877781002,-0.10501988881228277
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," 

static char * __filterShell ( const char * arg ) { 
    r_return_val_if_fail ( arg , NULL ) ; 
    char * a = malloc ( strlen ( arg ) + 1 ) ; 
    if ( ! a ) { 
        return NULL ; 
    } 
    char * b = a ; 
    while ( * arg ) { 
        switch ( * arg ) { 
            case '@' : 
            case '`' : 
            case '|' : 
            case ';' : 
            case '\\n' : 
            case '$' :  // Adding to the filter for the vulnerability
            case '&' :  // Adding to the filter for the vulnerability
            break ; 
            default : 
            * b ++ = * arg ; 
            break ; 
        } 
        arg ++ ; 
    } 
    * b = 0 ; 
    return a ; 
}",228,-41.86315902396014,-0.1836103465963164
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : free ( a ) ; return NULL ; break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }",134,-5.905901684146999,-0.04407389316527611
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : free(a); return NULL; break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }",133,-6.038760435348999,-0.04540421379961654
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : case '$' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }",131,-5.069148882193999,-0.038695792993847324
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '\|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }",127,-8.419798981759003,-0.06629762977762994
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; int len = strlen ( arg ) ; char * a = malloc ( len + 1 ) ; if ( ! a ) { return NULL ; } int i ; int k = 0 ; for ( i = 0 ; i < len ; i ++ ) { if ( arg [ i ] == '@' || arg [ i ] == '`' || arg [ i ] == '|' || arg [ i ] == ';' || arg [ i ] == '\\n' ) { continue ; } else { a [ k ] = arg [ i ] ; k ++ ; } } a [ k ] = 0 ; return a ; }",162,-16.948158645086,-0.1046182632412716
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : free(a); return NULL; break; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }",133,-7.002293498775,-0.05264882329906015
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : * b ++ = ' ' ; break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }",133,-6.16108333362,-0.04632393483924812
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\'' : case '\\' : case '""' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }",140,-12.368305798791997,-0.08834504141994284
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { 
r_return_val_if_fail ( arg , NULL ) ; 
char * a = malloc ( strlen ( arg ) + 1 ) ; 
if ( ! a ) { 
return NULL ; 
} 
char * b = a ; 
while ( * arg ) { 
switch ( * arg ) { 
case '@' : 
case '`' : 
case '|' : 
case ';' : 
case '\\n' : 
break ; 
default : 
if (!isalnum(*arg)) {
free(a);
return NULL;
}
* b ++ = * arg ; 
break ; 
} 
arg ++ ; 
} 
* b = 0 ; 
return a ; 
}",192,-17.446283949655392,-0.0908660622377885
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { 
r_return_val_if_fail ( arg , NULL ) ;
char * a = malloc ( strlen ( arg ) + 1 ) ; 
if ( ! a ) {
   return NULL ; 
}
char * b = a ; 
while ( * arg ) { 
   switch ( * arg ) { 
      case '@' : 
      case '`' : 
      case '|' : 
      case ';' : 
      case '\\n' : 
         break ;
      default : 
         if(isalnum(*arg) || isspace(*arg)) {
            * b ++ = * arg ; 
         }
         break ; 
   }
   arg ++ ; 
}
* b = 0 ; 
return a ; 
}",198,-34.0315856764795,-0.17187669533575506
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","

static char * __filterShell ( const char * arg ) { 
    r_return_val_if_fail ( arg , NULL ) ; 
    char * a = malloc ( strlen ( arg ) + 1 ) ; 
    if ( ! a ) { 
        return NULL ; 
    } 
    char * b = a ; 
    while ( * arg ) { 
        if ( strchr ( ""@`|;\\n"" , * arg ) ) {
            break;
        }
        else {
            * b ++ = * arg ; 
        }
        arg ++ ; 
    } 
    * b = 0 ;
    return a ; 
}",160,-21.0960276877293,-0.13185017304830812
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { 
 r_return_val_if_fail ( arg , NULL ) ;
 char * a = malloc ( strlen ( arg ) + 1 ) ;
 if ( ! a ) {
 return NULL ;
 }
 char * b = a ;
 while ( * arg ) {
 switch ( * arg ) {
 case '@' : {
 char *str = ""\\@"";
 *b++ = *str;
 break;
 } 
 case '`' : {
 char *str = ""\\`"";
 *b++ = *str;
 break;
 } 
 case '|' : {
 char *str = ""\\|"";
 *b++ = *str;
 break;
 } 
 case ';' : {
 char *str = ""\\;"";
 *b++ = *str;
 break;
 } 
 case '\\n' : {
 char *str = ""\\\n"";
 *b++ = *str;
 break;
 } 
 default : * b ++ = * arg ; 
 break ; 
 } 
 arg ++ ;
 }
 * b = 0 ;
 return a ;
}",270,-49.27812379780871,-0.18251156962151374
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) {
    r_return_val_if_fail ( arg , NULL ) ;
    char * a = malloc ( strlen ( arg ) + 1 ) ;
    if ( ! a ) {
        return NULL ;
    }
    char * b = a ;
    while ( * arg ) {
        switch ( * arg ) {
            case '@' :
            case '`' :
            case '|' :
            case ';' :
            case '\\n' :
            case '&' :
            case '$' :
            case '>' :
            case '<' :
            case '*' :
            case '?' :
            case '#' :
            case '(' :
            case ')' :
            case '[' :
            case ']' :
            case '{' :
            case '}' :            
                break ;
            default :
                * b ++ = * arg ;
                break ;
        }
        arg ++ ;
    }
    * b = 0 ;
    return a ;
}",258,-23.341548802541702,-0.09047111938969651
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\' : case '&' : case '$' : case '<' : case '>' : case '^' : case '\""' : case '\'' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }",160,-16.057097175296988,-0.10035685734560618
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a )  { return NULL ; } 
//added code to remove white spaces
int i = 0; 
while (arg[i] != '\0') { 
if (arg[i] == ' ') { 
while (arg[i] == ' ') { 
i++; 
} 
} 
//end of added code
char * b = a ; 
while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } 
arg ++ ; 
} 
* b = 0 ; 
return a ; 
}",212,-54.360117002028,-0.2564156462359811
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","

static char * __filterShell ( const char * arg ) { 
    r_return_val_if_fail ( arg , NULL ) ; 
    char * a = malloc ( strlen ( arg ) + 1 ) ; 
    if ( ! a ) { 
        return NULL ; 
    } 
    char * b = a ; 
    while ( * arg ) { 
        switch ( * arg ) { 
            case '@' : 
            case '`' : 
            case '|' : 
            case ';' : 
            case '\\' :   // added this line
            case 'n' :   // added this line
                break ; 
            default : 
                * b ++ = * arg ; 
                break ; 
        } 
        arg ++ ; 
    } 
    * b = 0 ; 
    return a ; 
}",210,-23.787450050363613,-0.11327357166839816
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; case '&': case '$': case '<': case '>': break; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }",144,-8.056132644445999,-0.05594536558643055
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","

static char * __filterShell ( const char * arg ) {
    r_return_val_if_fail ( arg , NULL ) ;
    size_t len = strlen ( arg ) ;
    char * a = malloc ( len + 1 ) ;
    if ( ! a ) {
        return NULL ;
    }

    char * b = a ;
    size_t i ;
    for ( i = 0 ; i < len ; i ++ ) {
        switch ( arg [ i ] ) {
            case '@' : case '`' : case '|' : case ';' : case '\\n' :
                break ;
            default :
                * b ++ = arg [ i ] ;
                break ;
        }
    }
    * b = 0 ;
    return a ;
}",187,-22.617787310077087,-0.1209507342784871
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : case '\\' : // Added this line break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }",135,-12.396235126019496,-0.09182396389644071
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : * b ++ = '\\' ; break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }",134,-6.595918924640499,-0.04922327555701864
