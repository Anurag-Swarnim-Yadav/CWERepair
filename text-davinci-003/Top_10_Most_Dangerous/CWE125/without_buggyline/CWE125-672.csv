Original code,Plausible Program,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } if (endian == MSBEndian) { value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } return 0; }",171,-4.7710445061370015,-0.027900845065128663
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; int bufSize = sizeof(buffer); if (bufSize > 4) return 0; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }",174,-15.079247502307696,-0.08666234196728562
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) {
 unsigned int value ;
 
 if ( buffer != NULL ) {
   if ( endian == LSBEndian ) {
     value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ;
     return ( ( unsigned int ) ( value & 0xffffffff ) ) ;
   }
   value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ;
   return ( ( unsigned int ) ( value & 0xffffffff ) ) ;
 }
 return 0;
}",186,-16.765670186551606,-0.0901380117556538
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { 
	unsigned int value ; 
	if ( endian == LSBEndian && buffer != NULL)  { 
		value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; 
		return ( ( unsigned int ) ( value & 0xffffffff ) ) ;
	} 
	if ( buffer != NULL) {
		value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ;
		return ( ( unsigned int ) ( value & 0xffffffff ) ) ;
	} else {
		return 0;
	}
}",208,-33.68614679301759,-0.16195262881258457
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const unsigned int length , const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( length < 4 ) { return 0 ; } if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }",172,-12.906646236843002,-0.07503864091187792
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; int boundaryCheck = endian == LSBEndian ? 3 : 0; if (boundaryCheck > 0) { boundaryCheck = boundaryCheck > strlen(buffer) - 1 ? strlen(buffer) - 1 : boundaryCheck; } else { boundaryCheck = boundaryCheck < strlen(buffer) - 1 ? strlen(buffer) - 1 : boundaryCheck; } if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ boundaryCheck ] << 24 ) | ( buffer [ boundaryCheck - 1 ] << 16 ) | ( buffer [ boundaryCheck - 2 ] << 8 ) | ( buffer [ boundaryCheck - 3 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ boundaryCheck ] << 24 ) | ( buffer [ boundaryCheck + 1 ] << 16 ) | ( buffer [ boundaryCheck + 2 ] << 8 ) | buffer [ boundaryCheck + 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }",255,-39.37292244533983,-0.15440361743270523
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } else if (endian == MSBEndian) { value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } else { return 0; } }",175,-5.577419397020902,-0.03187096798297658
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } if (endian == MSBEndian){ value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } return 0; }",170,-6.907234827643397,-0.04063079310378469
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { if ( buffer[3] == 0 ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } } else { value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } return 0; }",173,-14.814313675703701,-0.08563187095782486
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { 
   unsigned int value; 
   if (endian == LSBEndian) { 
       value = (unsigned int)((buffer[3] << 24) | (buffer[2] << 16) | (buffer[1] << 8) | (buffer[0])); 
   } else {
       value = (unsigned int)((buffer[0] << 24) | (buffer[1] << 16) | (buffer[2] << 8) | buffer[3]); 
   } 
   return ((unsigned int)(value & 0xffffffff)); 
}",155,-22.8587129708124,-0.1474755675536284
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } if (buffer[3] != NULL){ value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } else { return 0; } }",172,-10.6711230886873,-0.06204141330632151
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { if (buffer[3] < 4) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } else { return 0; } } if (buffer[0] < 4) { value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } else { return 0; } }",190,-7.9793677009326,-0.04199667211017158
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer , const size_t length) { 
if (length < 4) { 
return 0; 
} 
unsigned int value; 
if (endian == LSBEndian) { 
value = (unsigned int) ((buffer[3] << 24) | (buffer[2] << 16) | (buffer[1] << 8) | (buffer[0])); 
return ((unsigned int) (value & 0xffffffff)); 
} 
value = (unsigned int) ((buffer[0] << 24) | (buffer[1] << 16) | (buffer[2] << 8) | buffer[3]); 
return ((unsigned int) (value & 0xffffffff)); 
}",183,-21.314495829601196,-0.11647265480656391
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { 
 unsigned int value ; 
 
 if ( endian == LSBEndian ) { 
  if (buffer[3] != NULL){
   value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; 
  }else{
   value = 0;
  }
  return ( ( unsigned int ) ( value & 0xffffffff ) ) ; 
 } 
 
 if (buffer[0] != NULL){
  value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; 
 }else{
  value = 0;
 }
 return ( ( unsigned int ) ( value & 0xffffffff ) ) ; 
}",226,-21.36125406091039,-0.09451882327836456
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { if (buffer+3 < buffer+4){ value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } else { return 0; } } if (buffer < buffer+4){ value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } else { return 0; } }",188,-15.619888151387995,-0.08308451144355317
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } else if ( endian == MSBEndian ) { value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } else { //Handle out-of-bound read return ( ( unsigned int ) 0 ) ; } }",189,-27.1633145637158,-0.14372124107786138
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } else if(endian == MSBEndian) { value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } else { return 0; } }",175,-7.761122897489895,-0.04434927369994226
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } if (sizeof(buffer) >= 4) { value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } return 0; }",171,-10.002029034986501,-0.058491397865418134
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; unsigned int bufferSize = 4; 
if (endian == LSBEndian) { value = (unsigned int)((buffer[bufferSize-1] << 24) | (buffer[bufferSize-2] << 16) | (buffer[bufferSize-3] << 8) | (buffer[bufferSize-4])) ; return ((unsigned int)(value & 0xffffffff)); } 
value = (unsigned int)((buffer[bufferSize-4] << 24) | (buffer[bufferSize-3] << 16) | (buffer[bufferSize-2] << 8) | buffer[bufferSize-1]) ; return ((unsigned int)(value & 0xffffffff)); }",179,-20.81662450283889,-0.11629399163597146
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:"," 
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } if (endian == MSBEndian) { value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } return 0; }",172,-7.016721430425602,-0.04079489203735815
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong(const EndianType endian, const unsigned char* buffer) {
    unsigned int value;
    int bufferSize = 4;
    if (endian == LSBEndian) {
        value = (unsigned int)((buffer[bufferSize - 1] << 24) | (buffer[bufferSize - 2] << 16) | (buffer[bufferSize - 3] << 8) | (buffer[bufferSize - 4]));
        return ((unsigned int)(value & 0xffffffff));
    }
    value = (unsigned int)((buffer[0] << 24) | (buffer[1] << 16) | (buffer[2] << 8) | buffer[3]);
    return ((unsigned int)(value & 0xffffffff));
}",177,-16.043185738549,-0.09063946744942937
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:"," 
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] & 0xff ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | ( buffer [ 3 ] & 0xff ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }",165,-6.318586373336705,-0.0382944628687073
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } if (endian == MSBEndian) { value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } return 0; }",171,-4.7010828334265025,-0.027491712476178376
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { if(buffer != NULL) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } } else if (endian == MSBEndian) { if (buffer != NULL) { value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } } else { return 0; } }",191,-19.398210319024308,-0.10156131057080789
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { if (buffer[4] == '\0') { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } else { return 0; } } else { if (buffer[4] == '\0') { value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } else { return 0; } }
}",198,-15.633977634689803,-0.07895948300348385
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { if (endian == LSBEndian && sizeof(buffer) > 3) {  value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; } else { value = 0; } return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } if (endian == LSBEndian && sizeof(buffer) > 3) { value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; } else { value = 0; } return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }",209,-21.777982476848592,-0.10420087309496934
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; unsigned int len = 4; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ len - 1 ] << 24 ) | ( buffer [ len - 2 ] << 16 ) | ( buffer [ len - 3 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ len - 1 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }",170,-16.519855021923007,-0.09717561777601769
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { if (buffer != NULL && buffer + 4 <= sizeof(buffer)) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } else { return 0; } } if (buffer != NULL && buffer + 4 <= sizeof(buffer)) { value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } else { return 0; } }",200,-12.923127855559997,-0.06461563927779998
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] & 0xff ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | ( buffer[3] & 0xff ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }",164,-6.366616018005002,-0.038820829378079284
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer , unsigned int bufferSize) { 
    unsigned int value ; 
    if ( endian == LSBEndian ) { 
        if (bufferSize < 4) {
            return 0;
        }
        value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; 
        return ( ( unsigned int ) ( value & 0xffffffff ) ) ; 
    }
    if (bufferSize < 4) {
        return 0;
    }
    value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; 
    return ( ( unsigned int ) ( value & 0xffffffff ) ) ; 
}",219,-17.018137513895606,-0.07770839047440917
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { if(buffer != NULL) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } else { return 0; } } else { if(buffer != NULL) { value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } else { return 0; } } }",187,-10.354486510851505,-0.055371585619526764
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] & 0xff ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | ( buffer[ 3 ] & 0xff ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }",164,-8.205344323405205,-0.050032587337836616
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong(const EndianType endian, const unsigned char* buffer) { 
    unsigned int value; 
    if (endian == LSBEndian && buffer != NULL) {
        value = (unsigned int)((buffer[3] << 24) | (buffer[2] << 16) | (buffer[1] << 8) | (buffer[0])); 
        return ((unsigned int)(value & 0xffffffff)); 
    }
    else if (buffer !=NULL) {
        value = (unsigned int)((buffer[0] << 24) | (buffer[1] << 16) | (buffer[2] << 8) | buffer[3]); 
        return ((unsigned int)(value & 0xffffffff)); 
    }
    return 0; 
}",186,-25.750437106447592,-0.13844321024971823
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] & 0xff ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } else if (endian == MSBEndian) { value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | ( buffer [ 3 ] & 0xff) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } return 0; }",180,-12.175892415734594,-0.06764384675408108
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer , int size ) { unsigned int value ; if ( size < 4 ) { return 0 ; } if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }",170,-9.770254726889805,-0.05747208662876356
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { if ( buffer[3] != 0) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } else { return 0; } } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }",173,-12.344781618277093,-0.07135711918079245
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; int buffer_length = strlen(buffer); // added code to check for buffer length if ( endian == LSBEndian && buffer_length >=4 ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } else if ( endian == MSBEndian && buffer_length >=4 ) { value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } return 0; // added return statement }",206,-43.84030974477441,-0.21281703759599227
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer[0] & 0xff) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | ( buffer[3] & 0xff) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }",164,-7.592119796597199,-0.04629341339388536
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } else if (endian == MSBEndian) { value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } return 0; }",172,-5.889355022980098,-0.03424043618011685
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } if (buffer[3]) { value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } else { return 0; } }",170,-10.306151135441194,-0.06062441844377173
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer , const int bufSize) { unsigned int value ; if ( endian == LSBEndian ) { if (bufSize >= 4) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } else { return 0; } } if (bufSize >= 4) { value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } else { return 0; } }",191,-13.893753728724908,-0.07274216611897857
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { if (buffer[3] != NULL) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } else { return 0; } } else { if (buffer[0] != NULL) { value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } else { return 0; } } }",193,-8.896432590315701,-0.046095505649304154
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] & 0xff ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | ( buffer [ 3 ] & 0xff ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }",164,-3.6445664361447996,-0.022222966074053656
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] & 0xff ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | ( buffer [ 3 ] & 0xff ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }",164,-3.6673739830743006,-0.02236203648216037
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; int buffer_length = sizeof(buffer)/sizeof(buffer[0]); if (buffer_length > 4) { return 0; } if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }",185,-15.868659493281598,-0.08577653780152215
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { assert(buffer[3] < 4); value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } assert(buffer[0] < 4); value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }",174,-14.610939383635404,-0.08397091599790463
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { if (buffer[3] <= 3) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } else { return -1; } } else { if (buffer[0] <= 3) { value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } else { return -1; } } }",195,-13.7426486990374,-0.07047512153352513
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { 
 unsigned int value ; 
 if ( endian == LSBEndian ) { 
  value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; 
  return ( ( unsigned int ) ( value & 0xffffffff ) ) ;
 } 
 else if (endian == MSBEndian) 
 {
  value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; 
  return ( ( unsigned int ) ( value & 0xffffffff ) ) ; 
 } 
 else 
 { 
  return 0; 
 }
}",207,-22.76474934703712,-0.10997463452674938
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { if(sizeof(buffer) >= 4) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } else { return 0; } } if(sizeof(buffer) >= 4) { value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } else { return 0; } }",192,-7.359792163564497,-0.03833225085189842
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }
Fixed code:","
static inline unsigned int ReadPropertyUnsignedLong ( const EndianType endian , const unsigned char * buffer ) { unsigned int value ; if ( endian == LSBEndian ) { value = ( unsigned int ) ( ( buffer [ 3 ] << 24 ) | ( buffer [ 2 ] << 16 ) | ( buffer [ 1 ] << 8 ) | ( buffer [ 0 ] ) ) ; if (value >= 0xffffffff) {value = 0;} return ( ( unsigned int ) ( value & 0xffffffff ) ) ; } value = ( unsigned int ) ( ( buffer [ 0 ] << 24 ) | ( buffer [ 1 ] << 16 ) | ( buffer [ 2 ] << 8 ) | buffer [ 3 ] ) ; if (value >= 0xffffffff) {value = 0;} return ( ( unsigned int ) ( value & 0xffffffff ) ) ; }",184,-13.454964633800403,-0.0731248077923935
