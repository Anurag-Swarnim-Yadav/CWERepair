Original code,Plausible Program,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; //Add a call to jbd2_journal_free_resouces() before returning here jbd2_journal_free_resources(handle); return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; //Add a call to jbd2_journal_free_resources() here jbd2_journal_free_resources(handle); return err ; }",243,-32.347421836778295,-0.1331169622912687
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { // ext4_put_nojournal(handle); return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; else ext4_put_nojournal ( handle ) ; return err ; }",195,-12.975911784803833,-0.06654313735796837
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( handle != NULL ) { if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; } else { return 0; } }",197,-11.021704225011936,-0.0559477371828017
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; /* Added line to prevent use after free */ jbd2_journal_stop_slab(handle); rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",205,-28.972476126288793,-0.14132915183555508
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( handle && ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle || ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",188,-6.3448356253922915,-0.033749125666980274
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; if (handle != NULL) { free(handle); } return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; if (handle != NULL) { free(handle); } return err ; }",207,-6.934211580877537,-0.03349860667090598
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; /* added */ if (handle) { free(handle); handle = NULL; } if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",200,-16.586375914539833,-0.08293187957269917
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err = 0 ; int rc = 0 ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( handle -> h_transaction ) { sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; } else { err = jbd2_journal_stop ( handle ) ; } return err ? err : handle -> h_err ; }",182,-13.214558843174752,-0.07260746617128984
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; handle = NULL; return handle ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; handle = NULL; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",187,-10.020473253924647,-0.05358541847018528
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; if (handle != NULL){ rc = jbd2_journal_stop ( handle ) ;} if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",190,-14.352707337710003,-0.0755405649353158
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; if (handle) { rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; } else { return 0; } }",195,-8.479467746189043,-0.04348444998045663
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( handle && handle -> h_transaction ) { sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; } else if(handle){ err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } return 0; }",193,-12.767157548579346,-0.06615107538124014
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( handle -> h_transaction && handle->h_transaction->t_journal) { sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; } else { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } }",196,-12.603015234299072,-0.06430109813417893
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle || !handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",186,-8.569554834460803,-0.04607287545409034
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { if (handle != NULL){ err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } else { return 0; } } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",196,-10.506673945652537,-0.05360547931455376
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; jbd2_journal_free(handle); handle = NULL; return err ; }",197,-13.142727859896837,-0.06671435461876567
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { return 0 ; } if ( handle -> h_transaction ) { sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; } else { err = jbd2_journal_stop ( handle ) ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; } ext4_put_nojournal ( handle ) ; return err ; }",192,-9.413582176951854,-0.04902907383829091
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc = 0; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; if (handle != NULL) { rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; } if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",193,-13.043147730998253,-0.06758107632641581
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; ext4_handle_put(handle); return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; ext4_handle_put(handle); return err ; }",201,-7.629365628709851,-0.037957042928904734
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( handle && handle -> h_transaction ) { sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; } else { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } }",187,-6.46934650179245,-0.0345954358384623
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; handle -> h_err = 0; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; handle -> h_err = 0; return err ; }",199,-7.194203741951198,-0.03615177759774472
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; if ( handle ) { rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; } return err ; }",189,-6.310521844082043,-0.03338900446604256
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! handle ) return 0 ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",191,-7.47749077654883,-0.0391491663693656
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_handle ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; ext4_put_handle ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; ext4_put_handle ( handle ) ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",202,-10.854052568691106,-0.053732933508371813
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; if (err == 0) { handle->h_err = 0; } return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; handle->h_err = 0; return err ; }",207,-11.593216821636135,-0.056005878365391955
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; if (handle) { free (handle); handle = NULL; } return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; if (handle) { free (handle); handle = NULL; } return err ; }",211,-8.228184242443497,-0.038996133850443114
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } 

if ( handle -> h_transaction ) {
    sb = handle -> h_transaction -> t_journal -> j_private ;
    rc = jbd2_journal_stop ( handle ) ;
    err = handle -> h_err ;
    if ( ! err ) err = rc ;
    if ( err ) __ext4_std_error ( sb , where , line , err ) ;
}

free(handle);
return err ; 
}",177,-20.079669649244405,-0.11344446129516612
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! handle ) { return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; ext4_put_nojournal ( handle ) ; return err ; }",175,-6.559809199938898,-0.03748462399965084
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; if (handle->h_transaction) { err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; } else { jbd2_journal_free_transaction(handle->h_transaction); } return err ; }",215,-16.267522245700796,-0.07566289416605021
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; if ( handle ) { rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; } free(handle); return err ; }",193,-8.131746593602042,-0.04213340203938882
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err = 0 ; int rc = 0 ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; rc = jbd2_journal_stop ( handle ) ; err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",174,-13.410912728838904,-0.07707421108528105
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err = 0 ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; if (handle) { rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; } return err ; }",191,-7.985287190196891,-0.041807786336109376
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; jbd2_journal_lock_updates(handle); rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; jbd2_journal_unlock_updates(handle); if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",210,-9.024528324584804,-0.04297394440278478
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; if (handle) free(handle); return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; if (handle) free(handle); return err ; }",199,-5.889222447209035,-0.029594082649291635
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { // ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; // return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; // return err ; }",186,-16.440593015978497,-0.08839028503214245
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; if (handle) { rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; }else { err = 0; } return err ; }",196,-13.89001289824524,-0.07086741274614919
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; ext4_handle_free(handle); return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; ext4_handle_free(handle); if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",201,-7.084920389329039,-0.03524836014591561
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { if (handle) { ext4_put_nojournal ( handle ) ; } return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",189,-7.159360420399,-0.03788021386454497
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; // Free the handle before getting its error value free(handle); // Get the error value err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",201,-27.555815628741538,-0.13709361009324147
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; if (handle) { free(handle); } return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; if (handle) { free(handle); } return err ; }",203,-5.608828832817051,-0.027629698683827836
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle || ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; handle = NULL ; return err ; }",178,-11.841029038324303,-0.06652263504676574
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; 
// Check if handle is not equal to NULL. 
if (handle != NULL){
	return handle -> h_err ? handle -> h_err : err ;
}
 
return 0; 
} 

sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; 
// Check if handle is not equal to NULL. 
if (handle != NULL){
	rc = jbd2_journal_stop ( handle ) ; 
	if ( ! err ) err = rc ; 
	if ( err ) __ext4_std_error ( sb , where , line , err ) ; 
}

return err ; }",250,-45.77044532682936,-0.18308178130731745
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; jbd2_journal_stop ( handle ) ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",172,-8.917917899798239,-0.0518483598825479
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; ext4_put_nojournal ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; ext4_put_nojournal ( handle ) ; return err ; }",205,-8.382315526875798,-0.04088934403354048
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( handle != NULL ) { if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( handle->h_transaction != NULL ) { sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; } } return 0; }",167,-13.232116667473003,-0.0792342315417545
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( handle && ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle || ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",188,-6.534419389720555,-0.034757549945322104
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; //added null check if (handle != NULL) { return handle -> h_err ? handle -> h_err : err ; } } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",195,-14.8774881623274,-0.07629481108885845
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) { __ext4_std_error ( sb , where , line , err ) ; free(handle); } return err ; }",189,-7.822571110887302,-0.041389265136969854
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; if ( handle != NULL ) { rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; } return err ; }",191,-6.8755948188839,-0.0359978786329
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) { err = rc ; } if ( handle != NULL ) { __ext4_std_error ( sb , where , line , err ) ; } return err ; }",189,-13.918013241746607,-0.073640281702363
