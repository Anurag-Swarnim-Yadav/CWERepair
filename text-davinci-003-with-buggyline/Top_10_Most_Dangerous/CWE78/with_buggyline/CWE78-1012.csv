Original code,Plausible Program,Number of Bugs Present,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } // <StartBug> char *modifiedPath = r_str_replace (path, "";"", """", R_TRUE); char *modifiedHost = r_str_replace (host, "";"", """", R_TRUE); r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , modifiedPath , modifiedHost , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; free (modifiedPath); free(modifiedHost); // <EndBug> return r_socket_http_answer ( s , code , rlen ) ; }",1,527,-34.59244680101449,-0.06564031651046393
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } // <StartBug> // Escaping the arguments to prevent OS command injection char * escaped_host = r_str_escape ( host ) ; char * escaped_port = r_str_escape ( port ) ; // <EndBug> if ( ! r_socket_connect_tcp ( s , escaped_host , escaped_port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , escaped_host , escaped_port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; return r_socket_http_answer ( s , code , rlen ) ; }",1,517,-32.10601046647722,-0.06210060051542983
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char * escapedData = r_str_escape (data); 

r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( escapedData ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) escapedData , strlen ( escapedData ) ) ; <StartBug> free (escapedData); return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",1,492,-15.44444307434968,-0.031391144460060326
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char * safePath = r_str_escape ( path ) ; if ( ! safePath ) { return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , safePath , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> free ( safePath ) ; return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",1,499,-12.851467139612229,-0.025754443165555568
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char * sanitized_data = r_str_sanitize (data); if (!sanitized_data) { eprintf (""Cannot sanitize data\\n""); return NULL; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( sanitized_data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) sanitized_data , strlen ( sanitized_data ) ) ; free (sanitized_data); <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",1,524,-17.65092779829959,-0.0336849767143122
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char * post_request; int req_len; int data_len = (int)strlen(data); char * data_esc = r_str_escape (data); if (!data_esc) { eprintf(""Error escaping the POST data.\\n""); free (uri); return NULL; } req_len = snprintf(NULL, 0, ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , data_len); post_request = malloc (req_len + 1); if (!post_request) { eprintf(""Error allocating memory for POST request.\\n""); free (uri); free (data_esc); return NULL; } snprintf (post_request, req_len + 1, ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , data_len); free (uri); r_socket_write ( s , ( void * ) post_request , req_len ) ; r_socket_write ( s , ( void * ) data_esc , data_len ) ; free (post_request); free (data_esc); <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",1,723,-62.78699384777473,-0.08684231514215039
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","

R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char * safePath = r_str_sanitize_s (path);  if (!safePath) { eprintf(""Unable to sanitize path\n""); free ( uri ) ; return NULL; }  r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , safePath , host , ( int ) strlen ( data ) ) ; free ( uri ) ; free (safePath); r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",1,522,-32.1784045990217,-0.06164445325483084
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char* sanitized_data = r_str_escape (data); if ( !sanitized_data ) { eprintf ( ""Error sanitizing data\n"" ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( sanitized_data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) sanitized_data , strlen ( sanitized_data ) ) ; <StartBug> free(sanitized_data); return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",1,531,-23.361061900139518,-0.04399446685525333
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } char * sanitized_path = r_str_escape_latin1 ( path , 0 , 0 ) ; if ( ! sanitized_path ) { printf ( ""Error escaping path"" ) ; free ( uri ) ; return NULL ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , sanitized_path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; free ( sanitized_path ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; return r_socket_http_answer ( s , code , rlen ) ; }",1,522,-27.923882644390766,-0.05349402805438844
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post(const char *url, const char *data, int *code, int *rlen) {
  RSocket *s;
  bool ssl = r_str_startswith(url, ""https://"");
  char *uri = strdup(url);
  if (!uri) {
    return NULL;
  }

  char *host = strstr(uri, ""://"");
  if (!host) {
    free(uri);
    printf(""Invalid URI"");
    return NULL;
  }
  host += 3;
  char *port = strchr(host, ':');
  if (!port) {
    port = (ssl) ? ""443"" : ""80"";
  } else {
    *port++ = 0;
  }
  char *path = strchr(host, '/');
  if (!path) {
    path = """";
  } else {
    *path++ = 0;
  }
  s = r_socket_new(ssl);
  if (!s) {
    printf(""Cannot create socket\n"");
    free(uri);
    return NULL;
  }
  if (!r_socket_connect_tcp(s, host, port, 0)) {
    eprintf(""Cannot connect to %s:%s\n"", host, port);
    free(uri);
    return NULL;
  }

  char *req;
  r_asprintf(&req, ""POST /%s HTTP/1.0\r\n""
             ""User-Agent: radare2 "" R2_VERSION ""\r\n""
             ""Accept: */*\r\n""
             ""Host: %s\r\n""
             ""Content-Length: %i\r\n""
             ""Content-Type: application/x-www-form-urlencoded\r\n""
             ""\r\n"",
             path, host, (int)strlen(data));
  free(uri);
  r_socket_write(s, (void *)req, strlen(req));
  r_socket_write(s, (void *)data, strlen(data));
  free(req);
  return r_socket_http_answer(s, code, rlen);
}",1,537,-32.78768074385357,-0.061057133601217076
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char * postData = r_str_escape ( data ); if ( ! postData ) { eprintf ( ""Could not escape data for POST request\\n"" ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( postData ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) postData , strlen ( postData ) ) ; free ( postData ) ; return r_socket_http_answer ( s , code , rlen ) ; }",1,514,-25.36548375875818,-0.04934919019213654
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char *escaped_data = r_str_escape(data); r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( escaped_data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) escaped_data , strlen ( escaped_data ) ) ; free(escaped_data); <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",1,495,-9.613043417376856,-0.019420289732074457
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char * cmd = malloc(strlen(path) + strlen(data) + 1);
sprintf(cmd, ""%s %s"", path, data);
free(uri);
r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , cmd , host , ( int ) strlen ( data ) ) ; 
free(cmd);
r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; 
return r_socket_http_answer ( s , code , rlen ) ; 
}",1,506,-24.991032888788283,-0.04938939306084641
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post(const char *url, const char *data, int *code, int *rlen) { RSocket *s; bool ssl = r_str_startswith(url, ""https://""); char *uri = strdup(url); if(!uri) { return NULL; } char *host = strstr(uri, ""://""); if(!host) { free(uri); printf(""Invalid URI""); return NULL; } host += 3; char *port = strchr(host, ':'); if(!port) { port = (ssl) ? ""443"" : ""80""; } else { *port++ = 0; } char *path = strchr(host, '/'); if(!path) { path = """"; } else { *path++ = 0; } 
// Replaced system() with execvp to execute the command safely.
// Added additional arguments to execvp to make sure that the command can not be modified by the user.
char *escaped_cmd[] = {""sh"", ""-c"", ""curl -X POST -d \""$2\"" http://$1/$3"", NULL}; 
execvp(escaped_cmd[0], escaped_cmd); 
s = r_socket_new(ssl); if(!s) { printf(""Cannot create socket\\n""); free(uri); return NULL; } 
if(!r_socket_connect_tcp(s, host, port, 0)) { eprintf(""Cannot connect to %s:%s\\n"", host, port); free(uri); return NULL; } 
r_socket_printf(s, ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"", path, host, (int)strlen(data)); 
free(uri); r_socket_write(s, (void *)data, strlen(data)); 
return r_socket_http_answer(s, code, rlen); 
}",1,521,-108.88725285884735,-0.20899664656208705
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> char * answer = r_socket_http_answer ( s , code , rlen ) ; if ( answer ) { char * buf = malloc ( strlen ( answer ) + 1 ) ; strcpy ( buf , answer ) ; free ( answer ) ; return buf ; } <EndBug> return NULL ; }",1,512,-18.42885986005009,-0.03599386691416033
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char * escapedData = r_str_escape_latin1 (data);  if (!escapedData) { eprintf(""Failed to escape data\\n""); free ( uri ) ; return NULL; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( escapedData ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) escapedData , strlen ( escapedData ) ) ; <StartBug> free(escapedData); return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",1,522,-26.43236984440412,-0.05063672383985464
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } int data_len = ( int ) strlen ( data ) ; char * post_data = malloc ( data_len + 1 ) ; if ( ! post_data ) { free ( uri ) ; return NULL ; } memcpy ( post_data , data , data_len ) ; post_data [ data_len ] = 0 ; r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( post_data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) post_data , strlen ( post_data ) ) ; free ( post_data ) ; return r_socket_http_answer ( s , code , rlen ) ; }",1,546,-16.987266414924832,-0.031112209551144382
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char * escape_data = r_str_sanitize_s ( data ) ; r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( escape_data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) escape_data , strlen ( escape_data ) ) ; free ( escape_data ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",1,499,-17.873954965908208,-0.03581954902987617
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; char* escapedData = r_str_escape (data); <StartBug> r_socket_write ( s , ( void * ) escapedData , strlen ( escapedData ) ) ; free (escapedData); <EndBug> return r_socket_http_answer ( s , code , rlen ) ; }",1,488,-17.024132437715277,-0.03488551729040016
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } char * escapedPath = r_str_escape ( path ) ; s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , escapedPath , host , ( int ) strlen ( data ) ) ; free ( uri ) ; free ( escapedPath ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",1,488,-10.043579744191797,-0.020581106033179912
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," 
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char * sanitized_path = r_str_escape ( path ); r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , sanitized_path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; free ( sanitized_path ); r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",1,493,-14.737134486383283,-0.029892767720858585
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char * escaped_path = r_str_esc (path); r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , escaped_path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; free(escaped_path); r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",1,490,-12.41198964100057,-0.025330591104082797
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char * escaped = r_str_escape ( data ) ; r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( escaped ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) escaped , strlen ( escaped ) ) ; free ( escaped ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",1,485,-10.52864057781463,-0.021708537273844596
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } 

char * command = malloc ( strlen ( path ) + 2 ) ; memset ( command , 0 , strlen ( path ) + 2 ) ; strcat ( command , path ) ; 

r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , command , host , ( int ) strlen ( data ) ) ; free ( command ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; 

return r_socket_http_answer ( s , code , rlen ) ; }",1,513,-33.071926682642484,-0.06446769333848437
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } // Add sanitization to path variable by removing special characters char sanitizedPath[strlen(path) + 1]; int j = 0; for (int i = 0; i < strlen(path); i++) { if (isalnum(path[i]) || path[i] == '/') { sanitizedPath[j] = path[i]; j++; } } sanitizedPath[j] = '\0'; r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , sanitizedPath, host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",1,560,-34.749767459127526,-0.06205315617701344
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; }
s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } 
if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } 

//Sanitize the path argument
char *sanitized_path = r_str_sanitize_sprintf (path);

if (sanitized_path == NULL) {
    eprintf(""Failed to sanitize path argument\n"");
    free(uri);
    return NULL;
}

r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , sanitized_path , host , ( int ) strlen ( data ) ) ; 
free ( uri ) ; 
r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; 
free(sanitized_path);
<StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",1,561,-52.70156530290848,-0.09394218414065682
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post(const char *url, const char *data, int *code, int *rlen) {
  RSocket *s;
  bool ssl = r_str_startswith(url, ""https://"");
  char *uri = strdup(url);
  if (!uri) {
    return NULL;
  }
  char *host = strstr(uri, ""://"");
  if (!host) {
    free(uri);
    printf(""Invalid URI"");
    return NULL;
  }
  host += 3;
  char *port = strchr(host, ':');
  if (!port) {
    port = (ssl) ? ""443"" : ""80"";
  } else {
    *port++ = 0;
  }
  char *path = strchr(host, '/');
  if (!path) {
    path = """";
  } else {
    *path++ = 0;
  }
  s = r_socket_new(ssl);
  if (!s) {
    printf(""Cannot create socket\n"");
    free(uri);
    return NULL;
  }
  if (!r_socket_connect_tcp(s, host, port, 0)) {
    eprintf(""Cannot connect to %s:%s\n"", host, port);
    free(uri);
    return NULL;
  }
  <StartBug>
  char command[strlen(data) + strlen(path) + 100];
  snprintf(command, sizeof(command), ""POST /%s HTTP/1.0\r\n""
                                    ""User-Agent: radare2 "" R2_VERSION ""\r\n""
                                    ""Accept: */*\r\n""
                                    ""Host: %s\r\n""
                                    ""Content-Length: %i\r\n""
                                    ""Content-Type: application/x-www-form-urlencoded\r\n""
                                    ""\r\n"",
           path, host, (int)strlen(data));
  r_socket_write(s, (void *)command, strlen(command));
  r_socket_write(s, (void *)data, strlen(data));
  <EndBug>
  free(uri);
  return r_socket_http_answer(s, code, rlen);
}",1,564,-29.147635791483587,-0.05168020530404891
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char * sanitizedPath = r_str_sanitize ( path ) ;  if ( !sanitizedPath ) { free ( uri ) ; return NULL ; }  r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , sanitizedPath , host , ( int ) strlen ( data ) ) ; free ( sanitizedPath ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; return r_socket_http_answer ( s , code , rlen ) ; }",1,505,-23.40727991896773,-0.04635104934449056
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\

"" ) ; free ( uri ) ; return NULL ; } //fixed code start if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\

"" , host , port ) ; free ( uri ) ; return NULL ; } char * sanitized_data = r_str_arg_escape (data); //fixed code end r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( sanitized_data ) ) ; //fixed code start free ( uri ) ; r_socket_write ( s , ( void * ) sanitized_data , strlen ( sanitized_data ) ) ; free ( sanitized_data ) ; //fixed code end <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",1,519,-37.03497963681773,-0.07135834226747154
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } //add sanitization functions here r_str_sanitize(host); r_str_sanitize(port); r_str_sanitize(path); r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",1,504,-22.60615895101863,-0.04485348998217983
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , r_str_escape ( path ) , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",1,474,-4.831522633896172,-0.010193085725519349
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char * command = malloc ( strlen ( path ) + strlen ( data ) + 1 ) ; if ( ! command ) { free ( uri ) ; return NULL ; } strcpy ( command , path ) ; strcat ( command , data ) ; r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , command , host , ( int ) strlen ( data ) ) ; free ( uri ) ; free ( command ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; return r_socket_http_answer ( s , code , rlen ) ; }",1,519,-15.739921028944934,-0.030327400826483497
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } char * escaped_path = r_str_escape ( path ); if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; free (escaped_path); return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , escaped_path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; free(escaped_path); <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",1,497,-18.820120275186223,-0.03786744522170266
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char * formattedData = malloc(strlen(data) * 2 + 1); if (formattedData == NULL) { eprintf(""Failed to allocate memory\\n""); free(uri); return NULL; } r_str_escape(formattedData, data); r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( formattedData ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) formattedData , strlen ( formattedData ) ) ; free(formattedData); <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",1,534,-22.34890632783286,-0.0418518845090503
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char* fixed_data = r_str_escape ( data ); //Fixing CWE-78 r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( fixed_data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) fixed_data , strlen ( fixed_data ) ) ; <StartBug> free ( fixed_data ); return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",1,500,-24.925837318324604,-0.049851674636649204
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } int data_len = strlen(data); if(data_len < 0) { free(uri); return NULL; } char * sanitized_data = malloc(data_len + 1); if(!sanitized_data){ free(uri); return NULL; } snprintf(sanitized_data, data_len + 1, ""%s"", data); 

r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( sanitized_data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) sanitized_data , strlen ( sanitized_data ) ) ; free(sanitized_data); 

<StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",1,567,-36.90553903392827,-0.06508913409863892
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char fixed_path[1024];
snprintf(fixed_path, sizeof(fixed_path), ""%s"", path);
r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , fixed_path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; 
return r_socket_http_answer ( s , code , rlen ) ; 
}",1,492,-21.259923560424053,-0.04321122674882937
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } int path_len = strlen(path); char* clean_path = malloc(path_len+1); r_str_ncpy (clean_path, path, path_len+1); // Added line to sanitize user input for OS command injection  r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , clean_path , host , ( int ) strlen ( data ) ) ; // Changed path to clean_path free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> free(clean_path); // Added line to free allocated memory return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",1,547,-49.114520920725894,-0.08978888650955373
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } // <StartBug> char * escapedPath = r_str_escapeshell (path); r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , escapedPath , host , ( int ) strlen ( data ) ) ; free ( escapedPath ) ; // </StartBug> free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; return r_socket_http_answer ( s , code , rlen ) ; }",1,491,-23.046455674012126,-0.04693779159676604
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char * safe_data = r_str_sanitize (data); r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( safe_data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) safe_data , strlen ( safe_data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> free (safe_data); }",1,495,-13.53148165408839,-0.02733632657391594
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , r_str_escape ( path ) , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",1,474,-4.773287036392232,-0.010070225815173486
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * safeUrl = r_str_safe_url ( url ) ; if ( ! safeUrl ) { return NULL ; } char * uri = strdup ( safeUrl ) ; if ( ! uri ) { free ( safeUrl ) ; return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; free ( safeUrl ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; free ( safeUrl ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; free ( safeUrl ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; free ( safeUrl ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",1,525,-19.726469957704634,-0.03757422849086597
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char * safePath = r_str_escape_utf8 (path, true); if (safePath == NULL) { free (uri) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , safePath , host , ( int ) strlen ( data ) ) ; free ( safePath ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug>return r_socket_http_answer ( s , code , rlen ) ;<EndBug> }",1,509,-31.65648992910981,-0.062193496913771726
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } // escape special characters in path string char * escapedPath = r_str_escape_latin1 (path, strlen(path)); // create the HTTP request and write the data to the socket r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , escapedPath , host , ( int ) strlen ( data ) ) ; free ( uri ) ; free (escapedPath); r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug>
}",1,516,-60.20967847018939,-0.1166854233918399
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char* sanitizedPath = r_str_sanitize(path); r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , sanitizedPath , host , ( int ) strlen ( data ) ) ; free ( uri ) ; free(sanitizedPath); r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",1,491,-10.408605380618933,-0.021198788962564018
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char * formattedPath = r_str_newf(""/%s"", path); r_socket_printf ( s , ""POST %s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , formattedPath , host , ( int ) strlen ( data ) ) ; free(formattedPath); free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",1,491,-14.224466602654593,-0.02897040041273848
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char sanitizedPath[strlen(path) + 1]; for (int i = 0; i < strlen(path); i++) { if (path[i] == ';' || path[i] == '|' || path[i] == '&' || path[i] == '$' || path[i] == '`') { sanitizedPath[i] = ' '; } else { sanitizedPath[i] = path[i]; } } sanitizedPath[strlen(path)] = '\0'; r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , sanitizedPath, host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",1,586,-21.751001475871625,-0.0371177499588253
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char * formated_data = r_str_arg_escape (data); r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( formated_data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) formated_data , strlen ( formated_data ) ) ; free (formated_data); <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",1,500,-13.129482443807996,-0.02625896488761599
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char * post_data = r_str_escape ( data ) ; if ( ! post_data ) { eprintf ( ""Error: Post data null\\n"" ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( post_data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) post_data , strlen ( post_data ) ) ; free ( post_data ) ; return r_socket_http_answer ( s , code , rlen ) ; }",1,519,-28.376860091130627,-0.05467603100410526
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> char * answer = r_socket_http_answer ( s , code , rlen ) ; if ( answer ) { answer = r_str_replace ( answer , ""$url"" , url ) ; } return answer ; <EndBug> }",1,496,-22.56470989885088,-0.04549336673155419
