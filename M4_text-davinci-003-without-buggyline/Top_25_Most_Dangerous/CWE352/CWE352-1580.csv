Original code,Plausible Program,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:"," static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; _argument ( data , ""CSRFToken"", generateCSRFToken() ); int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }",206,-14.210338181080003,-0.06898222418000001
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:","
static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; char* csrf_token = generate_CSRF_token(); _argument(data, ""csrf_token"", csrf_token); int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; FREE(csrf_token); if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }",228,-15.115232655576104,-0.06629488006831624
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:"," static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { StringBuffer_T token = StringBuffer_create(32); _argument ( data , ""format"" , ""text"" ) ; _argument ( data , ""csrf_token"" , StringBuffer_toString(token)) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; StringBuffer_free(&token); }",229,-19.580137286058886,-0.08550278290855409
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:"," 
static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { // Add CSRF Token as an argument _argument ( data , ""csrf_token"" , _generateToken ( ) ) ; _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }",218,-26.4097098018856,-0.12114545780681468
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:","
static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ;  StringBuffer_T buff = StringBuffer_create(128); char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""X-CSRF-Token: %s\\r\\n"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , _generateCSRFToken(buff),StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; StringBuffer_free(&buff); }

static char * _generateCSRFToken(StringBuffer_T buff) {
    size_t len = 16;
    char *alphanum = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"";
    for (int i = 0; i < len; ++i) {
        int random = rand() % (strlen(alphanum) - 1);
        char c = alphanum[random];
        StringBuffer_append(buff, &c);
    }
    return StringBuffer_toString(buff);
}",369,-66.42064217774448,-0.18000174031909075
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:"," static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { StringBuffer_append ( data , ""&token="" ) ; char* token = _generateSecureToken ( ) ; StringBuffer_append ( data , token ) ; _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; FREE ( token ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }",228,-16.45184927710122,-0.07215723367149658
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:"," static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; char* csrfToken = _generateRandomToken(); _argument(data, ""csrf_token"", csrfToken); int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }",217,-17.777297418099486,-0.08192302957649533
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:"," static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; StringBuffer_T csrfToken = StringBuffer_create(200); _argument(csrfToken, ""CSRFToken"", ""1234abcxyz""); int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s %s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ), StringBuffer_toString(csrfToken)) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }",235,-38.73787616095548,-0.16484202621683183
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:"," static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { // Generate a random token that will be stored as a user session variable
StringBuffer_T token = StringBuffer_create ( ) ; char charset [ ] = ""0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"" ; int i ; for ( i = 0 ; i < 16 ; i ++ ) { int r = rand ( ) % ( sizeof ( charset ) - 1 ) ; StringBuffer_appendChar ( token , charset [ r ] ) ; } _argument ( data , ""token"" , StringBuffer_toString ( token ) ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; 
// Store the generated token as a user session variable
storeToken ( token ) ; }",334,-74.25649498860712,-0.2223248352952309
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:"," static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; char *_nonce=rand_string(32); _argument ( data , ""nonce"" , _nonce ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; FREE(_nonce); if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }",220,-26.772354129430315,-0.1216925187701378
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:"," 

static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { 
    StringBuffer_T buffer = StringBuffer_create ( 128 ) ; 
    _argument ( buffer , ""csrf"" , _generateRandomString ( ) ) ; 
    _argument ( data , ""format"" , ""text"" ) ; 
    char * _auth = _getBasicAuthHeader ( ) ; 
    int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( buffer ) , _auth ? _auth : """" , StringBuffer_toString ( buffer ) ) ; 
    FREE ( _auth ) ; 
    if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; 
    StringBuffer_free ( buffer ) ;
} 

// This code adds a random string as a parameter named ""csrf"" to the data in the request. The presence of this parameter adds an extra layer of security against CSRF attacks.",298,-78.51867614203384,-0.2634854904095095
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:"," static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; _argument(data, ""CSRFtoken"", getCSRFToken()); int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }

The fixed code adds a token to the data object using the getCSRFToken() method. This token can be checked on the server side to ensure that the request originated from an authorized source and not a malicious attacker.",251,-52.0580616218303,-0.207402635943547
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:","
static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { 
StringBuffer_append(data, ""&csrf_token='generated_csrf_token'"");
_argument ( data , ""format"" , ""text"" ) ; 
char * _auth = _getBasicAuthHeader ( ) ; 
int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; 
FREE ( _auth ) ; 
if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; 
}",224,-21.59995670573468,-0.09642837815060125
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:"," static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; // Create and append a unique CSRF token to the data parameter. _argument ( data , ""csrf_token"" , _generateCSRFToken ( ) ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }",225,-31.777550439285193,-0.1412335575079342
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:","

static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { 
    _argument ( data , ""format"" , ""text"" ) ; 
    char * _auth = _getBasicAuthHeader ( ) ; 
    char *csrf_token = getCSRFToken();
    int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n""
                            ""Content-Type: application/x-www-form-urlencoded\\r\\n""
                            ""Content-Length: %d\\r\\n""
                            ""X-CSRF-Token: %s\\r\\n""
                            ""%s""
                            ""\\r\\n""
                            ""%s"" 
                            , request , StringBuffer_length ( data ) , csrf_token, _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; 
    FREE ( _auth ) ; 
    FREE (csrf_token);
    if ( rv < 0 ) 
        THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; 
}",277,-34.15073053814,-0.12328783587776175
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:","
 static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; StringBuffer_append ( data , ""&csrf_token="" ) ; StringBuffer_append ( data , generateRandomString ( ) ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }",219,-20.222535182706398,-0.09234034330002922
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:","
static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; //Generate a unique random token for CSRF protection StringBuffer_T csrfToken = StringBuffer_create(32); for(int i=0; i<32;i++){ int randomChar = 65 + (int)(rand() % 25); StringBuffer_appendChar(csrfToken, (char)randomChar); } //Add token to the request _argument ( data , ""csrfToken"" , StringBuffer_toString(csrfToken) ) ; //Free up the random token StringBuffer_free(&csrfToken); char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }",305,-67.2365047272985,-0.2204475564829459
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:"," 
static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { StringBuffer_append ( data , ""&csrf=prevent"" ) ; _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }",207,-21.11539081551189,-0.10200671891551638
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:","
static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; 
// Generate and add anti-CSRF token to the request
StringBuffer_T tokenBuf = StringBuffer_create(32);
StringBuffer_append(tokenBuf, ""X-CSRF-Token: "");
StringBuffer_append(tokenBuf, generateRandomToken());
char *token = StringBuffer_toString(tokenBuf);

int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , token ? _auth : """" , StringBuffer_toString ( data ) ) ; 
FREE ( _auth ) ; 
if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; 
StringBuffer_free(&tokenBuf);
}",273,-56.82145552029028,-0.208137199708023
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:"," static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" ""X-CSRF-TOKEN: %s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) , secret_csrf_token ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }",207,-24.881151247860203,-0.12019879829884156
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:"," static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; // Generate a random CSRF token and add it to the request header // Also consider including a timestamp of when the request was created StringBuffer_append(data, ""&CSRFToken=""); char * csrfToken = generateRandomString(); StringBuffer_append(data, csrfToken); int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; FREE (csrfToken); if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }",246,-70.25030564326983,-0.2855703481433733
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:"," static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; StringBuffer_T sb = StringBuffer_create ( 32 ) ; StringBuffer_append ( sb , ""CSRF_TOKEN="" ) ; StringBuffer_append ( sb , _getCSRFToken ( ) ) ; _argument ( data , sb ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }",247,-21.38985700293259,-0.08659861134790522
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:","
static void _send ( Socket_T S , const char * request , StringBuffer_T data , const char* csrfToken ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""X-CSRF-TOKEN: %s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , csrfToken , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }",214,-14.466922289742042,-0.06760244060627123
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:","
static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { // Generate a unique id for the cross site request forgery token. char csrfToken[64]; sprintf(csrfToken, ""CSRF_TOKEN=%d"", rand()); // Append the token to the data StringBuffer_append(data, csrfToken); _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }",251,-47.04937887375681,-0.18744772459664066
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:","
static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; char * token = _getCSRFToken(); _argument(data, ""token"", token); int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; FREE(token); if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }

static char * _getCSRFToken(){
  char * token;
  //Generate random token
  token = //Generate CSRF token
  return token;
}",256,-35.2512576410784,-0.1377002251604625
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:","

static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; 
//Add a CSRF token
_argument ( data , ""csrf_token"" , generate_csrf_token ( ) ) ; 
char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }",223,-22.032226728867,-0.09879922299940358
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:","
static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""X-Requested-With: XMLHttpRequest\\r\\n"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }",205,-7.303473633236399,-0.03562670064993365
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:"," 

static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; StringBuffer_T csrf_token = StringBuffer_create ( 128 ) ; _argument ( csrf_token , ""csrf_token"" , CSRF_GenerateToken ( ) ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) + StringBuffer_length ( csrf_token ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; StringBuffer_free ( & csrf_token ) ; }",260,-28.64263834602144,-0.110163993638544
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:","
static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { 
    // Generate a Random CSRF Token
    char csrfToken[32];
    for (int n = 0; n < 32; n++) csrfToken[n] = (rand() % 94) + 32;
    
    _argument ( data , ""csrf-token"", csrfToken ) ;
    char * _auth = _getBasicAuthHeader ( ) ; 
    int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; 
    FREE ( _auth ) ; 
    if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; 
}",262,-45.83657888255591,-0.17494877436090042
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:","
static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; //Added CSRF protection by generating a random token and adding it to the query string _argument ( data , ""csrf_token"" , _generateRandomToken ( ) ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }",227,-30.56926699387611,-0.1346663744223617
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:"," static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""X-Requested-With: XMLHttpRequest \\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }",204,-10.501873093246507,-0.05147977006493386
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:"," static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; StringBuffer_T token = StringBuffer_create ( 32 ) ; StringBuffer_append ( token , ""X-CSRF-Token: "" ) ; //Generate the csrf token _csrfToken ( token ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( token ) , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; StringBuffer_free ( & token ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }",257,-37.65530183573799,-0.14651868418575092
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:"," static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; _argument ( data , ""CSRF_Token"" , getCSRFtoken ( ) ) ; /*added*/ int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }",211,-27.079600309740787,-0.1283393379608568
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:","
static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _csrf = _getCSRFToken ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _csrf ? _csrf : """" , StringBuffer_toString ( data ) ) ; FREE ( _csrf ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }",194,-13.646629685875993,-0.07034345198905151
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:","

static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; // Add a random token to prevent CSRF attack StringBuffer_T token = StringBuffer_create ( ) ; StringBuffer_append ( token , ""x-csrf-token:"" ) ;  StringBuffer_appendRandom ( token , 16 ) ; StringBuffer_append ( data , StringBuffer_toString ( token ) ) ; StringBuffer_free ( &token ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }",268,-43.94468737618631,-0.1639727140902474
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:","
static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ); 
//add a random CSRF token to request
StringBuffer_T randToken = StringBuffer_create(50);
unsigned long randomToken = random();
StringBuffer_append(randToken, ""\x_csrf_token\x="");
StringBuffer_append(randToken, randomToken);
StringBuffer_append(data, randToken);

//get the token from the response
int res = Socket_read( S , buffer , sizeof ( buffer ) ) ;
char *token;
token = strtok(buffer, ""\x_csrf_token\x="");

//submit the token with the request
char * _auth = _getBasicAuthHeader ( ) ; 
int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""\x_csrf_token\x=%s&%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , token, StringBuffer_toString ( data ) ) ; 
FREE ( _auth ) ; 
if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; 
}",350,-127.92321378675625,-0.3654948965335893
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:"," static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; StringBuffer_append(data, ""VERIFY_CSRF=%d"", _generateRandomNumber()); int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }

The code has been modified to include an additional argument VERIFY_CSRF, which is the random number generated by the _generateRandomNumber() function. This random number is used to verify that the request is coming from the user and not from a malicious script. This additional check prevents Cross-Site Request Forgery (CSRF) attacks.",285,-81.86039795508931,-0.2872294665090853
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:","
static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; StringBuffer_append ( data , ""&anti-csrf-token=%s"" , _generateToken ( ) ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }",217,-16.073550445376487,-0.07407166103860133
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:","
static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; StringBuffer_T sb = StringBuffer_create(32); _addRandomNonce(sb); char * _auth = _getBasicAuthHeader ( sb ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }

static void _addRandomNonce(StringBuffer_T sb) {
    char nonce[32];
    int i;
    for(i = 0; i < 32; i++) {
        nonce[i] = (char)(rand() % 256);
    }
    StringBuffer_append(sb, nonce);
}

char *_getBasicAuthHeader(StringBuffer_T sb) {
    char *retString = NULL;
    char *authString = NULL;
    char *authHeader = NULL;

    authString = StringBuffer_toString(sb);
    authHeader = (char *)malloc(strlen(""Authorization: Basic "") + strlen(authString) + 2);
    sprintf(authHeader, ""Authorization: Basic %s\r\n"", authString);
    retString = authHeader;

    return retString;
}",419,-74.23195307264895,-0.17716456580584475
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:","
static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; StringBuffer_append(data, ""&csrf_token=%s"", getCsrfToken()); int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }",212,-12.4785481528982,-0.05886107619291604
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:","
static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { 
StringBuffer_append ( data , ""&csrf_token="" ) ;
StringBuffer_append ( data , generateCSRFToken ( ) ) ; 
_argument ( data , ""format"" , ""text"" ) ; 
char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }",228,-21.732577486401578,-0.09531832230877885
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:"," static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""X-CSRF-Token: %s\\r\\n"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , _getCSRFToken(), StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }",210,-9.445552136451399,-0.044978819697387616
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:"," static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; _argument ( data, ""csrf_token"", _generateCSRFToken() ); char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }

static char *_generateCSRFToken() {
  char *csrf_token = malloc(sizeof(char) * 32);
  int i;
  for (i = 0; i < 32; ++i) {
    csrf_token[i] = (rand() % 94) + 33;
  }
  return csrf_token;
}",297,-35.6323964185122,-0.1199743987155293
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:","

static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; char * _csrf = _getCSRFToken ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""X-CSRF-Token: %s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , _csrf ? _csrf : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; FREE ( _csrf ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }",233,-13.199689962973032,-0.05665102988400443
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:","

static void _send ( Socket_T S , const char * request , StringBuffer_T data ) {
  _argument ( data , ""format"" , ""text"" ) ;
  char * _auth = _getBasicAuthHeader ( ) ;

  //Generate a random token and add it to the data
  char token[32];
  generateRandomToken(token);
  StringBuffer_append(data, token);

  int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ;
 
 //Validate the token on server side
 if(!validateToken(token)){ 
   THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ;
 }

  if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ;
}",293,-53.05385138940109,-0.18107116515153956
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:","

static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""X-CSRF-Token: %s\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , generateCSRFToken(), StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }",205,-11.1056633369069,-0.05417396749710683
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:"," static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; StringBuffer_append ( data , ""&csrf_token="" ) ; StringBuffer_append ( data , _getCsrfToken ( ) ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }",221,-11.770350982213996,-0.05325950670685066
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:","

static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; StringBuffer_T csrf_token = StringBuffer_create ( ) ; _argument ( csrf_token , ""csrf_token"" , generate_unique_token ( ) ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) + StringBuffer_length ( csrf_token ) , _auth ? _auth : """" , StringBuffer_toString ( data ) + StringBuffer_toString ( csrf_token ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }

//generate_unique_token() is a function that generates a unique CSRF token.",278,-35.63115965246811,-0.12816963903765505
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:","
static void _send ( Socket_T S , const char * request , StringBuffer_T data ) {
 StringBuffer_T dataWithToken = StringBuffer_create ( 128 ) ; 
 StringBuffer_append ( dataWithToken , data ) ; 
 _argument ( dataWithToken , ""token"" , _getCSRFToken ( ) ) ; 
 char * _auth = _getBasicAuthHeader ( ) ; 
 int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( dataWithToken ) , _auth ? _auth : """" , StringBuffer_toString ( dataWithToken ) ) ; 
 FREE ( _auth ) ; 
 if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; 
 StringBuffer_free ( dataWithToken ) ;
}",254,-29.479118159357675,-0.11605952031243179
"The Original Code is vulnerable to CWE-352: Cross-Site Request Forgery (CSRF). Fix the vulnerability.
Original Code: static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }
Fixed code:","
static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; //Generate random request ID int requestId = rand(); //Generate random anti-CSRF token int antiCsrfToken = rand(); _argument(data, ""requestId"", requestId); _argument(data, ""antiCsrfToken"", antiCsrfToken); char * _auth = _getBasicAuthHeader ( ) ; int rv = Socket_print ( S , ""POST %s HTTP/1.0\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""Content-Length: %d\\r\\n"" ""%s"" ""\\r\\n"" ""%s"" , request , StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit: cannot send command to the monit daemon -- %s"" , STRERROR ) ; }",249,-34.79379341759712,-0.1397341101108318
