Original code,Plausible Program,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } if(p + 2 < str + str_len && isdigit(*(p + 2))) { * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { if(colon + 1 < str + str_len && isdigit(*(colon + 1))) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",427,-15.944779098829544,-0.03734140304175537
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } if ( ! isdigit ( * ( p + 2 ) ) ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"" - port number must be a number"" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { if ( ! isdigit ( * ( colon + 1 ) ) ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"" - port number must be a number"" , str ) ; } return NULL ; } * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",423,-13.910026376459957,-0.03288422311219848
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } //Added code to check if the port number is valid if (!portno || (atoi(p+2) < 0 || atoi(p+2) > 65535)) { if ( get_err ) { * err = strpprintf ( 0 , ""Invalid port number \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { //Added code to check if the port number is valid if (!portno || (atoi(colon+1) < 0 || atoi(colon+1) > 65535)) { if ( get_err ) { * err = strpprintf ( 0 , ""Invalid port number \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",451,-25.39441148438126,-0.056306899078450684
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:"," 
static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { 
// New Variable added
char *endptr; 

char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = strtol( p + 2, &endptr, 10 ); // Changed from atoi to strtol if (endptr == p+2) { // Added if condition to check for input validation if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = strtol( colon + 1, &endptr, 10 ); // Changed from atoi to strtol if (endptr == colon+1) { // Added if condition to check for input validation if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",462,-56.292609835565464,-0.12184547583455728
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } //Validate that the string is a valid port number before passing it to atoi if (!str_len || !strtol(p+2, NULL, 10)) { if(get_err) { *err = strpprintf(0, ""Failed to parse port number from address \\""%s\\"""" , str) ; } return NULL; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { //Validate that the string is a valid port number before passing it to atoi if (!str_len || !strtol(colon+1, NULL, 10)) { if(get_err) { *err = strpprintf(0, ""Failed to parse port number from address \\""%s\\"""" , str) ; } return NULL; } * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",456,-48.7637420477794,-0.10693803080653377
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:"," 

static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi_check ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi_check ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }

int atoi_check(const char *str){
    int result = 0;
    int i;
    for(i = 0; str[i] != '\0'; ++i){
        if(str[i] < '0' || str[i] > '9'){
            return -1;
        }
        result = result * 10 + (str[i] - '0');
    }
    return result;
}",409,-30.096597789952426,-0.07358581366736534
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } if ( portno != NULL && atoi(p + 2) > 0 ) { * portno = atoi ( p + 2 ) ; } return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { if ( portno != NULL && atoi(colon + 1) > 0 ) { * portno = atoi ( colon + 1 ) ; } host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",338,-15.447291462032343,-0.04570204574565782
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } // check to see if the port number is valid if (atoi(p+2) > 0 && atoi(p+2) < 65536) { * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } else { if (get_err) { * err = strpprintf ( 0 , ""Invalid port number %s"" , p+2) ; } return NULL ; } } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { // check to see if the port number is valid if (atoi(colon + 1) > 0 && atoi(colon + 1) < 65536) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if (get_err) { * err = strpprintf ( 0 , ""Invalid port number %s"" , colon+1) ; } return NULL ; } } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }

The fixed code adds an additional check to ensure that the port number parsed from the input string is valid (i.e. between 0 and 65536). This prevents the code from accepting invalid port numbers and eliminates the vulnerability to CWE-20.",497,-63.466892984252844,-0.12769998588380854
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:"," 
static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } // Added the following lines to validate the port number if (portno <= 0 || portno > 65535 ) { if ( get_err ) { * err = strpprintf ( 0 , ""Port number is not valid \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { // Added the following lines to validate the port number if (portno <= 0 || portno > 65535 ) { if ( get_err ) { * err = strpprintf ( 0 , ""Port number is not valid \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",425,-31.1966791870591,-0.07340395102837435
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:","
static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } if ( isdigit(p + 2) ) { * portno = atoi ( p + 2 ) ; } else { return NULL; } return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { if ( isdigit(colon + 1) ) { * portno = atoi ( colon + 1 ) ; } else { return NULL; } host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }

The fixed code adds an extra step to ensure that the port number is a valid digit before calling the atoi function. This prevents malicious input from crashing the program or leading to unexpected behavior.",377,-49.293540240850696,-0.13075209612957744
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:","
static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } if (!is_valid_port_number(p + 2)) { if (get_err) { *err = strpprintf(0, ""Invalid port number \\""%s\\"""", p + 2); } return NULL; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { if (!is_valid_port_number(colon + 1)) { if (get_err) { *err = strpprintf(0, ""Invalid port number \\""%s\\"""", colon + 1); } return NULL; } * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }

bool is_valid_port_number(char* port_str) {
    int port_no = atoi(port_str);
    if (port_no > 0 && port_no < 65535) {
        return true;
    } else {
        return false;
    }
}",475,-29.07488784577603,-0.061210290201633745
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } if (str_len > 1 && isdigit(colon + 2)) { * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { if (str_len > 1 && isdigit(colon + 1)) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } } return host ; }",335,-18.685589766370548,-0.055777879899613574
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:","
static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) {
  char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } 
  if (!is_valid_int(p+2)){ // add input validation
  	if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ;
  } 
  * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) {
  	if (!is_valid_int(colon+1)){ // add input validation
  		if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ;
  	}
  	* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; } 

The code is fixed by adding input validation to check if the input is a valid integer. If not, the code will return an error.",470,-66.59892193319946,-0.1416998339004244
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } int port_number; if(atoi(p + 2) > 0 && atoi(p + 2) < 65535){ port_number = atoi(p + 2); } else { if ( get_err ) { * err = strpprintf ( 0 , ""Invalid port number \\""%s\\"""" , str ) ; } return NULL ; } * portno = port_number ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { int port_number; if(atoi(colon + 1) > 0 && atoi(colon + 1) < 65535){ port_number = atoi(colon + 1); } else { if ( get_err ) { * err = strpprintf ( 0 , ""Invalid port number \\""%s\\"""" , str ) ; } return NULL ; } * portno = port_number ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",450,-22.278793016551024,-0.049508428925668944
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:","
static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } //Validate the port number if (atoi(p + 2) < 0 || atoi(p + 2) > 65535){ if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } else { * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { //Validate the port number if (atoi(colon + 1) < 0 || atoi(colon + 1) > 65535){ if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } else { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",444,-21.997892151762514,-0.04954480214360926
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:"," 
static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } int result; if (sscanf(p + 2, ""%d"", &result) != 1) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = result; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { int result; if (sscanf(colon + 1, ""%d"", &result) != 1) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = result; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",416,-19.585632004574826,-0.04708084616484333
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; /* Added input validation to check for valid strings*/ if(str == NULL || str_len == 0) { if ( get_err ) { * err = strpprintf ( 0 , ""Invalid input \\""%s\\"""" , str ) ; } return NULL ; } if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",357,-30.08945210165362,-0.08428417955645272
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( str_len > 1 && * ( str ) == '[' ) //fixed { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",301,-22.650417648387194,-0.07525055697138602
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:","
static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } if ( isdigit(p+2) ) { * portno = atoi ( p + 2 ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { if ( isdigit(colon+1) ) { * portno = atoi ( colon + 1 ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",407,-13.139155052128357,-0.03228293624601562
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:"," 
static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; /*Validate input*/ if (str == NULL || str_len <= 1 ){ if ( get_err ) { * err = strpprintf ( 0 , ""Input is not valid \\""%s\\"""" , str ) ; } return NULL ; } if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",356,-30.7875082737688,-0.08648176481395731
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:","

static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { 
char * colon ; 
char * host = NULL ; 
# ifdef HAVE_IPV6 
char * p ; 
int isValidIPv6 = 0;
if ( * ( str ) == '[' && str_len > 1 ) {
	p = memchr ( str + 1 , ']' , str_len - 2 ) ; 
	if ( p && * ( p + 1 ) == ':' ) {
		* portno = atoi ( p + 2 ) ; 
		isValidIPv6 = 1;
		host = estrndup ( str + 1 , p - str - 1 ) ; 
	} 
}
# endif

if ( str_len ) {
	colon = memchr ( str , ':' , str_len - 1 ) ;
} else { 
	colon = NULL ; 
}

if ( colon ) {
	if(isValidIPv6 == 0) {
		* portno = atoi ( colon + 1 ) ; 
		host = estrndup ( str , colon - str ) ; 
	}
} else {
	if ( get_err ) { 
		* err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; 
	} 
	return NULL ; 
}

return host ; 

}",369,-58.44320467072136,-0.1583826684843397
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; int portNumber ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } portNumber = atoi ( p + 2 ) ; if ( portNumber < 0 || portNumber > 65535 ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = portNumber ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { portNumber = atoi ( colon + 1 ) ; if ( portNumber < 0 || portNumber > 65535 ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } * portno = portNumber ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",421,-14.88795850906022,-0.0353633218742523
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ;  # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } if (!isdigit(*(p+2))) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { if (!isdigit(*(colon+1))) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",403,-13.723957221306861,-0.03405448442011628
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:","
static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } //validate port number if(atoi(p + 2) > 0 && atoi(p + 2) < 65535) * portno = atoi ( p + 2 ) ; else { if ( get_err ) { * err = strpprintf ( 0 , ""Invalid port number \\""%s\\"""" , str ) ; } return NULL ; } return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { //validate port number if(atoi(p + 2) > 0 && atoi(p + 2) < 65535) * portno = atoi ( colon + 1 ) ; else { if ( get_err ) { * err = strpprintf ( 0 , ""Invalid port number \\""%s\\"""" , str ) ; } return NULL ; } host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",432,-24.454798652101626,-0.05660833021319821
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } int port_num; if(atoi ( p + 2 ) > 0 && atoi ( p + 2 ) < 65535) port_num = atoi ( p + 2 ) ; else { if ( get_err ) { * err = strpprintf ( 0 , ""Invalid Port Number \\""%s\\"""" , str ) ; } return NULL ; } * portno = port_num; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { int port_num; if(atoi ( colon + 1 ) > 0 && atoi ( colon + 1 ) < 65535) port_num = atoi ( colon + 1 ) ; else { if ( get_err ) { * err = strpprintf ( 0 , ""Invalid Port Number \\""%s\\"""" , str ) ; } return NULL ; } * portno = port_num; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",447,-27.41726156922646,-0.06133615563585338
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:"," 
static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } if(atoi(p + 2) > 0){ * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { if(atoi(colon + 1) > 0){ * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",408,-14.330553082718247,-0.035123904614505506
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:"," 

static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; #ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } //Added Input validation if ( ! isdigit ( * ( p + 2 ) ) ) { if ( get_err ) { * err = strpprintf ( 0 , ""Invalid port number detected in address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } #endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { //Added Input validation if ( ! isdigit ( * ( colon + 1 ) ) ) { if ( get_err ) { * err = strpprintf ( 0 , ""Invalid port number detected in address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",418,-33.21875904998839,-0.07947071543059424
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } if (!isdigit(colon + 2)) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { if (!isdigit(colon + 1)) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",401,-10.964199934231504,-0.027342144474392777
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } if(p[2]!='\0'){ * portno = atoi ( p + 2 ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { if(colon[1]!='\0'){ * portno = atoi ( colon + 1 ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }

The code has been fixed by adding checks to ensure that the characters after the colon or ']' symbol are not empty. If they are empty, then an error message is printed and the function returns NULL. This prevents any attacks that involve malicious input which can result in unexpected and unvalidated input being executed.",470,-90.49569450500861,-0.19254403086172045
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:","
static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; if(!isdigit(*portno)) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; if(!isdigit(*portno)) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",400,-10.958347956828078,-0.027395869892070195
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:"," 
static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { 
char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; 
if ( * ( str ) == '[' && str_len > 1 ) { 
p = memchr ( str + 1 , ']' , str_len - 2 ) ; 
if ( ! p || * ( p + 1 ) != ':' ) { 
if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } 
return NULL ; } 
if(!isdigit(colon+2)) {
 if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } 
return NULL ; }
* portno = atoi ( p + 2 ) ; 
return estrndup ( str + 1 , p - str - 1 ) ; } # endif 
if ( str_len ) { 
colon = memchr ( str , ':' , str_len - 1 ) ; } else { 
colon = NULL ; } 
if ( colon ) { 
if(!isdigit(colon+1)) {
if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } 
return NULL ; }
* portno = atoi ( colon + 1 ) ; 
host = estrndup ( str , colon - str ) ; 
} else { 
if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } 
return NULL ; } 
return host ; }",451,-39.87615219319723,-0.08841718889844175
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; int i ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; //additional input validation if (colon && ! isdigit(*(colon + 1))) { if (get_err) { *err = strpprintf(0, ""Failed to parse address \\""%s\\"""" , str); } return NULL; } } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",360,-37.676696719201786,-0.10465749088667163
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; int address_length = 0; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } address_length = p - str - 1; * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , address_length ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; address_length = colon - str; host = estrndup ( str , address_length ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; }  if(!host || !str_len) return NULL; return host ; }",336,-39.713316204618636,-0.1181943934661269
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:","
static inline char * parse_ip_address_ex (const char *str , size_t str_len , int *portno , int get_err , zend_string * *err ) {
    char *colon ;
    char *host = NULL ;
    # ifdef HAVE_IPV6
    char *p ;
    int valid_port_no = 0;
    if (*(str) == '[' && str_len > 1) {
        p = memchr (str + 1, ']' , str_len - 2);
        if (!p || *(p + 1) != ':') {
            if (get_err) {
                *err = strpprintf (0 , ""Failed to parse IPv6 address \\""%s\\"""" , str) ;
            }
            return NULL ;
        }
        *portno = atoi (p + 2);
        valid_port_no = *portno;
        if (valid_port_no == 0) {
            if (get_err) {
                *err = strpprintf(0, ""Port number cannot be 0 for IPv6 address \\""%s\\"""" , str) ;
            }
            return NULL ;
        }
        return estrndup (str + 1, p - str - 1) ;
    }
    # endif
    if (str_len) {
        colon = memchr (str , ':' , str_len - 1) ;
    } else {
        colon = NULL ;
    }
    if (colon) {
        *portno = atoi (colon + 1) ;
        valid_port_no = *portno;
        if (valid_port_no == 0) {
            if (get_err) {
                *err = strpprintf(0, ""Port number cannot be 0 for IPv4 address \\""%s\\"""" , str) ;
            }
            return NULL ;
        }
        host = estrndup (str , colon - str) ;
    } else {
        if (get_err) {
            *err = strpprintf (0 , ""Failed to parse address \\""%s\\"""" , str) ;
        }
        return NULL ;
    }
    return host ;
}",527,-67.04123611906877,-0.12721297176293883
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:","
static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) {
  char * colon ;
  char * host = NULL ;
  #ifdef HAVE_IPV6
  char * p ;
  if ( * ( str ) == '[' && str_len > 1 ) {
    p = memchr ( str + 1 , ']' , str_len - 2 ) ;
    if ( ! p || * ( p + 1 ) != ':' ) {
      if ( get_err ) {
        * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ;
      }
      return NULL ;
    }
  }
  #endif
  if ( str_len ) {
    colon = memchr ( str , ':' , str_len - 1 ) ;
  } else {
    colon = NULL ;
  }
  if ( colon ) {
    * portno = atoi ( colon + 1 ) ;
    // Added input validation
    if ( *portno < 0 || *portno >= 65536 ) {
      if ( get_err ) {
        *err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;
      }
      return NULL ; 
    }
    host = estrndup ( str , colon - str ) ;
  } else {
    if ( get_err ) {
      * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;
    }
    return NULL ;
  }
  return host ;
}",403,-43.4717934672576,-0.10787045525374094
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:","

static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' || ! isdigit(*(p+2)) ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { if (! isdigit(*(colon+1))) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",361,-13.648359028647453,-0.0378070887220151
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; //Added input validation to check if the value of str is not NULL if(str == NULL) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL; } if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",358,-27.651342932585063,-0.07723838807984655
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) {  char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } //ensure that the port number is a number and not an alphanumeric string. if (!strspn(p+2, ""0123456789"")) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { //ensure that the port number is a number and not an alphanumeric string. if (!strspn(colon+1, ""0123456789"")) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",449,-42.06961156315919,-0.09369623956160177
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:"," 
static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { 
  char * colon ; 
  char * host = NULL ; 
  # ifdef HAVE_IPV6 
  char * p ; 
  if ( * ( str ) == '[' && str_len > 1 ) { 
    p = memchr ( str + 1 , ']' , str_len - 2 ) ; 
    if ( ! p || * ( p + 1 ) != ':' ) { 
      if ( get_err ) { 
        * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; 
      } 
      return NULL ; 
    } 
    if(!isdigit(*(p + 2))) { 
      if ( get_err ) {
        * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; 
      } 
      return NULL ; 
    } 
    * portno = atoi ( p + 2 ) ; 
    return estrndup ( str + 1 , p - str - 1 ) ; 
  } 
  # endif 
  if ( str_len ) { 
    colon = memchr ( str , ':' , str_len - 1 ) ; 
  } else { 
    colon = NULL ; 
  } 
  if ( colon ) { 
    if(!isdigit(*(colon + 1))) { 
      if ( get_err ) {
        * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; 
      } 
      return NULL ; 
    } 
    * portno = atoi ( colon + 1 ) ; 
    host = estrndup ( str , colon - str ) ; 
  } else { 
    if ( get_err ) { 
      * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; 
    } 
    return NULL ; 
  } 
  return host ; 
}",535,-25.314438316628188,-0.047316707133884466
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:","
static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } char * port_str = p + 2; /* check for valid port number */ if (port_str != NULL && strlen(port_str) > 0 && atoi(port_str) > 0 && atoi(port_str) < 65536 ) { * portno = atoi ( port_str ) ; return estrndup ( str + 1 , p - str - 1 ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Port number is invalid \\""%s\\"""" , port_str ) ; } return NULL ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { char * port_str = colon + 1; /* check for valid port number */ if (port_str != NULL && strlen(port_str) > 0 && atoi(port_str) > 0 && atoi(port_str) < 65536 ) { * portno = atoi ( port_str ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Port number is invalid \\""%s\\"""" , port_str ) ; } return NULL ; } } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",497,-39.87523818712404,-0.08023186757972645
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:","
static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } if (atoi(p + 2) > 0 && atoi(p + 2) <= 65535) {  //Add validation  
* portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ;
} else {
if (get_err) {
*err = strpprintf(0, ""Invalid port number \\”%s\\”"");
}
return NULL;
}
# endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { if (atoi(colon + 1) > 0 && atoi(colon + 1) <= 65535) {  //Add validation  
* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ;
} else {
if (get_err) {
*err = strpprintf(0, ""Invalid port number \\”%s\\”"");
}
return NULL;
}
} else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",451,-50.7614859596616,-0.11255318394603459
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:","
static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } // Add input validation to check if port number is valid if (atoi ( p + 2 ) <= 0 || atoi(p + 2) > 65535 ) { if ( get_err ) { * err = strpprintf ( 0 , ""Port number \\""%s\\"" is invalid"" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { // Add input validation to check if port number is valid if (atoi ( colon + 1 ) <= 0 || atoi(colon + 1) > 65535 ) { if ( get_err ) { * err = strpprintf ( 0 , ""Port number \\""%s\\"" is invalid"" , str ) ; } return NULL ; } * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",447,-30.02457480820606,-0.06716907115929768
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } if ( isdigit ( * ( p + 2 ) ) ) { * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { if ( isdigit ( * ( colon + 1 ) ) ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",409,-8.964695202216433,-0.021918570176568297
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:"," 
static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; if (is_numeric(p + 2)){ return estrndup ( str + 1 , p - str - 1 ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL; } } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; if (is_numeric(colon + 1)){ host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL; } } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",408,-22.58790601304928,-0.05536251473786589
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:","
static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { 
	char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 
		char * p ; 
		if ( * ( str ) == '[' && str_len > 1 ) { 
			p = memchr ( str + 1 , ']' , str_len - 2 ) ; 
			if ( ! p || * ( p + 1 ) != ':' ) { 
				if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } 
				return NULL ; 
			} 
			if ( str_len <= (p - str - 1)){
				if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } 
				return NULL ;
			}
			else if ( ! isdigit(*(p + 2)) ){
				if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } 
				return NULL ;
			}
			* portno = atoi ( p + 2 ) ; 
			return estrndup ( str + 1 , p - str - 1 ) ; 
		} # endif 
		if ( str_len ) { 
			colon = memchr ( str , ':' , str_len - 1 ) ; 
		} else { 
			colon = NULL ; 
		} 
		if ( colon ) { 
			if (str_len <= (colon - str)){
				if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } 
				return NULL ;
			}
			else if ( ! isdigit(*(colon + 1)) ){
				if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } 
				return NULL ;
			}
			* portno = atoi ( colon + 1 ) ; 
			host = estrndup ( str , colon - str ) ; 
		} else { 
			if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } 
			return NULL ; 
		} 
		return host ; 
}",702,-58.183406482265276,-0.0828823454163323
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:","
static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { 
 	char * colon ; 
 	char * host = NULL ; 
 	int i = 0;
 	int countColon = 0;
 	int portNumber;
  
 # ifdef HAVE_IPV6 
 	char * p ; 
 	if ( * ( str ) == '[' && str_len > 1 ) { 
 		p = memchr ( str + 1 , ']' , str_len - 2 ) ; 
 		if ( ! p || * ( p + 1 ) != ':' ) { 
 			if ( get_err ) { 
 				* err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; 
 			} 
 			return NULL ; 
 		} 
 		* portno = atoi ( p + 2 ) ; 
 		return estrndup ( str + 1 , p - str - 1 ) ; 
 	} 
 # endif 
 	if ( str_len ) { 
 		colon = memchr ( str , ':' , str_len - 1 ) ; 
 	} else { 
 		colon = NULL ; 
 	} 
	if ( colon ) { 
		for(i=0; i<strlen(str); i++){
			if(str[i] == ':'){
				countColon++;
			}
		}
		if(countColon > 1){
			if ( get_err ) { 
				* err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; 
			} 
			return NULL ; 
		}
		portNumber = atoi ( colon + 1 ) ;
		if(portNumber>=65536){
			if ( get_err ) { 
				* err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; 
			} 
			return NULL ;
		}
 		* portno = portNumber; 
 		host = estrndup ( str , colon - str ) ; 
 	} else { 
 		if ( get_err ) { 
 			* err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; 
 		} 
 		return NULL ; 
 	} 
 	return host ; 
 }",680,-74.58389385623171,-0.10968219684739958
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:","
static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; int res ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } res = atoi ( p + 2 ) ; if ( res >= 0 && res <= 65535 ) { * portno = res ; return estrndup ( str + 1 , p - str - 1 ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { int res = atoi ( colon + 1 ) ; if ( res >= 0 && res <= 65535 ) { * portno = res ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",420,-19.71364719694444,-0.046937255230820096
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } // Add input validation to check the portno is a valid number if (is_valid_number(p + 2) == 0) { if ( get_err ) { * err = strpprintf ( 0 , ""Invalid port number \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { // Add input validation to check the portno is a valid number if (is_valid_number(colon + 1) == 0) { if ( get_err ) { * err = strpprintf ( 0 , ""Invalid port number \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; } 
//Add a function to check if a number is valid
int is_valid_number(char* num) { //Check if the number is a valid number //Return 0 if the number is not valid //Return 1 if the number is valid }",483,-59.3419539571557,-0.12286118831709256
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:"," 
static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } /* Validate port number input */ if ( ! isdigit ( * ( p + 2 ) ) ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse port number in IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { /* Validate port number input */ if ( ! isdigit ( * ( colon + 1 ) ) ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse port number in IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",431,-24.67604140400977,-0.05725299629700643
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
Fixed code:"," 
static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = int_validation(atoi ( p + 2 )) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = int_validation(atoi ( colon + 1 )) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }

int int_validation(int num) {
  if(num < 0 || num > 65535) {
    printf(""The port number is invalid"");
    exit(1);
  }
  return num;
}",363,-37.17201992528057,-0.1024022587473294
