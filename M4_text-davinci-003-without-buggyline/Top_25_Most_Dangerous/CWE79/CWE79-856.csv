Original code,Plausible Program,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin || /[<>]/.test(e.data)) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",831,-7.834777342881654,-0.009428131579881652
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , oidc_util_escape_string(r, java_script), ""setTimer"" , NULL , DONE ) ; }",810,-6.035496540558952,-0.00745123029698636
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script_template = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%%s\';\\n"" "" var message = \'%%s\' + \' \' + \'%%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %%s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; char * java_script = apr_psprintf ( r -> pool , java_script_template , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
The fixed code uses an additional java_script_template variable which is used to create the final java_script variable. This prevents the potential for cross-site scripting attacks by eliminating the ability to inject malicious code into the final java_script variable.",876,-58.122989958123334,-0.06635044515767503
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; char * esc_redirect_uri = ap_escape_html (r->pool, redirect_uri); char * esc_message = ap_escape_html(r->pool, message); char * escaped_java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , esc_redirect_uri , esc_redirect_uri ) ; return oidc_util_html_send ( r , NULL , escaped_java_script , ""setTimer"" , NULL , DONE ) ; }",871,-27.891182617110793,-0.03202202367062089
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: Expected origin: \' + targetOrigin + \' Received origin: \' + e.origin);\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",830,-19.83180943685305,-0.023893746309461505
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: request not coming from the expected origin\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",820,-15.840918858517544,-0.019318193729899444
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","

static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: request ignored\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",817,-15.373468872103357,-0.0188169753636516
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: origin mismatch\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",815,-6.876991683829847,-0.008438026605926192
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: Origin does not match.\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",819,-8.98591565069116,-0.010971813981307888
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: Ignoring message from invalid origin.\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",821,-10.96713293606693,-0.013358261797889074
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","

static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: origin is not the same, ignoring.\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",823,-17.65003176078576,-0.021445968117601168
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , apr_psprintf(r->pool, ""<!-- %s -->%s"",ap_escape_html(r->pool, java_script), java_script) , ""setTimer"" , NULL , DONE ) ; }",830,-14.244158873948681,-0.017161637197528532
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","

static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script_template = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""var changed_uri = \'%s?session=check\';\\n"" ""var logout_uri = \'%s?session=logout\';\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = changed_uri;\\n"" ""} else {\\n"" ""\t\t  window.location.href = logout_uri;\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; const char * changed_uri = apr_psprintf(r->pool, ""%s?session=check"", apr_pescape_uri(r->pool, redirect_uri, 0)); const char * logout_uri = apr_psprintf(r->pool, ""%s?session=logout"", apr_pescape_uri(r->pool, redirect_uri, 0)); java_script = apr_psprintf ( r -> pool , java_script_template , origin , client_id , session_state , op_iframe_id , s_poll_interval , changed_uri , logout_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",936,-32.78805913747198,-0.03502997771097434
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin || /[\\s<>]/.test(e.data)) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",833,-11.580429147648594,-0.013902075807501314
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; char * encoded_redirect_uri = apr_pstrcat(r->pool, ""javascript:encodeURI("", redirect_uri,"")"", NULL); char * encoded_redirect_uri_logout = apr_pstrcat(r->pool, ""javascript:encodeURI("", redirect_uri,""?session=logout)"", NULL); java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , encoded_redirect_uri , encoded_redirect_uri_logout ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",904,-25.917796642314862,-0.02867012902910936
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin || !targetOrigin.startsWith('https://')) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",832,-8.879669003885738,-0.01067267909120882
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," 

static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: Not Authorized\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",819,-14.673908914703041,-0.017916860701713114
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , oidc_util_escape_string(r, java_script) , ""setTimer"" , NULL , DONE ) ; }",811,-7.095666425371651,-0.008749280425859002
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""//console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",821,-7.066194574577037,-0.00860681434175035
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin === targetOrigin ) {\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",792,-15.291080595892137,-0.019306919944308252
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: origin not verified\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",817,-10.669885853246537,-0.013059835805687316
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" "" console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" "" var expectedOrigin = targetOrigin.replace(/[.*+?^${}()|[\\]\\\\]/g, \'\\\\$&\');\n"" "" var originRegex = new RegExp(expectedOrigin);\n"" ""if (!originRegex.test(e.origin)) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",874,-24.47016486972912,-0.027997900308614557
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack not allowed.\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",822,-10.575890953540265,-0.012866047388735116
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }

The fixed code is: 
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').content",1000,-13.731982097008956,-0.013731982097008957
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin || !e.data.match(/^[a-zA-Z0-9._-]*$/) ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",846,-17.64942920161572,-0.020862209458174612
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: attack detected\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",816,-9.908328432997957,-0.012142559354164162
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session ,const char * client_id , const char * check_session_iframe ) { 
    oidc_debug ( r , ""enter"" ) ; 
    const char * java_script = ""<script type=\""text/javascript\"">\n"" "" var targetOrigin  = \'%s\';\n"" "" var message = \'%s\' + \' \' + \'%s\';\n"" ""\t   var timerID;\n"" ""\n"" ""function checkSession() {\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\n"" ""win.postMessage( message, targetOrigin);\n"" ""}\n"" ""\n"" "" function setTimer() {\n"" ""checkSession();\n"" ""timerID = setInterval(\'checkSession()\', %s);\n"" ""}\n"" ""\n"" ""function receiveMessage(e) {\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\n"" ""if (e.origin !== targetOrigin ) {\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\n"" ""return;\n"" ""}\n"" ""if (e.data != \'unchanged\') {\n"" ""clearInterval(timerID);\n"" ""if (e.data == \'changed\') {\n"" ""\t\t  window.location.href = \'%s?session=check\';\n"" ""} else {\n"" ""\t\t  window.location.href = \'%s?session=logout\';\n"" ""}\n"" ""}\n"" ""}\n"" ""\n"" ""window.addEventListener(\'message\', receiveMessage, false);\n"" ""\n"" ""</script>\n"" ; 
    char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; 
    apr_uri_t uri ; 
    apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; 
    char * p = strstr ( origin , uri . path ) ; 
    * p = '\0' ; 
    const char * op_iframe_id = ""openidc-op"" ; 
    const char * session_state = oidc_session_get_session_state ( r , session ) ; 
    if ( session_state == NULL ) { 
        oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; 
        return DONE ; 
    } 
    char * s_poll_interval = NULL ; 
    oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; 
    if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; 
    const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; 
    java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; 
    char *escapedJavaScript = apr_psprintf(r->pool, ""%q"", java_script);
    return oidc_util_html_send ( r , NULL , escapedJavaScript , ""setTimer"" , NULL , DONE ) ; 
}",883,-34.769395863289844,-0.03937643925627389
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin.replace(/[^\\w\\s]/gi, '') !== targetOrigin.replace(/[^\\w\\s]/gi, '') ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
The code has been fixed with the addition of the replace() method in the receiveMessage() function. This strips out any unwanted characters which could lead to a cross-site scripting attack.",889,-43.06699803205524,-0.04844431724640634
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: Invalid origin.\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",816,-7.893189287070049,-0.009673026087095648
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," 
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; //escape user-supplied data using an appropriate API java_script = apr_psprintf ( r -> pool , java_script , ap_escape_html(r->pool, origin) , ap_escape_html(r->pool, client_id) , ap_escape_html(r->pool, session_state) , ap_escape_html(r->pool, op_iframe_id) , ap_escape_html(r->pool, s_poll_interval) , ap_escape_html(r->pool, redirect_uri) , ap_escape_html(r->pool, redirect_uri) ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",909,-33.78259928387737,-0.037164575669832084
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; char * encoded_js = oidc_util_escape_string(r, java_script); return oidc_util_html_send ( r , NULL , encoded_js , ""setTimer"" , NULL , DONE ) ; }",841,-18.073032547666354,-0.021489931685691264
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" "" var allowedOrigin = new RegExp(targetOrigin);\\n"" ""if (!allowedOrigin.test(e.origin)) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",835,-15.536015055997776,-0.01860600605508716
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," 

static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: origin does not match. aborting.\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",824,-17.21992038713237,-0.02089796163486938
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""// display error message \\n"" ""console.error(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",827,-30.8724337459749,-0.03733063330831306
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","

static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",800,-8.050964778831133,-0.010063705973538917
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: Mismatched origin\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",817,-11.241426307059903,-0.013759395724675525
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-origin\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",817,-13.066387254086957,-0.015993130053962003
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""// console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",821,-8.094664080416628,-0.009859517759338158
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin.toString() !== targetOrigin.toString() ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",827,-8.642732706012529,-0.010450704602191692
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , html_escape(java_script), ""setTimer"" , NULL , DONE ) ; }",802,-8.776423501597746,-0.010943171448376242
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; const char * escaped_redirect_uri1 = oidc_util_escape_string ( r , redirect_uri ) ; const char * escaped_redirect_uri2 = oidc_util_escape_string ( r , redirect_uri ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , escaped_redirect_uri1 , escaped_redirect_uri2 ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",863,-17.731666666953682,-0.020546543067153745
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\""%s\"").contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\""checkSession()\"", %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\""message\"", receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , htmlspecialchars(client_id, ENT_QUOTES, 'UTF-8'), htmlspecialchars(session_state, ENT_QUOTES, 'UTF-8'), htmlspecialchars(op_iframe_id, ENT_QUOTES, 'UTF-8'), s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",865,-23.298324738582128,-0.026934479466568934
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," 

static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check&client_id=%s\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout&client_id=%s\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , client_id, redirect_uri , client_id ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",844,-12.827716614861817,-0.015198716368319688
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\""text/javascript\"">\n"" "" var targetOrigin  = \'%s\';\n"" "" var message = \'%s\' + \' \' + \'%s\';\n"" ""\t   var timerID;\n"" ""\n"" ""function checkSession() {\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\n"" ""win.postMessage( message, targetOrigin);\n"" ""}\n"" ""\n"" "" function setTimer() {\n"" ""checkSession();\n"" ""timerID = setInterval(\'checkSession()\', %s);\n"" ""}\n"" ""\n"" ""function receiveMessage(e) {\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\n"" ""if (e.origin !== targetOrigin ) {\n"" ""console.debug(\'receiveMessage: origin does not match\');\n"" ""return;\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\n"" ""clearInterval(timerID);\n"" ""if (e.data == \'changed\') {\n"" ""\t\t  window.location.href = \'%s?session=check\';\n"" ""} else {\n"" ""\t\t  window.location.href = \'%s?session=logout\';\n"" ""}\n"" ""}\n"" ""}\n"" ""\n"" ""window.addEventListener(\'message\', receiveMessage, false);\n"" ""\n"" ""</script>\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",798,-12.793265159499663,-0.01603166060087677
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , oidc_util_avoid_xss( r, java_script), ""setTimer"" , NULL , DONE ) ; }",811,-21.199824235410954,-0.02614035047522929
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","

static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , apr_psprintf(r->pool, ""%s?session=check"", apr_uri_unparse(r->pool, &uri, APR_URI_UNP_OMITSITEPART)), apr_psprintf(r->pool, ""%s?session=logout"", apr_uri_unparse(r->pool, &uri, APR_URI_UNP_OMITSITEPART)) ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",901,-20.779625867009965,-0.023062847799123157
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","

static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , oidc_util_escape_string(r->pool, java_script), ""setTimer"" , NULL , DONE ) ; }",814,-7.238419910401032,-0.008892407752335421
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script_template = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: origin mismatch\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; char * java_script = apr_psprintf ( r -> pool , java_script_template , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",821,-13.220323397179364,-0.016102708157343926
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , oidc_util_escape_string(r->pool,java_script) , ""setTimer"" , NULL , DONE ) ; }",814,-9.803826657182094,-0.012044013092361295
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\""text/javascript\"">\n"" "" var targetOrigin  = \'%s\';\n"" "" var message = \'%s\' + \' \' + \'%s\';\n"" ""\t   var timerID;\n"" ""\n"" ""function checkSession() {\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\n"" ""win.postMessage( message, targetOrigin);\n"" ""}\n"" ""\n"" "" function setTimer() {\n"" ""checkSession();\n"" ""timerID = setInterval(\'checkSession()\', %s);\n"" ""}\n"" ""\n"" ""function receiveMessage(e) {\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\n"" ""if (e.origin !== targetOrigin ) {\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\n"" ""return;\n"" ""}\n"" ""if (e.data != \'unchanged\') {\n"" ""clearInterval(timerID);\n"" ""if (e.data == \'changed\') {\n"" ""\t\t  window.location.href = \'%s?session=check\';\n"" ""} else {\n"" ""\t\t  window.location.href = \'%s?session=logout\';\n"" ""}\n"" ""}\n"" ""}\n"" ""\n"" ""window.addEventListener(\'message\', receiveMessage, false);\n"" ""\n"" ""</script>\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , oidc_util_escape_string_r (r->pool, session_state) , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",816,-18.03755244309189,-0.02210484368025967
