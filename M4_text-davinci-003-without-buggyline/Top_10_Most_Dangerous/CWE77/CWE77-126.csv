Original code,Plausible Program,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:","

static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\0' ; char temp_user[STRING] = {0}; strncpy(temp_user, ImapUser, sizeof(ImapUser)); if ( mutt_str_strcmp ( url . user , temp_user) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }",473,-28.30522894325483,-0.05984192165592987
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:","
static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; //escape user input to prevent command injection errstr = my_escape_string(list.name); url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }",442,-19.273797561905244,-0.04360587683688969
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:"," static void cmd_parse_lsub ( struct ImapData * idata , char * s ) {  char buf [ STRING ] ;  char errstr [ STRING ] ;  struct Buffer err , token ;  struct Url url ;  struct ImapList list ;  if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) {  cmd_parse_list ( idata , s ) ;  return ;  }  if ( ! ImapCheckSubscribed ) return ;  idata -> cmdtype = IMAP_CT_LIST ;  idata -> cmddata = & list ;  cmd_parse_list ( idata , s ) ;  idata -> cmddata = NULL ;  if ( ! list . name || list . noselect ) return ;  mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ;  mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ;  mutt_account_tourl ( & idata -> conn -> account , & url ) ;  imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ;  url . path = errstr + 1 ;  url . path [ strlen ( url . path ) - 1 ] = '\0' ;  if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ;  char* safe_url = imap_sanitize_url_string(url);  url_tostring ( & url , safe_url , strlen(safe_url) , 0 ) ;  mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ;  mutt_buffer_init ( & token ) ;  mutt_buffer_init ( & err ) ;  err . data = errstr ;  err . dsize = sizeof ( errstr ) ;  if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ;  FREE ( & token . data ) ;  free(safe_url);  } 

/**
 * Sanitizing the URL string by escaping special characters.
 * @param url the input URL
 * @return the sanitized URL string
 */
char* imap_sanitize_url_string(struct Url url) {
  char* result;
  int len;
  int index = 0;
  len = strlen(url.path) + strlen(url.user) + strlen(url.pass) + strlen(url.host) + 3;
  result = malloc(len);
  result[index++] = '\'';
  if (url.user != NULL) {
    strcpy(result + index, url.user);
    index += strlen(url.user);
    result[index++] = ':';
  }
  if (url.pass != NULL) {
    strcpy(result + index, url.pass);
    index += strlen(url.pass);
    result[index++] = '@';
  }
  strcpy(result + index, url.host);
  index += strlen(url.host);
  result[index++] = '\'';
  strcpy(result + index, url.path);
  index += strlen(url.path);
  result[index++] = '\'';
  result[index] = '\0';
  return result;
}",822,-121.98813936282758,-0.1484040624851917
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:"," 

static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; // Replace backslash with forward slash to prevent command injection string s2 = buf.replace('\\', '/'); // Escape any characters that might still be problematic s2 = s2.replaceAll(""[\"";()|&><]"", ""\\\\$0""); // Concatenate the new string with the original mutt_str_strcat ( s2 , sizeof ( s2 ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( s2 , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }",514,-89.07918732200436,-0.1733058119105143
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:","

static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string_no_special_chars ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }",450,-12.193059135189792,-0.027095686967088427
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:"," static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string_escape_special_characters(errstr , sizeof ( errstr ) , list . name ); url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }",447,-14.026300666396864,-0.03137874869440014
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:","

static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; char *encoded_list_name = url_encode(list.name); mutt_debug ( 3 , ""Subscribing to %s\\n"" , encoded_list_name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , encoded_list_name ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; FREE (encoded_list_name); }",397,-26.698546029873192,-0.06725074566718688
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:"," static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string_rfc2060 ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }",446,-13.044714062848136,-0.029248237809076538
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:"," static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; char commandstr [ STRING ] ; char * cmd ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; strncpy ( commandstr , buf , sizeof ( commandstr ) ) ; cmd = ( char * ) malloc ( strlen ( commandstr ) + 1 ) ; if ( cmd == NULL ) { mutt_debug ( 1 , ""Error allocating memory for command string\\n"" ) ; return ; } strncpy ( cmd , commandstr , strlen ( commandstr ) + 1 ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( cmd , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; FREE ( cmd ) ; }",542,-44.914475190245945,-0.08286803540635783
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:"," static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; char buf2[STRING] = {0}; url_tostring ( & url , buf2 , sizeof ( buf2 ) , 0 ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; char buf[STRING] = ""mailboxes ""; strcat(buf, buf2); if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
This code is now less vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection') as a new buffer, buf2, has been added which is used to store the output from url_tostring. This ensures that the user input passed in as url.path is not directly used in a command.",493,-83.15693236866812,-0.16867531920622336
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:","

static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { 
    char errstr [ STRING ] ; 
    struct Buffer err , token ; 
    struct Url url ; 
    struct ImapList list ; 

    if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { 
        cmd_parse_list ( idata , s ) ; 
        return ; 
    } 

    if ( ! ImapCheckSubscribed ) return ; 
    idata -> cmdtype = IMAP_CT_LIST ; 
    idata -> cmddata = & list ; 
    cmd_parse_list ( idata , s ) ; 
    idata -> cmddata = NULL ; 

    if ( ! list . name || list . noselect ) return ; 
    mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; 

    mutt_account_tourl ( & idata -> conn -> account , & url ) ;
    char *sanitized_url = sanitize_url(&url);
    char buf[strlen(sanitized_url) + 24];
    sprintf(buf, ""mailboxes %s"", sanitized_url); 
    free(sanitized_url);

    mutt_buffer_init ( & token ) ; 
    mutt_buffer_init ( & err ) ; 
    err . data = errstr ; 
    err . dsize = sizeof ( errstr ) ; 
    if ( mutt_parse_rc_line ( buf , & token , & err ) )
        mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; 
    FREE ( & token . data ) ; 
}

// Sanitization function
char* sanitize_url(struct Url *url) {
    char *sanitized_url = malloc(strlen(url->path)); 
    int i;
    for(i = 0; i < strlen(url->path); i++) {
        if(url->path[i] != '""') {
            sanitized_url[i] = url->path[i];
        }
        else {
            sanitized_url[i] = '\\""';
        }
    }
    sanitized_url[strlen(url->path)] = '\0';
    return sanitized_url;
}",577,-90.23369874323936,-0.1563842265914027
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:"," static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; // add single quotation marks mutt_str_strfcpy ( buf , ""mailboxes \\\""'"", sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; //sanitize input url . path [ strlen ( url . path ) - 1 ] = '\\0' ; //sanitize input if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; //sanitize input url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; //add single quotation marks mutt_str_strcat ( buf , sizeof ( buf ) , ""\\\""'"" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }",467,-48.957451915980975,-0.10483394414556954
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:","

static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string_with_escaping( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }",448,-19.39604316061997,-0.04329473919781244
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:"," static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; snprintf(errstr, sizeof(errstr), ""%s"", list.name); url . path = errstr ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }",416,-9.038471272720678,-0.021727094405578552
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:","
static void cmd_parse_lsub(struct ImapData *idata, char *s) {
  char buf[STRING];
  char errstr[STRING];
  struct Buffer err, token;
  struct Url url;
  struct ImapList list;
  if (idata->cmddata && idata->cmdtype == IMAP_CT_LIST) {
    cmd_parse_list(idata, s);
    return;
  }
  if (!ImapCheckSubscribed) return;
  idata->cmdtype = IMAP_CT_LIST;
  idata->cmddata = &list;
  cmd_parse_list(idata, s);
  idata->cmddata = NULL;
  if (!list.name || list.noselect) return;
  mutt_debug(3, ""Subscribing to %s\n"", list.name);
  mutt_str_strfcpy(buf, ""mailboxes \\\"""", sizeof(buf));
  mutt_account_tourl(&idata->conn->account, &url);

  const char* list_name = list.name;
  size_t list_name_len = strlen(list_name);
  size_t errstr_len = sizeof(errstr);
  size_t errstr_required_len =  list_name_len * 4 + 1; //max size of list name if every character is escaped
  if (errstr_required_len > errstr_len) {
    // reallocate errstr to prevent buffer overflow
    mutt_mem_realloc(&errstr, errstr_required_len);
    errstr_len = errstr_required_len;
  }
  imap_quote_string(errstr, errstr_len, list_name);
  url.path = errstr + 1;
  url.path[strlen(url.path) - 1] = '\0';
  if (mutt_str_strcmp(url.user, ImapUser) == 0)
    url.user = NULL;
  url_tostring(&url, buf + 11, sizeof(buf) - 11, 0);
  mutt_str_strcat(buf, sizeof(buf), ""\"""");
  mutt_buffer_init(&token);
  mutt_buffer_init(&err);
  err.data = errstr;
  err.dsize = errstr_len;
  if (mutt_parse_rc_line(buf, &token, &err))
    mutt_debug(1, ""Error adding subscribed mailbox: %s\n"", errstr);
  FREE(&token.data);
}",624,-96.44974616111644,-0.15456690089922506
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:"," static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; /* Added line */ char ok_name[STRING]; mutt_escape_string(ok_name, list.name); /* Added line */ url . path = ok_name; /* Replaced line */ if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , err . data ) ; FREE ( & token . data ) ; }",410,-50.27313677043917,-0.12261740675716871
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:"," static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; char * safe_list_name; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; safe_list_name = imap_mutt_quote_string(list.name); mutt_debug ( 3 , ""Subscribing to %s\\n"" , safe_list_name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; url . path = safe_list_name + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; FREE(safe_list_name); }",461,-19.998655324286407,-0.043381031072204784
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:"," static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes "" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; url . path = list . name ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , """" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }",368,-12.233472464241137,-0.03324313169630744
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:"," static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; char * user_copy = malloc(strlen(url.user)+1); strcpy(user_copy, url.user); if ( mutt_str_strcmp ( user_copy , ImapUser ) == 0 ) url . user = NULL ; free(user_copy); url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }",457,-24.179867529342832,-0.05290999459374799
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:"," static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string_safe ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line_safe ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }",445,-7.957533771425269,-0.017882098362753413
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:"," static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; char command [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; snprintf(command, sizeof(command), ""%s '%s'"", buf, errstr); url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( command , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }",469,-22.35870114293936,-0.047673136765329124
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:"," static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; mutt_str_strcpy ( errstr , list . name , sizeof ( errstr ) ) ; url . path = errstr ; size_t url_len = mutt_str_strlen ( errstr ) ; url_len = ( url_len > 0 ) ? url_len - 1 : 0 ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }",460,-36.68608922633841,-0.07975236788334437
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:","

static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; char * sanitised_name; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; sanitised_name = mutt_sanitize_filename ( list.name, 0); mutt_debug ( 3 , ""Subscribing to %s\\n"" , sanitised_name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , sanitised_name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; free (sanitised_name); }",484,-30.408463673617316,-0.0628274042843333
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:"," static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; char * lsub_name = NULL ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; lsub_name = g_shell_quote ( list . name ) ; url . path = lsub_name ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; g_free ( lsub_name ) ; }",455,-22.58094133778573,-0.04962844250062798
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:","

static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 1 ) ; strcat ( buf , list . name ); mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , err.data ) ; FREE ( & token . data ) ; }",350,-22.95558352139611,-0.06558738148970318
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:"," static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; struct Buffer token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; if ( mutt_parse_rc_line ( buf , & token , NULL ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox.\\n"" ) ; FREE ( & token . data ) ; }",319,-13.532961239083106,-0.042423075984586535
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:","

static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { 
	char buf [ STRING ] ; 
	char errstr [ STRING ] ; 
	struct Buffer err , token ; 
	struct Url url ; 
	struct ImapList list ; 
	if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { 
		cmd_parse_list ( idata , s ) ; 
		return ; 
	} 
	if ( ! ImapCheckSubscribed ) return ; 
	idata -> cmdtype = IMAP_CT_LIST ; 
	idata -> cmddata = & list ; 
	cmd_parse_list ( idata , s ) ; 
	idata -> cmddata = NULL ; 
	if ( ! list . name || list . noselect ) return ; 
	mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; 
	mutt_str_strfcpy ( buf , ""mailboxes \\\"""" , sizeof ( buf ) ) ; 
	mutt_account_tourl ( & idata -> conn -> account , & url ) ; 
	url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; 
	mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; 
	mutt_buffer_init ( & token ) ; 
	mutt_buffer_init ( & err ) ; 
	err . data = errstr ; 
	err . dsize = sizeof ( errstr ) ; 

	char * safe_name = imap_quote_string ( list . name ) ;
	if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; 
	if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; 
	FREE ( & token . data ) ; 
	FREE ( & safe_name ) ; 
}",509,-36.38758351838477,-0.07148837626401723
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:"," static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; errstr[0] = '\0'; if (mutt_str_strcmp(url.user, ImapUser) == 0) url.user = NULL; url_tostring(&url, buf + 11, sizeof(buf) - 11, URL_PATH_TRAVERSAL); mutt_str_strcat (buf, sizeof(buf), ""\\"""" ); mutt_buffer_init (&token); mutt_buffer_init (&err); err.data = errstr; err.dsize = sizeof(errstr); if (mutt_parse_rc_line (buf, &token, &err)) mutt_debug(1,""Error adding subscribed mailbox: %s\\n"", errstr); FREE(&token.data);}",393,-39.27448481952623,-0.09993507587665708
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:"," static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; url = imap_sanitize_url(url); imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }

//Sanitizing function
struct Url imap_sanitize_url(struct Url url) {
    int i, k;
    char *ptr = url.path;
    for (i = 0; i < strlen (ptr); i++) 
    {
        if (ptr[i] == ';' || ptr[i] == '|' || ptr[i] == '&' || ptr[i] == '*' || 
            ptr[i] == '?' || ptr[i] == '$' || ptr[i] == '`' || ptr[i] == '<' || 
            ptr[i] == '>' || ptr[i] == '(' || ptr[i] == ')' || ptr[i] == '~' || 
            ptr[i] == '[') 
        {
            for (k = i; k < strlen (ptr); k++) 
            {
                ptr[k] = ptr[k+1];
            }
            i--;
        }
    }
    return url;
}",702,-89.09042591787488,-0.1269094386294514
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:","
static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char * buf ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; buf = malloc ( STRING * sizeof ( char ) ) ; if ( ! buf ) return ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , STRING ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , STRING - 11 , 0 ) ; mutt_str_strcat ( buf , STRING , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; free ( buf ) ; }",459,-15.293804327323896,-0.033319835135781906
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:"," static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string_for_shell ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }",445,-10.652859079045026,-0.023939009166393316
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:","
static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; char* sanitized_name = strdup(list.name); mutt_str_strfcpy(sanitized_name, list.name, strlen(list.name)); mutt_debug ( 3 , ""Subscribing to %s\\n"" , sanitized_name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , sanitized_name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; free(sanitized_name); }",491,-22.16960652594886,-0.045151948118022124
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:","

static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; char * quoted_name; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; quoted_name = imap_escape_string (list.name, errstr, sizeof(errstr)); url . path = quoted_name + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; FREE(quoted_name); }",459,-24.716794367897478,-0.05384922520239102
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:"," static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; url_encode_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }",419,-8.593066817340727,-0.02050851269055066
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:"," 
static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_neutralize_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }",444,-13.17838181709884,-0.02968104012860099
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:","

static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; //escape malicious characters in buf char * escaped_buf = malloc(strlen(buf)*2 + 1); mysql_real_escape_string(escaped_buf, buf, strlen(buf)); mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( escaped_buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; free(escaped_buf); }",496,-32.811479981930574,-0.06615217738292455
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:"," static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string_escape ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }",443,-9.013895753486532,-0.020347394477396235
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:"," 

static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; //additional code to escape special characters 

for (int i=0; i<strlen(errstr); i++) {
	if (errstr[i] == ';' || errstr[i] == '&' || errstr[i] == '|' || errstr[i] == '$' || errstr[i] == '(' || errstr[i] == ')' || errstr[i] == '<' || errstr[i] == '>') 
		errstr[i] = ' ';
}

url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; 
}",573,-53.81988285048673,-0.09392649712126828
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:","

static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; 
if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } 
if ( ! ImapCheckSubscribed ) return ; 
idata -> cmdtype = IMAP_CT_LIST ; 
idata -> cmddata = & list ; 
cmd_parse_list ( idata , s ) ; 
idata -> cmddata = NULL ; 
if ( ! list . name || list . noselect ) return ; 
mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; 
mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; 
mutt_account_tourl ( & idata -> conn -> account , & url ) ; 
imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; 
char * url_path = malloc(strlen(errstr) -1);
for (int i = 1; i < strlen(errstr); i++){
  url_path[i-1] = errstr[i];
  } 
url . path = url_path ;
url . path [ strlen ( url . path ) - 1 ] = '\\0' ; 
if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; 
url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; 
mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; 
mutt_buffer_init ( & token ) ; 
mutt_buffer_init ( & err ) ; 
err . data = errstr ; 
err . dsize = sizeof ( errstr ) ; 
if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; 
FREE ( & token . data ) ; 
free(url_path);
}",552,-50.55369780584704,-0.09158278588015767
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:"," static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; size_t optlen=strlen(list.name); char *optbuf = malloc(optlen+1); snprintf(optbuf, optlen+1, ""%s"", list.name); url . path = optbuf ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; FREE(optbuf); }",467,-37.851639111988,-0.0810527604111092
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:","
static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; char* escapedName; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; escapedName = escape_name(list.name); // Escape the user input before including it in the command. mutt_account_tourl ( & idata -> conn -> account , & url ) ; url . path = escapedName; // Use the escaped string in the URL. if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; free(escapedName); // Free the allocated memory. }",448,-50.84721874098487,-0.1134982561182698
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:"," 
static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { 
char buf [ STRING ] ; 
char errstr [ STRING ] ; 
struct Buffer err , token ; 
struct Url url ; 
struct ImapList list ; 
if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { 
cmd_parse_list ( idata , s ) ; 
return ; 
} 
if ( ! ImapCheckSubscribed ) return ; 
idata -> cmdtype = IMAP_CT_LIST ; 
idata -> cmddata = & list ; 
cmd_parse_list ( idata , s ) ; 
idata -> cmddata = NULL ; 
if ( ! list . name || list . noselect ) return ; 
mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; 
mutt_str_strfcpy ( buf , ""mailboxes \\\"""" , sizeof ( buf ) ) ; 
mutt_account_tourl ( & idata -> conn -> account , & url ) ; 
char * quoted_name = g_shell_quote ( list . name ); //quoting input
imap_quote_string ( errstr , sizeof ( errstr ) , quoted_name ) ; 
g_free(quoted_name); //freeing up memory 
url . path = errstr + 1 ; 
url . path [ strlen ( url . path ) - 1 ] = '\\0' ; 
if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; 
url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; 
mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; 
mutt_buffer_init ( & token ) ; 
mutt_buffer_init ( & err ) ; 
err . data = errstr ; 
err . dsize = sizeof ( errstr ) ; 
if ( mutt_parse_rc_line ( buf , & token , & err ) ) 
mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; 
FREE ( & token . data ) ; 
}",544,-55.351132880220696,-0.10174840602981745
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:"," static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string_for_command_injection ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }",448,-10.488715890845029,-0.02341231225635051
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:","
static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; url . path = list . name ; url . path [ strlen ( url . path ) - 1 ] = '\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }",420,-13.117661991675206,-0.031232528551607634
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:"," 

static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { 
char errstr [ STRING ] ; 
struct Buffer err , token ; 
struct Url url ; 
struct ImapList list ; 

if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { 
  cmd_parse_list ( idata , s ) ; 
  return ; 
} 

if ( ! ImapCheckSubscribed ) 
  return ; 

idata -> cmdtype = IMAP_CT_LIST ; 
idata -> cmddata = & list ; 
cmd_parse_list ( idata , s ) ; 
idata -> cmddata = NULL ; 

if ( ! list . name || list . noselect ) 
  return ; 

mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; 

mutt_account_tourl ( & idata -> conn -> account , & url ) ; 
imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; 
url . path = errstr + 1 ; 
url . path [ strlen ( url . path ) - 1 ] = '\0' ; 

if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) 
  url . user = NULL ; 

char * buf = malloc ( ( STRING * 2 ) + sizeof ( url . path ) ) ; 

snprintf ( buf , sizeof ( url . path ) + 11 , ""mailboxes \\"""" ) ; 
strcat ( buf , url . path ) ; 
strcat ( buf , ""\\"""" ) ; 

mutt_buffer_init ( & token ) ; 
mutt_buffer_init ( & err ) ; 
err . data = errstr ; 
err . dsize = sizeof ( errstr ) ; 

if ( mutt_parse_rc_line ( buf , & token , & err ) ) 
  mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; 

FREE ( & token . data ) ; 
free ( buf ) ; 
}",529,-51.021284242183015,-0.09644855244269
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:","
static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; char * quotedname = mutt_str_strdup(list.name); //Added line to store a copy of list.name in a newly allocated buffer to avoid direct access to user input. imap_quote_string ( errstr , sizeof ( errstr ) , quotedname ) ; //Replaced list.name with quotedname in this line. url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; FREE(&quotedname); //Added line to free the newly allocated buffer after use. }",514,-70.475730387417,-0.13711231592882686
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:","
static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; //added escape function to neutralize special characters escape(errstr, sizeof(errstr), list.name); url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }

//added escape function to neutralize special characters
void escape(char* dest, size_t dest_size, const char* src) {
  int i = 0, j = 0;
  while ((src[i] != '\0') && (j < dest_size-1)) {
    switch (src[i]) {
      case '&':
        dest[j++] = '\\';
        dest[j++] = '&';
        break;
      case ';':
        dest[j++] = '\\';
        dest[j++] = ';';
        break;
      case '|':
        dest[j++] = '\\';
        dest[j++] = '|';
        break;
      case '<':
        dest[j++] = '\\';
        dest[j++] = '<';
        break;
      case '>':
        dest[j++] = '\\';
        dest[j++] = '>';
        break;
      default:
        dest[j++] = src[i];
        break;
    }
    i++;
  }
  dest[j] = '\0';
}",723,-62.52811853251813,-0.08648425799795038
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:"," 

static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; char* sanitized_name; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; sanitized_name = mutt_str_strdup(list.name); mutt_str_replace(&sanitized_name, ""'"", """"); mutt_str_replace(&sanitized_name, ""\"""", """"); mutt_str_replace(&sanitized_name, ""\\"", """"); imap_quote_string ( errstr , sizeof ( errstr ) , sanitized_name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; FREE(&sanitized_name); }",527,-26.25010627400607,-0.049810448337772435
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:"," static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; mutt_buffer_create ( & token , 1024 ) ; url_tostring_quote ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 , token ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; mutt_buffer_free ( & token ) ; }",450,-31.265024878210443,-0.06947783306268987
"The Original Code is vulnerable to CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'). Fix the vulnerability.
Original Code: static void cmd_parse_lsub ( struct ImapData * idata , char * s ) { char buf [ STRING ] ; char errstr [ STRING ] ; struct Buffer err , token ; struct Url url ; struct ImapList list ; if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) { cmd_parse_list ( idata , s ) ; return ; } if ( ! ImapCheckSubscribed ) return ; idata -> cmdtype = IMAP_CT_LIST ; idata -> cmddata = & list ; cmd_parse_list ( idata , s ) ; idata -> cmddata = NULL ; if ( ! list . name || list . noselect ) return ; mutt_debug ( 3 , ""Subscribing to %s\\n"" , list . name ) ; mutt_str_strfcpy ( buf , ""mailboxes \\"""" , sizeof ( buf ) ) ; mutt_account_tourl ( & idata -> conn -> account , & url ) ; imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; url . path = errstr + 1 ; url . path [ strlen ( url . path ) - 1 ] = '\\0' ; if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) url . user = NULL ; url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; mutt_str_strcat ( buf , sizeof ( buf ) , ""\\"""" ) ; mutt_buffer_init ( & token ) ; mutt_buffer_init ( & err ) ; err . data = errstr ; err . dsize = sizeof ( errstr ) ; if ( mutt_parse_rc_line ( buf , & token , & err ) ) mutt_debug ( 1 , ""Error adding subscribed mailbox: %s\\n"" , errstr ) ; FREE ( & token . data ) ; }
Fixed code:","

static void cmd_parse_lsub(struct ImapData *idata, char *s) {
	char buf[STRING];
	struct Buffer token;
	struct Url url;
	struct ImapList list;
 
	if (idata->cmddata && idata->cmdtype == IMAP_CT_LIST) {
		cmd_parse_list(idata, s);
		return;
	}
	if (!ImapCheckSubscribed)
		return;
	idata->cmdtype = IMAP_CT_LIST;
	idata->cmddata = &list;
	cmd_parse_list(idata, s);
	idata->cmddata = NULL;
	if (!list.name || list.noselect)
		return;
	mutt_debug(3, ""Subscribing to %s\n"", list.name);
	mutt_str_strfcpy(buf, ""mailboxes "", sizeof(buf));
	mutt_account_tourl(&idata->conn->account, &url);
	/* Start of secure coding */
	char *safe_url_path;
	// Escape special characters in url path to guard against command injection
	safe_url_path = (char *)mutt_str_escape_string(url.path);
	url.path = safe_url_path;
	/* End of secure coding */
	if (mutt_str_strcmp(url.user, ImapUser) == 0)
		url.user = NULL;
	url_tostring(&url, buf + 11, sizeof(buf) - 11, 0);
	mutt_str_strcat(buf, sizeof(buf), ""\"""");
	mutt_buffer_init(&token);
	if (mutt_parse_rc_line(buf, &token, NULL))
		mutt_debug(1, ""Error adding subscribed mailbox\n"");
	/* Start of secure coding */
	FREE(&safe_url_path);
	/* End of secure coding */
	FREE(&token.data);
}",487,-86.7596263629272,-0.17815118349677042
