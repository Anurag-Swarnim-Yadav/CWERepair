Original code,Plausible Program,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; if (vapic) { data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; if(data) { apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; } } kunmap_atomic ( vapic ) ; }",235,-11.605937591360368,-0.04938696847387391
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; //Validate input before setting TPR if (data & 0xff) { apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; } kunmap_atomic ( vapic ) ; }",238,-14.46924845203068,-0.060795161563154114
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; if(vapic) { data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; } }",229,-7.076274439849979,-0.030900761746069778
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; 
// Check if data is within valid range 
if ( data >= 0 && data <= 0xff ) {
    vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; 
  }
}",252,-23.713324749458387,-0.09410049503753329
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","

void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { 
    u32 data ; 
    void * vapic ; 
    if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) 
        apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; 
    if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) 
        return ; 
    vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; 
    data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; 
    kunmap_atomic ( vapic ) ; 

    // Added input validation
    if (data < 0xff) {
        apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; 
    }
}",273,-18.02991807542211,-0.06604365595392714
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { 
    u32 data ; 
    void * vapic ; 
    if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) 
        apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; 
    if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) 
        return ; 
    vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; 
    data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; 
    //Validate the data
    if (data > 0xff)
        return;
    kunmap_atomic ( vapic ) ; 
    apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; 
}",273,-16.983762934754942,-0.0622115858415932
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; if(data < 0xFF) { data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; } kunmap_atomic ( vapic ) ; }",231,-12.618872335037581,-0.054627152965530654
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; //Added input validation check if (vcpu->arch.apic->vapic_page == NULL || vcpu->arch.apic->vapic_addr == NULL) return; //Validation check end vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }",267,-19.727681626010625,-0.07388644803749297
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; // Validate the data before accessing it if (offset_in_page ( vcpu -> arch . apic -> vapic_addr ) > PAGE_SIZE) return; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }",257,-17.273850820314472,-0.06721342731639872
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; //Validate input data if(data & 0xff > 255) return; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }",237,-14.80919155877933,-0.06248604033240224
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; if (vcpu->arch.apic->vapic_addr > PAGE_SIZE) return; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }",243,-8.404324857785587,-0.03458569900323287
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) || vcpu->arch.apic->vapic_addr >= PAGE_SIZE ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }",239,-9.398709940636154,-0.039325146195130355
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic(struct kvm_vcpu *vcpu) {
    u32 data;
    void *vapic;
    
    if (test_bit(KVM_APIC_PV_EOI_PENDING, &vcpu->arch.apic_attention))
        apic_sync_pv_eoi_from_guest(vcpu, vcpu->arch.apic);
    
    if (!test_bit(KVM_APIC_CHECK_VAPIC, &vcpu->arch.apic_attention))
        return;
    
    vapic = kmap_atomic(vcpu->arch.apic->vapic_page);
    data= *(u32*)(vapic+offset_in_page(vcpu->arch.apic->vapic_addr));
    kunmap_atomic(vapic);
    
    if (data & 0xff > 0 && data & 0xff < 255)
        apic_set_tpr(vcpu->arch.apic, data & 0xff);
}",263,-34.085635941822204,-0.129603178486016
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { 
    u32 data ; 
    void * vapic ; 
    if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) 
        apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; 
    if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) 
        return ; 
    vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; 
    data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ;
    if (data > 0xFF){
        data = 0xFF;
    }
    kunmap_atomic ( vapic ) ; 
    apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; 
}",273,-15.529360365775743,-0.05688410390394045
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; if (vcpu->arch.apic->vapic_addr > PAGE_SIZE) return; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }",243,-6.251151955387081,-0.02572490516620198
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; //Added input validation if (vcpu->arch.apic->vapic_addr & 0xFFFFFFF8) return; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }",250,-20.94677270328091,-0.08378709081312365
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; if (vcpu->arch.apic->vapic_page == NULL) return; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; if (data > 255) data = 255; //TPR values must be between 0 and 255 kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }",261,-27.20217790009724,-0.1042229038317902
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; 

// Validate the input data before using it   
if (vapic && offset_in_page(vcpu->arch.apic->vapic_addr) >= 0 && offset_in_page(vcpu->arch.apic->vapic_addr) <= PAGE_SIZE) {
    data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ;
    kunmap_atomic ( vapic ) ;
    apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ;
}
else {
    // Handle the invalid input
    kunmap_atomic ( vapic ) ;
    // Log the error
    printk(KERN_ERR ""Invalid input detected. Aborting."");
}",346,-50.59041079193831,-0.14621506009230725
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; 
// Validate input
if(vcpu->arch.apic->vapic_page && offset_in_page(vcpu->arch.apic->vapic_addr)){
  vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; 
  data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; 
  kunmap_atomic ( vapic ) ; 
  apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; 
 }
}",280,-24.024859388308116,-0.08580306924395756
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { 
    u32 data ; 
    void * vapic ; 
    if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) )
        apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; 
    if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) 
        return ;
    if ( vcpu -> arch . apic_attention < 0 || vcpu -> arch . apic_attention > 255 )
        return;
    vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; 
    data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; 
    kunmap_atomic ( vapic ) ; 
    if ( data & 0xff > 255 )
        return; 
    apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; 
}",301,-27.806129873359637,-0.09237916901448384
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; if(vapic != NULL) { data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; } }",231,-6.218612072730783,-0.026920398583250144
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; if (vapic == NULL || offset_in_page(vcpu->arch.apic->vapic_addr) < 0) { return; } data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }",256,-12.557562601277874,-0.0490529789112417
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; 
if (!vcpu->arch.apic->vapic_page)
    return;

vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; 
if (offset_in_page(vcpu->arch.apic->vapic_addr) <= PAGE_SIZE) {
    data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; 
    kunmap_atomic ( vapic ) ;
    apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ;
}
else
    return;
}",292,-31.830654060136315,-0.10900908924704217
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; 
// Added input validation
if(!vapic || !vcpu || !vcpu->arch.apic || !vcpu->arch.apic->vapic_page) {
    return;
}

vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; 
// Added input validation
if(offset_in_page(vcpu->arch.apic->vapic_addr) > PAGE_SIZE) {
    kunmap_atomic(vapic);
    return;
}

data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }",328,-29.268617259153785,-0.08923358920473715
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; if(vapic == NULL) return; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }",231,-7.694840413406718,-0.03331099746063514
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; if (vapic != NULL) { data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; } }",231,-5.477248220278878,-0.02371103125661852
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; if ( vapic == NULL ) return ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }",230,-8.484568113499092,-0.03688942658043084
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","

void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; 
//Validate input
if (vcpu == NULL || test_bit(KVM_APIC_PV_EOI_PENDING, &vcpu->arch.apic_attention) == NULL) {
	return; 
}
if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }",280,-28.76974826215378,-0.1027491009362635
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; // check if input is valid if ( vcpu != NULL && test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( vcpu != NULL && ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }",237,-19.57287736874556,-0.08258598045884202
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; if (data & 0xff) { apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; } else { apic_set_tpr ( vcpu -> arch . apic , 0) ; } kunmap_atomic ( vapic ) ; }",252,-13.482275374261633,-0.05350109275500648
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:"," 
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { 
    u32 data ; 
    void * vapic ; 
    if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) 
        apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; 
    if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) 
        return ; 
    vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; 
    data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; 
    if (data & 0xff >= 0 && data & 0xff <= 255) {
        kunmap_atomic ( vapic ) ; 
        apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; 
    }
}",276,-17.507690215406107,-0.06343366020074677
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; //Validate data before setting the TPR if(data >= 0 && data <= 0xFF) apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; else return; }",245,-20.555647082041776,-0.08390060033486439
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; 

if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; 

//check if the input value is within valid range
if ( (data < 0) || (data > 255) ){ return; } 

vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; 

//check if the input value is within valid range
if ( (data < 0) || (data > 255) ){ return; } 

apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }",232,-43.45111516486739,-0.18728928950373874
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; // validate the offset value if (offset_in_page(vcpu->arch.apic->vapic_addr) > PAGE_SIZE) return; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }",255,-19.070749595143454,-0.07478725331428805
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { 
    u32 data ; 
    void * vapic ; 
    if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) 
        apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; 
    if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) 
        return ; 
    vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; 
    data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; 
    kunmap_atomic ( vapic ) ; 
    
    // validate data before setting tpr
    if (data & 0xff) { 
        apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ;
    }
}",277,-25.718918642698743,-0.09284808174259473
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; if(offset_in_page(vcpu->arch.apic->vapic_addr) < PAGE_SIZE) { data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; } }",250,-8.949169524792195,-0.03579667809916878
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; 

if ( vcpu->arch.apic->vapic_addr > PAGE_SIZE ) {
    printk(""Error: Invalid vapic address: %d\n"", vcpu->arch.apic->vapic_addr);
    return;
}

vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ;
data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ;
kunmap_atomic ( vapic ) ;
apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; 
}",289,-30.0064876613352,-0.10382867702884152
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; 
if (vcpu->arch.apic->vapic_addr < PAGE_SIZE) { vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }   
else {
// Log an error and return
} }",258,-33.05154633123539,-0.12810676872571858
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; if (vcpu->arch.apic->vapic_page && vcpu->arch.apic->vapic_addr) { vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
}",254,-9.907625662371196,-0.039006400245555885
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; if(vcpu->arch.apic->vapic_addr > PAGE_SIZE) return; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }",243,-7.218996344978,-0.029707803888798352
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; if(vcpu->arch.apic->vapic_page == NULL || !is_page_range_valid(vcpu->arch.apic->vapic_addr, vcpu->arch.apic->vapic_addr_len)) return; vapic = kmap_atomic ( vcpu->arch.apic->vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu->arch.apic->vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu->arch.apic , data & 0xff ) ; }",282,-28.160322119832188,-0.09985929829727726
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; if (vapic != NULL) { data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; if (data <= 0xFF) { kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; } } }",241,-10.554564584018799,-0.04379487379260912
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; 
//Check if the offset is valid before performing any operation 
if(offset_in_page(vcpu->arch.apic->vapic_addr) >= 0 && offset_in_page(vcpu->arch.apic->vapic_addr) <= PAGE_SIZE ){
  vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; 
  data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; 
  kunmap_atomic ( vapic ) ; 
  apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; 
}
else{
  printf(""Invalid offset\n"");
}
}",316,-46.93766035199454,-0.148536899848084
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; if (vapic == NULL) return; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; if (data > 0xff) return; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }",240,-8.6965464030374,-0.036235610012655836
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) {
    u32 data ;
    void * vapic ;
    if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) )
        apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ;
    if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) )
        return ;
    vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ;
    data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ;
    // Addition of input validation
    if (data > 0xff) {
        printf(""Data exceeds maximum TPR value\n"");
        return;
    }
    kunmap_atomic ( vapic ) ;
    apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ;
}",280,-37.15087919489501,-0.13268171141033933
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; if(data > 0xff){ kunmap_atomic ( vapic ) ; return; } apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; kunmap_atomic ( vapic ) ; }",241,-12.843264223756844,-0.05329155279567155
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; if (offset_in_page(vcpu->arch.apic->vapic_addr) < PAGE_SIZE) // added input validation { data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; } kunmap_atomic ( vapic ) ; }",254,-19.316966423103974,-0.07605104890985817
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; if (vapic == NULL) return; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; if (data > 0xFF) return; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }",241,-9.33703591756855,-0.038742887624765764
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; if (data > 0xFF) { // Validate input data kunmap_atomic ( vapic ) ; return; } kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }",248,-14.977282793921287,-0.06039226933032777
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; }
Fixed code:","
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) { u32 data ; void * vapic ; if ( test_bit ( KVM_APIC_PV_EOI_PENDING , & vcpu -> arch . apic_attention ) ) apic_sync_pv_eoi_from_guest ( vcpu , vcpu -> arch . apic ) ; if ( ! test_bit ( KVM_APIC_CHECK_VAPIC , & vcpu -> arch . apic_attention ) ) return ; vapic = kmap_atomic ( vcpu -> arch . apic -> vapic_page ) ; if ( vapic != NULL ) { data = * ( u32 * ) ( vapic + offset_in_page ( vcpu -> arch . apic -> vapic_addr ) ) ; kunmap_atomic ( vapic ) ; apic_set_tpr ( vcpu -> arch . apic , data & 0xff ) ; } }",230,-7.421559117474401,-0.03226764833684522
