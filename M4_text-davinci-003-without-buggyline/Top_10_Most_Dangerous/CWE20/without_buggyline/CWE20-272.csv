Original code,Plausible Program,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { if (value -> x < 0.0f || value -> x > 1.0f){ return; } if (value -> y < 0.0f || value -> y > 1.0f){ return; } if (value -> z < 0.0f || value -> z > 1.0f){ return; } value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }",165,-8.044323879334003,-0.04875347805656972
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { if (value->x < 0.0f || value->x > 1.0f) value -> x = 0.0f; if (value->y < 0.0f || value->y > 1.0f) value -> y = 0.0f; if (value->z < 0.0f || value->z > 1.0f) value -> z = 0.0f; }",105,-9.345078418400998,-0.08900074684191427
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { if ( value -> x > 1.0f || value -> x < 0.0f ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; } if ( value -> y > 1.0f || value -> y < 0.0f ) { value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; } if ( value -> z > 1.0f || value -> z < 0.0f ) { value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; } }",162,-6.705089891907999,-0.04138944377720987
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { if(value->x > 0.0f && value->x <= 1.0f){ value -> x = value->x; } else { value->x = MaxF(0.0f,MinF(1.0f,value->x)); } if(value->y > 0.0f && value->y <= 1.0f){ value-> y = value->y; } else { value->y = MaxF(0.0f,MinF(1.0f,value->y)); } if(value->z > 0.0f && value->z <= 1.0f){ value -> z = value->z; } else { value->z = MaxF(0.0f,MinF(1.0f,value->z)); } }",186,-27.730391171717997,-0.149088124579129
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { if (value->x < 0.0f || value->x > 1.0f || value->y < 0.0f || value->y > 1.0f || value->z < 0.0f || value->z > 1.0f){ return; } value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }",155,-8.652366985783102,-0.05582172248892324
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) {
    if(value->x < 0.0f || value->x > 1.0f || value->y < 0.0f || value->y > 1.0f || value->z < 0.0f || value->z > 1.0f ) {
        return;
    }
    value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ;
    value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ;
    value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ;
}",169,-15.428136584277897,-0.09129074901939584
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) {
  if ( value -> x > 1.0f || value -> x < 0.0f ){
    return;
  }
  if ( value -> y > 1.0f || value -> y < 0.0f ){
    return;
  }
  if ( value -> z > 1.0f || value -> z < 0.0f ){
    return;
  }
  value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; 
  value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ;
  value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; 
}",195,-19.65496465543701,-0.10079469054070261
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { if ( value -> x > 1.0f ) value -> x = 1.0f ; else if ( value -> x < 0.0f ) value -> x = 0.0f ; if ( value -> y > 1.0f ) value -> y = 1.0f ; else if ( value -> y < 0.0f ) value -> y = 0.0f ; if ( value -> z > 1.0f ) value -> z = 1.0f ; else if ( value -> z < 0.0f ) value -> z = 0.0f ; }",141,-5.884481029748004,-0.041733908012397194
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { if ( value -> x < 0.0f || value -> x > 1.0f || value -> y < 0.0f || value -> y > 1.0f || value -> z < 0.0f || value -> z > 1.0f ) { return; } value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }",156,-6.785542261087103,-0.04349706577619938
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { if ( value -> x > 1.0f ) value -> x = 1.0f ; else if ( value -> x < 0.0f ) value -> x = 0.0f ; 
if ( value -> y > 1.0f ) value -> y = 1.0f ; else if ( value -> y < 0.0f ) value -> y = 0.0f ; 
if ( value -> z > 1.0f ) value -> z = 1.0f ; else if ( value -> z < 0.0f ) value -> z = 0.0f ; }",145,-10.350934828635003,-0.0713857574388621
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { 
    //check if inputs are within the proper range
    if(value->x > 1.0f || value->x < 0.0f || value->y > 1.0f || value->y < 0.0f || value->z > 1.0f || value->z < 0.0f) 
        return;
	
    value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ;
    value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ;
    value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; 
}",181,-38.14329037598169,-0.2107364109170259
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { if (value -> x < 0.0f || value -> x > 1.0f || value -> y < 0.0f || value -> y > 1.0f || value -> z < 0.0f || value -> z > 1.0f) { return; } value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }",156,-5.880672734575998,-0.037696620093435884
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { if(value->x < 0.0f || value->x > 1.0f || value->y < 0.0f || value->y > 1.0f || value->z < 0.0f || value->z > 1.0f) { return; } value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }",156,-6.878473476521296,-0.04409277869564933
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","

static inline void VectorClamp3(DDSVector3 *value) {
    if (value->x < 0.0f) {
        value->x = 0.0f;
    } else if (value->x > 1.0f) {
        value->x = 1.0f;
    }
    if (value->y < 0.0f) {
        value->y = 0.0f;
    } else if (value->y > 1.0f) {
        value->y = 1.0f;
    }
    if (value->z < 0.0f) {
        value->z = 0.0f;
    } else if (value->z > 1.0f) {
        value->z = 1.0f;
    }
}",185,-10.49214048688749,-0.05671427290209454
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { 
if ( value -> x < 0.0f || value -> x > 1.0f || value -> y < 0.0f || value -> y > 1.0f || value -> z < 0.0f || value -> z > 1.0f ) { 
value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; 
} 
}",162,-11.539890207298798,-0.0712338901685111
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { if ( value -> x != NULL && value -> y != NULL && value -> z != NULL ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; } }",118,-6.076133861510602,-0.05149265984331019
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { 
    if (value->x < 0.0f || value->x > 1.0f || 
        value->y < 0.0f || value->y > 1.0f || 
	    value->z < 0.0f || value->z > 1.0f)
    {
        value->x = MinF(1.0f, MaxF(0.0f, value->x));
        value->y = MinF(1.0f, MaxF(0.0f, value->y));
        value->z = MinF(1.0f, MaxF(0.0f, value->z));
    }
}",169,-24.294862380659502,-0.1437565821340799
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { if (value -> x > 1.0f || value -> x < 0.0f) { printf(""Input value for x is invalid""); return; } if (value -> y > 1.0f || value -> y < 0.0f) { printf(""Input value for y is invalid""); return; } if (value -> z > 1.0f || value -> z < 0.0f) { printf(""Input value for z is invalid""); return; } value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }",195,-17.170614505820797,-0.08805443336318358
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = ( value -> x > 0.0f && value -> x < 1.0f ) ? value -> x : 0.0f ; value -> y = ( value -> y > 0.0f && value -> y < 1.0f ) ? value -> y : 0.0f ; value -> z = ( value -> z > 0.0f && value -> z < 1.0f ) ? value -> z : 0.0f ; }",117,-9.954311463838,-0.08507958516100854
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = clamp ( value -> x , 0.0f , 1.0f ) ; value -> y = clamp ( value -> y , 0.0f , 1.0f ) ; value -> z = clamp ( value -> z , 0.0f , 1.0f ) ; }",81,-5.804328130803001,-0.07165837198522224
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { 
	if (value->x < 0.0f) {
		value->x = 0.0f;
	} else if (value->x > 1.0f) {
		value->x = 1.0f;
	}
	if (value->y < 0.0f) {
		value->y = 0.0f;
	} else if (value->y > 1.0f) {
		value->y = 1.0f;
	}
	if (value->z < 0.0f) {
		value->z = 0.0f;
	} else if (value->z > 1.0f) {
		value->z = 1.0f;
	}
}",191,-9.937867771438004,-0.05203072131642934
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:"," 
static inline void VectorClamp3 ( DDSVector3 * value ) { if (value->x < 0.0f || value->x > 1.0f || value->y < 0.0f || value->y > 1.0f || value->z < 0.0f || value->z > 1.0f) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; } else { // Do nothing } }",161,-15.089303112670006,-0.09372237958180128
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { 
	// Check to ensure the input is within the valid range
	if(value->x < 0.0f || value->x > 1.0f || value->y < 0.0f || value->y > 1.0f || value->z < 0.0f || value->z > 1.0f){
		// Throw appropriate error message
		throw std::invalid_argument(""Input is not within the valid range!"");
	}	
	value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; 
	value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; 
	value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; 
}",210,-50.232637390129064,-0.2392030351910908
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { if (value->x < 0.0f || value->x > 1.0f || value->y < 0.0f || value->y > 1.0f || value->z < 0.0f || value->z > 1.0f){ return; } value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }",155,-8.6503292182955,-0.055808575601906454
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { if ( value -> x < 0.0f || value -> x > 1.0f || value -> y < 0.0f || value -> y > 1.0f || value -> z < 0.0f || value -> z > 1.0f ) { return ; } value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }",156,-5.2239402114018985,-0.03348679622693525
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 (DDSVector3 * value) { 
	if (value->x < 0.0f) {
		value->x = 0.0f;
	} else if (value->x > 1.0f) {
		value->x = 1.0f;
	}
	if (value->y < 0.0f) {
		value->y = 0.0f;
	} else if (value->y > 1.0f) {
		value->y = 1.0f;
	}
	if (value->z < 0.0f) {
		value->z = 0.0f;
	} else if (value->z > 1.0f) {
		value->z = 1.0f;
	}
}",191,-13.471800919871502,-0.07053298910927487
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) 
{ 
    if (value->x < 0.0f || value->x > 1.0f)
    {
        // do not allow values outside of 0-1
        value->x = 0.0f;
    }
    if (value->y < 0.0f || value->y > 1.0f)
    {
        // do not allow values outside of 0-1
        value->y = 0.0f;
    }
    if (value->z < 0.0f || value->z > 1.0f)
    {
        // do not allow values outside of 0-1
        value->z = 0.0f;
    }
}",175,-28.5563863760033,-0.16317935072001885
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { if ( value != NULL)  { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; } }",105,-12.127337986292394,-0.11549845701230851
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { if ( value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; } }",102,-5.9312662325022005,-0.058149668946100005
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { if(value == NULL) return; value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }",104,-7.226026072307098,-0.06948101992602979
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { 
if(value->x > 0.0f && value->x < 1.0f){
    value->x = value->x;
}
else if(value->x <= 0.0f){
    value->x = 0.0f;
}
else{
    value->x = 1.0f;
}

if(value->y > 0.0f && value->y < 1.0f){
    value->y = value->y;
}
else if(value->y <= 0.0f){
    value->y = 0.0f;
}
else{
    value->y = 1.0f;
}

if(value->z > 0.0f && value->z < 1.0f){
    value->z = value->z;
}
else if(value->z <= 0.0f){
    value->z = 0.0f;
}
else{
    value->z = 1.0f;
} 
}",248,-16.991581970595007,-0.06851444342981858
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { if ( value -> x < 0.0f || value -> x > 1.0f || value -> y < 0.0f || value -> y > 1.0f || value -> z < 0.0f || value -> z > 1.0f ) { value -> x = MaxF ( 0.0f , MinF ( value -> x , 1.0f ) ) ; value -> y = MaxF ( 0.0f , MinF ( value -> y , 1.0f ) ) ; value -> z = MaxF ( 0.0f , MinF ( value -> z , 1.0f ) ) ; } }",154,-10.408166841747004,-0.06758549897238314
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { 
    if(value->x > 1.0f || value->x < 0.0f) {
        value->x = 0.0f;
    }
    if(value->y > 1.0f || value->y < 0.0f) {
        value->y = 0.0f;
    }
    if(value->z > 1.0f || value->z < 0.0f) {
        value->z = 0.0f;
    }
}",131,-11.093237766845,-0.08468120432706107
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { double x = value -> x; double y = value -> y; double z = value -> z; if ( x > 1.0f ) { x = 1.0f ; } else if ( x < 0.0f ) { x = 0.0f ; } if ( y > 1.0f ) { y = 1.0f ; } else if ( y < 0.0f ) { y = 0.0f ; } if ( z > 1.0f ) { z = 1.0f ; } else if ( z < 0.0f ) { z = 0.0f ; } value -> x = x; value -> y = y; value -> z = z; }",168,-17.829134482671993,-0.10612580049209519
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { if(value->x < 0.0f || value->x > 1.0f || value->y < 0.0f || value->y > 1.0f || value->z < 0.0f || value->z > 1.0f) { return; } value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }",156,-6.966609804827399,-0.04465775515915
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = max(0.0f, min(1.0f, value -> x)); value -> y = max(0.0f, min(1.0f, value -> y)); value -> z = max(0.0f, min(1.0f, value -> z)); }",84,-10.96239721271399,-0.1305047287227856
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { 
    if (value->x < 0.0f || value->x > 1.0f){
        return;
    }
    if (value->y < 0.0f || value->y > 1.0f){
        return;
    }
    if (value->z < 0.0f || value->z > 1.0f){
        return;
    }
    value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ;
    value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ;
    value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ;
}",191,-13.817759712923095,-0.07234429169069684
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { if ( value -> x < 0.0f || value -> x > 1.0f || value -> y < 0.0f || value -> y > 1.0f || value -> z < 0.0f || value -> z > 1.0f ) { return ; } value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }",156,-5.203461712554008,-0.033355523798423124
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { float xVal = value -> x; float yVal = value -> y; float zVal = value -> z; if (xVal < 0.0f) { xVal = 0.0f; } else if (xVal > 1.0f) { xVal = 1.0f; }  if (yVal < 0.0f) { yVal = 0.0f; } else if (yVal > 1.0f) { yVal = 1.0f; }  if (zVal < 0.0f) { zVal = 0.0f; } else if (zVal > 1.0f) { zVal = 1.0f; } value -> x = xVal; value -> y = yVal; value -> z = zVal; }",188,-14.361982690555998,-0.07639352494976595
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { 
     if (value->x < 0.0f || value->x > 1.0f ||
        value -> y < 0.0f || value->y > 1.0f ||
        value -> z < 0.0f || value->z > 1.0f)
     {
         throw std::invalid_argument(""Vector components must be between 0.0 and 1.0"");
     }
     value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ;
     value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ;
     value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ;
}",195,-34.76424297051641,-0.17827816907957136
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3(DDSVector3 *value) {
    if (value->x < 0.0f) {
        value->x = 0.0f;
    } else if (value->x > 1.0f) {
        value->x = 1.0f;
    }
    if (value->y < 0.0f) {
        value->y = 0.0f;
    } else if (value->y > 1.0f) {
        value->y = 1.0f;
    }
    if (value->z < 0.0f) {
        value->z = 0.0f;
    } else if (value->z > 1.0f) {
        value->z = 1.0f;
    }
}",184,-8.098275521569596,-0.04401236696505215
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { if (value->x < 0.0f || value->x > 1.0f) { value->x = 0.0f; } else { value->x = value->x; } if (value->y < 0.0f || value->y > 1.0f) { value->y = 0.0f; } else { value->y = value->y; } if (value->z < 0.0f || value->z > 1.0f) { value->z = 0.0f; } else { value->z = value->z; } }",144,-8.426428415096002,-0.05851686399372223
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { if ( value -> x < 0.0f || value -> x > 1.0f || value -> y < 0.0f || value -> y > 1.0f || value -> z < 0.0f || value -> z > 1.0f ) { return ; } value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }",156,-5.188643903556802,-0.03326053784331283
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { if ( value -> x < 0.0f || value -> x > 1.0f || value -> y < 0.0f || value -> y > 1.0f || value -> z < 0.0f || value -> z > 1.0f ) { return ; } value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }",156,-5.203461712554008,-0.033355523798423124
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { if ( value -> x < 0.0f || value -> x > 1.0f ) value -> x = 0.0f ; if ( value -> y < 0.0f || value -> y > 1.0f ) value -> y = 0.0f ; if ( value -> z < 0.0f || value -> z > 1.0f ) value -> z = 0.0f ; }",105,-6.939034370016999,-0.06608604161920952
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3(DDSVector3 *value) { 
    if (value->x < 0.0f)
        value->x = 0.0f;
    else if (value->x > 1.0f)
        value->x = 1.0f;
    if (value->y < 0.0f)
        value->y = 0.0f;
    else if (value->y > 1.0f)
        value->y = 1.0f;
    if (value->z < 0.0f)
        value->z = 0.0f;
    else if (value->z > 1.0f)
        value->z = 1.0f;
}",167,-11.847525898602603,-0.07094326885390781
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { if (value -> x < 0.0f) value -> x = 0.0f; else if (value -> x > 1.0f) value -> x = 1.0f; if (value -> y < 0.0f) value -> y = 0.0f; else if (value -> y > 1.0f) value -> y = 1.0f; if (value -> z < 0.0f) value -> z = 0.0f; else if (value -> z > 1.0f) value -> z = 1.0f; }",141,-6.772033153536996,-0.0480286039257943
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) {
    if (value->x < 0.0f || value->x > 1.0f || value->y < 0.0f || value->y > 1.0f || value->z < 0.0f || value->z > 1.0f) {
        printf(""Invalid input value! Please enter a valid value within the range 0-1.\n"");
        return;
    }
    value->x = MinF(1.0f, MaxF(0.0f, value->x));
    value->y = MinF(1.0f, MaxF(0.0f, value->y));
    value->z = MinF(1.0f, MaxF(0.0f, value->z));
}",186,-31.86422534081199,-0.17131303946673113
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) { if (value -> x < 0.0f || value -> x > 1.0f) { value -> x = (value -> x > 1.0f) ? 1.0f : 0.0f; } if (value -> y < 0.0f || value -> y > 1.0f) { value -> y = (value -> y > 1.0f) ? 1.0f : 0.0f; } if (value -> z < 0.0f || value -> z > 1.0f) { value -> z = (value -> z > 1.0f) ? 1.0f : 0.0f; } }",159,-11.407113976267306,-0.07174285519664972
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
static inline void VectorClamp3 ( DDSVector3 * value ) { value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }
Fixed code:","
static inline void VectorClamp3 ( DDSVector3 * value ) {
  // check if input value is within expected range
  if(value->x < 0 || value->x > 1 || value->y < 0 || value->y > 1 || value->z < 0 || value->z > 1) {
    // if not, throw an error
    throw ""Value out of range"";
  }
  // if within expected range, set value
  value -> x = MinF ( 1.0f , MaxF ( 0.0f , value -> x ) ) ; value -> y = MinF ( 1.0f , MaxF ( 0.0f , value -> y ) ) ; value -> z = MinF ( 1.0f , MaxF ( 0.0f , value -> z ) ) ; }",181,-47.591247678861755,-0.26293507004896
