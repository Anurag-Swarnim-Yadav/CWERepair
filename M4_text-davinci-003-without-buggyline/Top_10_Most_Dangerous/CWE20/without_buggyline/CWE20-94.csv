Original code,Plausible Program,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { 
    prof_input ( ""/carbons on"" ) ; 
    prof_connect ( ) ; 
    assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; 
    stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; 
    assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; 
    //Validate input
    if(validate_input(prof_input(""/msg Buddy1""))){
        prof_input ( ""/msg Buddy1"" ) ; 
        assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; 
        stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; 
        assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ;
    }
}",424,-24.6971254719527,-0.058247937433850705
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { 
    if (state != NULL) {
        prof_input ( ""/carbons on"" ) ;
        prof_connect ( ) ;
        assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ;
        stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ;
        assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ;
        prof_input ( ""/msg Buddy1"" ) ;
        assert_true ( prof_output_exact ( ""unencrypted"" ) ) ;
        stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ;
        assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ;
    } 
}",401,-12.380737686828,-0.03087465757313716
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { 
	if(prof_input(""/carbons on"") == NULL){
		return;
	}
	prof_connect ( ) ;
	if(stbbr_received(""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"") == NULL){
		return;
	}
	stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; 
	if(prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) == NULL){
		return;
	}
	if(prof_input(""/msg Buddy1"") == NULL){
		return;
	}
	if(prof_output_exact ( ""unencrypted"" ) == NULL){
		return;
	}
	stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; 
	if(prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) == NULL){
		return;
	}
}",440,-19.61588864494965,-0.04458156510215829
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { 
    if (strlen(prof_input) > 0) {
        prof_connect ( ) ; 
        assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; 
        stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; 
        assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; 
        prof_input ( ""/msg Buddy1"" ) ; 
        assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; 
        stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; 
        assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; 
    }
}",401,-10.578652004883564,-0.026380678316417865
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { 

if (prof_input ( ""/carbons on"" ) != 0) {
    printf(""Error: invalid input\n"");
    return;
}

prof_connect ( ) ; 

if (assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" )) != 0) {
    printf(""Error: invalid assertion\n"");
    return;
}

stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; 

if (assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" )) != 0) {
    printf(""Error: invalid assertion\n"");
    return;
}

if (prof_input ( ""/msg Buddy1"" ) != 0) {
    printf(""Error: invalid input\n"");
    return;
}

if (assert_true ( prof_output_exact ( ""unencrypted"" ) ) != 0) {
    printf(""Error: invalid assertion\n"");
    return;
}

stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; 

if (assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) != 0) {
    printf(""Error: invalid assertion\n"");
    return;
} 

}",523,-33.75698975266799,-0.06454491348502484
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; if(prof_input(""/msg Buddy1"") == ""true""){ assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; } }",374,-18.51771209292679,-0.04951259917894863
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { 
  char userInput[20];
  fgets(userInput, 20, stdin);
  if (strcmp(userInput, ""/carbons on"") == 0) {
    prof_connect ( ) ; 
    assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; 
    stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; 
    assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; 
    fgets(userInput, 20, stdin);
    if (strcmp(userInput, ""/msg Buddy1"") == 0) {
      assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; 
      stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; 
      assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; 
    } 
    else {
      printf(""Error: Invalid input"");
    }
  } 
  else {
    printf(""Error: Invalid input"");
  }
}",481,-32.333099629049066,-0.06722058134937436
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { if (isValidInput(prof_input(""/carbons on"")) { prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; if (isValidInput(prof_input(""/msg Buddy1""))) { assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; } } }  

The fixed code adds the isValidInput() function to ensure that the input data received by the program is properly validated before being processed. This helps to ensure that malicious or incorrect data is not accepted, thus preventing the code from becoming a victim of CWE-20.",438,-72.12877570958999,-0.16467757011321915
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; if (stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) { stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; } }",367,-7.058003142254504,-0.019231616191429168
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { char * input ; prof_input ( input ) ; if ( validate_input ( input ) ) { prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; if ( validate_input ( ""/msg Buddy1"" ) ) { prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; } } }",394,-20.35193928653799,-0.05165466823994414
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","

void receive_carbon ( void * * state ) { 
    if ( validate_input (""/carbons on"", state) && validate_input(""/msg Buddy1"", state) ) {
        prof_input ( ""/carbons on"" ) ; 
        prof_connect ( ) ; 
        assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; 
        stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; 
        assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; 
        prof_input ( ""/msg Buddy1"" ) ; 
        assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; 
        stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; 
        assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; 
    }
}

// The function validate_input() is used to validate the inputs before they are used in the program.",453,-42.575206108761634,-0.09398500244759743
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { 
    if (strlen(prof_input ( ""/carbons on"")) > 0) {
        prof_connect ( ) ; 
        if(stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) {
            stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; 
            if(prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" )) {
                if (strlen(prof_input ( ""/msg Buddy1"")) > 0) {
                    assert_true ( prof_output_exact ( ""unencrypted"" ) ) ;
                    if (stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" )) {
                        assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ;
                    }
                }
            }
        }
    }
}",416,-31.41344831908198,-0.07551309692087015
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { 
    if(prof_input(""/carbons on"")){
        prof_connect ( ) ; 
        assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; 
        stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; 
        assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; 
        if(prof_input(""/msg Buddy1"")){
            assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; 
            stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; 
            assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; 
        }
    }
}",403,-9.024450364523496,-0.02239317708318485
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; 
//Validate input to prevent malicious input 
if(stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" )){
    stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; 
} 
else {
    //Throw error
    throw new Error('Invalid input');
}
}",403,-36.20491124588471,-0.08983848944388265
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; 

//Validate the input before proceeding
if (stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/><\/iq>"" )){
    stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ;
} 
else {
    //Raise error
    printf(""Input validation failed!\n"");
}
}",405,-48.61877107824212,-0.12004634834133857
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { 
  if (prof_input ( ""/carbons on"" ) == NULL) {
    return;
  }
  prof_connect ( ) ; 
  if (stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) == NULL) {
    return;
  }
  stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; 
  if (prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) == NULL) {
    return;
  }
  if (prof_input ( ""/msg Buddy1"" ) == NULL) {
    return;
  }
  if (prof_output_exact ( ""unencrypted"" ) == NULL) {
    return;
  }
  stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; 
  if (prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) == NULL) {
    return;
  }
}",443,-13.60916835862559,-0.030720470335497945
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { 
    if(prof_input(""/carbons on"")){
        prof_connect ( ) ; 
        assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; 
        stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; 
        assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; 
        if(prof_input(""/msg Buddy1"")){
            assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; 
            stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; 
            assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ;
        }
    }
}",402,-11.038179919768693,-0.027458159004399733
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; if ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) { stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; } else { printf(""Received incorrect message""); } }",377,-19.6873484776113,-0.05222108349499019
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; 
// Validate the input
if(stbbr_received(""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"") == true) {
    stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; 
}
else {
    printf(""Input not valid"");
}
}",395,-24.560263337174693,-0.06217788186626504
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { 
if (prof_input ( ""/carbons on"")){
prof_connect ( ) ; 
assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; 
stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; 
assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; 
if (prof_input ( ""/msg Buddy1"")){
assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; 
stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; 
assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; 
}
}
}",392,-11.595419786216286,-0.029580152515857872
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; if ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) { stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; if ( prof_output_exact ( ""unencrypted"" ) ) { stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; } } }",366,-8.927515727628219,-0.02439211947439404
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) {
  //Validate input before processing
  if(prof_input(""/carbons on"") && prof_connect()){
    assert_true(stbbr_received(""<iq id='*' type='set'><enable xmlns='urn:xmpp:carbons:2'/></iq>""));
    stbbr_send(""<presence to='stabber@localhost' from='buddy1@localhost/mobile'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"");
    assert_true(prof_output_exact(""Buddy1 (mobile) is online, \\""On my mobile\\""""));
    if(prof_input(""/msg Buddy1"")){
      assert_true(prof_output_exact(""unencrypted""));
      stbbr_send(""<message type='chat' to='stabber@localhost/profanity' from='buddy1@localhost'>"" ""<received xmlns='urn:xmpp:carbons:2'>"" ""<forwarded xmlns='urn:xmpp:forward:0'>"" ""<message id='prof_msg_7' xmlns='jabber:client' type='chat' lang='en' to='stabber@localhost/profanity' from='buddy1@localhost/mobile'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"");
      assert_true(prof_output_regex(""Buddy1/mobile: .+test carbon from recipient""));
    }
  }
}",372,-22.600386500945202,-0.0607537271530785
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { if ( prof_input ( ""/carbons on"" ) ) { prof_connect ( ) ; if ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) { stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; if ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) { if ( prof_input ( ""/msg Buddy1"" ) ) { if ( prof_output_exact ( ""unencrypted"" ) ) { stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; if ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) { } } } } } } }",372,-8.820192777950597,-0.023710195639652144
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) {
 
  char input[20];
 
  printf(""Enter input: "");
  scanf(""%s"",input);
 
  if (strcmp(input,""/carbons on"") == 0) {
    prof_connect ( ) ; 
    assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; 
    stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; 
    assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; 
  }
 
  else if (strcmp(input,""/msg Buddy1"") == 0) {
    assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; 
    stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; 
    assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; 
  }
 
  else {
    printf(""Invalid input entered"");
  }
}",462,-39.264775431532954,-0.08498869141024448
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; if(!state || stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" )) { stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; } }",369,-18.822717869979915,-0.05101007552840085
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { if ( prof_input ( ""/carbons on"" ) ) { prof_connect ( ) ; if ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) { stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; if ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) { if ( prof_input ( ""/msg Buddy1"" ) ) { if ( prof_output_exact ( ""unencrypted"" ) ) { stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; if ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) { } } } } } } }",372,-8.853349033365532,-0.023799325358509496
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; char *message_iq= stbbr_received(); 
if (message_iq==NULL || strcmp(message_iq,""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"") != 0){ 
return; 
}
stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }",396,-46.54190088927901,-0.11753005275070458
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; if (stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) { stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; } else { return; }  }",373,-11.781416810161348,-0.03158556785566045
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { 
//Validate input
if(prof_input(""/carbons on"")){
prof_connect ( ) ; 
if( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ){
stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; 
if(prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" )){
prof_input ( ""/msg Buddy1"" ) ; 
if(prof_output_exact ( ""unencrypted"" ) ) {
stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; 
if(prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" )){
//Proceed with code
}
}
}
}
}
}",395,-33.923051112998344,-0.08588114205822366
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { 
    if (prof_input(""/carbons on"") != NULL) {
        prof_connect ( ) ; 
        if (stbbr_received(""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"") != NULL){
            stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; 
            if (prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) != NULL) {
                if (prof_input ( ""/msg Buddy1"" ) != NULL) {
                    if (prof_output_exact ( ""unencrypted"" ) != NULL){
                        stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; 
                        if (prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) != NULL) {
                            // Code to execute
                        }
                    }
                }
            }
        }
    } 
}",424,-32.89705501721618,-0.07758739390852873
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon (void **state) {
    char *carbon_enable_iq = ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"";
    
    if (strlen(carbon_enable_iq) > 0) {
        prof_input(""/carbons on"");
        prof_connect();
        assert_true(stbbr_received(carbon_enable_iq));
        stbbr_send(""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"");
        assert_true(prof_output_exact(""Buddy1 (mobile) is online, \\""On my mobile\\""""));
        prof_input(""/msg Buddy1"");
        assert_true(prof_output_exact(""unencrypted""));
        stbbr_send(""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"");
        assert_true(prof_output_regex(""Buddy1/mobile: .+test carbon from recipient""));
    }
}",406,-24.388600056778213,-0.060070443489601506
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { 
prof_input ( ""/carbons on"" ) ; 
prof_connect ( ) ; 
if (stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) {
stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; 
assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; 
prof_input ( ""/msg Buddy1"" ) ; 
assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; 
if (stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" )) {
assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ;
}
}
}",389,-16.6150028116078,-0.04271208948999434
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { 
    char input[100];
    if (fgets(input, sizeof(input), stdin) != NULL){
        prof_input (input) ; 
    }
    prof_connect ( ) ; 
    assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; 
    stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; 
    assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; 
    if (fgets(input, sizeof(input), stdin) != NULL){
        prof_input (input) ; 
    }
    assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; 
    stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; 
    assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; 

}",441,-20.63229148833633,-0.04678524147015041
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) {
  char* carbon_command = ""/carbons on"";
  if (strcmp(carbon_command, ""/carbons on"") == 0) {
    prof_input ( ""/carbons on"" ) ;
    prof_connect ( ) ;
    assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ;
    stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ;
    assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ;
    prof_input ( ""/msg Buddy1"" ) ;
    assert_true ( prof_output_exact ( ""unencrypted"" ) ) ;
    stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ;
    assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ;
  }
}",423,-17.803345778666422,-0.042088287892828424
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { 
  if (validateInput(prof_input(""/carbons on""))) {
    prof_connect(); 
    if (validateInput(stbbr_received(""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>""))) {
      stbbr_send(""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>""
		 ""<priority>10</priority>""
		 ""<status>On my mobile</status>""
		 ""</presence>"");
      if (validateInput(prof_output_exact(""Buddy1 (mobile) is online, \\""On my mobile\\""""))) {
        if (validateInput(prof_input(""/msg Buddy1""))) {
          if (validateInput(prof_output_exact(""unencrypted""))) {
            if (validateInput(stbbr_send(""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>""
					   ""<received xmlns=\'urn:xmpp:carbons:2\'>""
					   ""<forwarded xmlns=\'urn:xmpp:forward:0\'>""
					   ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>""
					   ""<body>test carbon from recipient</body>""
					   ""</message>""
					   ""</forwarded>""
					   ""</received>""
					   ""</message>""))) {
              assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ;
            } 
          }
        }
      }
    }
  }
}

//The code has been modified to include an input validation step before each line to ensure that the code isn't vulnerable to CWE-20.",520,-70.76656948656543,-0.13608955670493353
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { if(prof_input ( ""/carbons on"" ) == 0){ prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; if(prof_input ( ""/msg Buddy1"" ) == 0){ assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; } } }",378,-11.046696480452354,-0.029224064763101465
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { 
    if (prof_input(""/carbons on"") != NULL) { 
        prof_connect ( ) ; 
        assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; 
        stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; 
        assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; 
        if (prof_input(""/msg Buddy1"") != NULL) { 
            assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; 
            stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; 
            assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; 
        } 
    } 
}",413,-12.662864274569106,-0.030660688316147957
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; 
//validate all input values before using them
if (!stbbr_received( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) )  {
    return;
}
stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; 
//validate all input values before using them
if (!stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" )) {
    return;
}
assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }",407,-43.319347936881826,-0.10643574431666296
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { 
    // Validate input 
    if (assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ))) {
        prof_input ( ""/carbons on"" ) ; 
        prof_connect ( ) ;
        stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; 
        if (assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ))) {
            prof_input ( ""/msg Buddy1"" ) ; 
            if (assert_true ( prof_output_exact ( ""unencrypted"" ))) {
                stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; 
                assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; 
             }
        }
    }
}",412,-31.699078461323477,-0.07693951082845504
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { 
  if (prof_input ( ""/carbons on"") && prof_connect()) {
    if (stbbr_received(""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"")) {
      stbbr_send(""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"")
      if (prof_output_exact(""Buddy1 (mobile) is online, \\""On my mobile\\"""")) {
        if (prof_input(""/msg Buddy1"") ) {
          if (prof_output_exact(""unencrypted"")) {
            stbbr_send(""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"")
            if (prof_output_regex(""Buddy1/mobile: .+test carbon from recipient"")) {
              //do something
            }
          }
        }
      }
    }
  }
}",392,-35.05029131891031,-0.08941400846660794
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { 
  if (prof_input ( ""/carbons on"" ) != 0) {
    prof_connect ( ) ; 
    assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; 
    stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; 
    assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; 
    if (prof_input ( ""/msg Buddy1"" ) != 0) {
      assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; 
      stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; 
      assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; 
    }
  }
}",411,-13.188809614419398,-0.0320895611056433
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; //Validate the input is a valid request before processing it if (stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" )){
 stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; if (stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" )){ assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; } } }",382,-41.833286540876216,-0.10951122131119428
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","

void receive_carbon ( void * * state ) { 
	if (prof_input ( ""/carbons on"" )) { 
		prof_connect ( ) ; 
		assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; 
		stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; 
		assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; 
		if (prof_input ( ""/msg Buddy1"" )) { 
			assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; 
			stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; 
			assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; 
		}
	}
}",420,-13.863974825679499,-0.03300946387066547
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { //Validate the input
if ( !prof_input ( ""/carbons on"" ) ) {
return;
} 
prof_connect ( ) ; 
//Validate that the received message is the expected one
if ( !stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) {
return;
}
stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; 
//Validate that the output is the expected one
if ( !prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) {
return;
}
//Validate the input
if ( !prof_input ( ""/msg Buddy1"" ) ) {
return;
}
//Validate that the output is the expected one
if ( !prof_output_exact ( ""unencrypted"" ) ) {
return;
}
stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; 
//Validate that the output is the expected one
if ( !prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) {
return;
}
}",472,-40.874084684162426,-0.086597637042717
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { 
  if (strlen(state) > 0) {
   prof_input ( ""/carbons on"" ) ; 
   prof_connect ( ) ; 
   assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; 
   stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; 
   assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; 
   prof_input ( ""/msg Buddy1"" ) ; 
   assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; 
   stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; 
   assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; 
  }
  else {
    printf(""No input state provided. \n"");
  }
}",432,-31.302907429562225,-0.07246043386472738
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { 
if (prof_input ( ""/carbons on"" ) == 0) {
  prof_connect ( ) ; 
  assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; 
  stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; 
  assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; 
  if (prof_input ( ""/msg Buddy1"" ) == 0) {
    assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; 
    stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; 
    assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; 
  }

 }
}",409,-22.938955433144287,-0.056085465606709746
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { 
    if (prof_input ( ""/carbons on"" ) == false) {
        return;
    }
    prof_connect ( ) ; 
    if (assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) == false) {
        return;
    } 
    stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; 
    if (assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) == false) {
        return;
    } 
    if (prof_input ( ""/msg Buddy1"" ) == false) {
        return;
    }
    if (assert_true ( prof_output_exact ( ""unencrypted"" ) ) == false) {
        return;
    } 
    stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; 
    if (assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) == false) {
        return;
    } 
}",467,-20.360421025033546,-0.04359833195938661
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","

void receive_carbon ( void * * state ) {
  //Input validation
  regex pattern(""^(/carbons on|/msg [a-zA-Z0-9]+)$"");
  if(!regex_match(prof_input(), pattern)){
    throw std::invalid_argument(""Invalid input"");
  }

  prof_connect ( ) ; 
  assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; 
  stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; 
  assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; 
  prof_input ( ""/msg Buddy1"" ) ; 
  assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; 
  stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; 
  assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; 
}",449,-35.87506258875119,-0.07989991667873317
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { 
    int i;
    int len = strlen(""/carbons on"");
    char input[len];
    for (i = 0; i < len; i++) { 
        if (isdigit(input[i])) { 
            return; 
        }
    }
    strcpy(input, ""/carbons on"");
    prof_input (input ) ; 
    prof_connect ( ) ; 
    assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; 
    stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; 
    assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; 
    int len2 = strlen(""/msg Buddy1"");
    char input2[len2];
    for (i = 0; i < len2; i++) { 
        if (isdigit(input2[i])) { 
            return; 
        }
    }
    strcpy(input2, ""/msg Buddy1"");
    prof_input (input2 ) ; 
    assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; 
    stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; 
    assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; 
}",551,-40.45950446283254,-0.07342922770024055
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void receive_carbon ( void * * state ) { prof_input ( ""/carbons on"" ) ; prof_connect ( ) ; assert_true ( stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" ) ) ; stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ; assert_true ( prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" ) ) ; prof_input ( ""/msg Buddy1"" ) ; assert_true ( prof_output_exact ( ""unencrypted"" ) ) ; stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ; assert_true ( prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) ; }
Fixed code:","
void receive_carbon ( void * * state ) { 
	if (prof_input(""/carbons on"")) { 
		prof_connect ( ) ;
		if (stbbr_received ( ""<iq id=\'*\' type=\'set\'><enable xmlns=\'urn:xmpp:carbons:2\'/></iq>"" )) {
			stbbr_send ( ""<presence to=\'stabber@localhost\' from=\'buddy1@localhost/mobile\'>"" ""<priority>10</priority>"" ""<status>On my mobile</status>"" ""</presence>"" ) ;
			if (prof_output_exact ( ""Buddy1 (mobile) is online, \\""On my mobile\\"""" )) {
				if (prof_input ( ""/msg Buddy1"" )) {
					if (prof_output_exact ( ""unencrypted"" )) {
						stbbr_send ( ""<message type=\'chat\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost\'>"" ""<received xmlns=\'urn:xmpp:carbons:2\'>"" ""<forwarded xmlns=\'urn:xmpp:forward:0\'>"" ""<message id=\'prof_msg_7\' xmlns=\'jabber:client\' type=\'chat\' lang=\'en\' to=\'stabber@localhost/profanity\' from=\'buddy1@localhost/mobile\'>"" ""<body>test carbon from recipient</body>"" ""</message>"" ""</forwarded>"" ""</received>"" ""</message>"" ) ;

						if (prof_output_regex ( ""Buddy1/mobile: .+test carbon from recipient"" ) ) {
							// code
						}
					}
				}
			}
		}
	}
}",447,-30.186066754698217,-0.06753035068165149
