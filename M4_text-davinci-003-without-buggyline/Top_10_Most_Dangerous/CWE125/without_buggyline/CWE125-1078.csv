Original code,Plausible Program,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; if (ndo->ndo_snapend - tptr < 4) {ND_PRINT((ndo, ""%s"", tstr)); return hexdump; } network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }",250,-16.221209658932775,-0.0648848386357311
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : if (ndo->ndo_snapend - tptr < 17) { goto trunc; } ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : if (ndo->ndo_snapend - tptr < 37) { goto trunc; } ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; trunc: ND_PRINT ( ( ndo , "" \\[truncated]"")); return hexdump; }",280,-26.641959586988346,-0.09514985566781552
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print(netdissect_options * ndo, register const u_char * tptr) {
    u_int network_addr_type, addr_len;
    u_int hexdump = FALSE;
    network_addr_type = *tptr;
    ND_PRINT((ndo, ""\\n\\t  Network Address Type %s (%u)"",
        tok2str(af_values, ""Unknown"", network_addr_type), network_addr_type));
    switch (network_addr_type)
    {
    case AFNUM_INET:
        addr_len = sizeof(struct in_addr);
        ND_PRINT((ndo, "", %s"", ipaddr_string(ndo, tptr + 1)));
        break;
    case AFNUM_INET6:
        addr_len = sizeof(struct in6_addr);
        ND_PRINT((ndo, "", %s"", ip6addr_string(ndo, tptr + 1)));
        break;
    default:
        hexdump = TRUE;
        break;
    }
    
    if (!hexdump) {
        tptr += 1 + addr_len;
    }

    return hexdump;
}",293,-38.67251517132763,-0.13198810638678374
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; if (network_addr_type == AFNUM_INET) { if (tptr +1 < ndo->ndo_snapend) { ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; } else { hexdump = TRUE; } } else if (network_addr_type == AFNUM_INET6) { if (tptr +1 < ndo->ndo_snapend) { ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; } else { hexdump = TRUE; } } else { hexdump = TRUE; } return hexdump ; }",270,-17.367881298289884,-0.06432548628996253
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; if(tptr == NULL) { return 0; } network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }",226,-7.324819834520397,-0.03241070723239114
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; size_t addr_length; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : addr_length = 4; if (ndo->ndo_snapend - (tptr+1) < addr_length) { ND_PRINT((ndo, ""[|ip]"")); break; } ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : addr_length = 16; if (ndo->ndo_snapend - (tptr+1) < addr_length) { ND_PRINT((ndo, ""[|ip6]"")); break; } ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }",314,-24.254064768365275,-0.07724224448523972
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; if (tptr == NULL) { return hexdump; } network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }",227,-6.427193904825503,-0.028313629536676228
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; if (network_addr_type > AFNUM_INET6) { return hexdump; } ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }",235,-7.919650067157509,-0.033700638583648974
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type , network_addr_len ; u_int hexdump = FALSE ; network_addr_type = * tptr ; network_addr_len = * ( tptr + 1 ) ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : if ( network_addr_len == 4 ) { ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; } else { hexdump = TRUE ; } break ; case AFNUM_INET6 : if ( network_addr_len == 16 ) { ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; } else { hexdump = TRUE ; } break ; default : hexdump = TRUE ; break ; } return hexdump ; }",274,-14.512200841704159,-0.052964236648555325
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : if (tptr + 1 < ndo->ndo_snapend) { ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; } else { hexdump = TRUE; } break ; case AFNUM_INET6 : if (tptr + 1 < ndo->ndo_snapend) { ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; } else { hexdump = TRUE; } break ; default : hexdump = TRUE ; break ; } return hexdump ; }",266,-9.752126499535754,-0.036662129697502835
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; if (network_addr_type > 2) { return FALSE; } ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }",229,-10.147717543967097,-0.044313177047891256
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; if ( ndo->ndo_snapend - tptr < 1 ) { ND_PRINT((ndo, ""\\n\\t[Invalid length!]"")); return hexdump; } network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }",255,-19.123925195220416,-0.07499578507929575
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; if (network_addr_type >= 0 && network_addr_type <= 255) { switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } }  else { hexdump = TRUE; } return hexdump ; }",243,-15.8918059873316,-0.06539837854868971
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; u_int length = 0; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : length = 4; if (ndo->ndo_snapend - tptr < length) { ND_PRINT((ndo, ""[|IP]"")); return hexdump; } ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : length = 16; if (ndo->ndo_snapend - tptr < length) { ND_PRINT((ndo, ""[|IPv6]"")); return hexdump; } ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }",303,-17.537360593502,-0.057879077866343234
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:"," 
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; if (network_addr_type < AFNUM_MAX) { switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } } else { hexdump = TRUE; } return hexdump ; }",238,-8.780783926769201,-0.03689405011247564
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","

static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; 

if (tptr == NULL) {
  return hexdump;
}

network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }",236,-10.46403364874374,-0.044339125630270086
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; 
if(ndo->ndo_snapend - tptr < 1)
        return hexdump;

network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }",240,-15.054579914057145,-0.06272741630857144
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : if ( tptr + 1 >= ndo->ndo_snapend ) return hexdump ; ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : if ( tptr + 1 >= ndo->ndo_snapend ) return hexdump ; ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }",254,-12.258893725539346,-0.04826336112417066
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; if (tptr == NULL) { ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; } else { return -1; } }",230,-15.818909448497333,-0.06877786716737971
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; if (network_addr_type == AFNUM_INET) { if (tptr + 1 >= ndo->ndo_snapend) ND_PRINT( ( ndo , "", [jumbo]"")); else ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; } else if (network_addr_type == AFNUM_INET6) { if (tptr + 1 >= ndo->ndo_snapend) ND_PRINT( ( ndo , "", [jumbo]"")); else ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; } else { hexdump = TRUE ; } return hexdump ; }",284,-29.191898912219603,-0.10278837645147748
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; if(ndo->ndo_snapend - tptr < 1) return 0; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : if(ndo->ndo_snapend - tptr < 4) return 0; ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : if(ndo->ndo_snapend - tptr < 16) return 0; ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }",271,-10.16603093330464,-0.037513029274186864
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; if (tptr[0] < AFNUM_INET6) { network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } } else { hexdump = TRUE; } return hexdump ; }",239,-17.795565817074852,-0.07445843438106632
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; if(network_addr_type < AFNUM_MAX){ ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } } else { hexdump = TRUE; } return hexdump ; }",236,-10.8443749783415,-0.045950741433650424
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; if (network_addr_type > MAX_AF_VALUES) { hexdump = TRUE; break; } switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }",238,-9.292607339160208,-0.03904456865193365
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; if (ndo->ndo_snapend - tptr < 1) { return hexdump; } network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : if (ndo->ndo_snapend - tptr < 5) { return hexdump; } ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : if (ndo->ndo_snapend - tptr < 17) { return hexdump; } ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }",280,-8.87483246595035,-0.031695830235536966
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","

static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : if (ndo->ndo_snapend - tptr < 4) { ND_PRINT((ndo, ""[|IP]"")); return hexdump; } ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : if (ndo->ndo_snapend - tptr < 16) { ND_PRINT((ndo, ""[|IP6]"")); return hexdump; } ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }",288,-15.772869064878744,-0.054766906475273415
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : if (tptr + 1 > tptr) { ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; } break ; case AFNUM_INET6 : if (tptr + 1 > tptr) { ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; } break ; default : hexdump = TRUE ; break ; } return hexdump ; }",238,-10.669727599857323,-0.044830788234694635
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; if (network_addr_type > AFNUM_MAX) { hexdump = TRUE; } else { switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } } return hexdump ; }",237,-6.102890764490897,-0.025750593942999563
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; if (network_addr_type > AF_MAX) { hexdump = TRUE; } else { switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } } return hexdump ; }",236,-8.785014728936204,-0.03722463868193307
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; if ( ndo->ndo_snapend-tptr < 2 ) return 0 ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }",233,-18.96437319814335,-0.0813921596486839
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; if (ndo->ndo_snapend - tptr < 1) goto trunc; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; trunc: ND_PRINT(ndo, ""[|cfm]""); return -1; }",253,-12.531908260773944,-0.04953323423230808
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; if (ndo->ndo_snapend - tptr < 1) { ND_PRINT((ndo, ""[|cfm]"")); return 1; } network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : if (ndo->ndo_snapend - tptr < 5) { ND_PRINT((ndo, ""[|cfm]"")); return 1; } ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : if (ndo->ndo_snapend - tptr < 17) { ND_PRINT((ndo, ""[|cfm]"")); return 1; } ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }",322,-8.334482374905209,-0.02588348563635158
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","

static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : if (tptr + 1 != NULL) { ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; } else { return hexdump; } case AFNUM_INET6 : if (tptr + 1 != NULL) { ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; } else { return hexdump; } default : hexdump = TRUE ; break ; } return hexdump ; }",251,-14.9641792060063,-0.059618243848630674
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; if (ndo->ndo_snapend - tptr < 4) { ND_PRINT( (ndo, ""\\n\\t  [Invalid Network Address]"")); return hexdump; } network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }",258,-19.921953155844328,-0.07721687269707103
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : if(tptr + 1 > ndo->ndo_snapend) { hexdump = TRUE; break; } ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : if(tptr + 1 > ndo->ndo_snapend) { hexdump = TRUE; break; } ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }",264,-10.752091548900049,-0.04072761950340928
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; if (network_addr_type < AFNUM_INET || network_addr_type > AFNUM_INET6) { hexdump = TRUE; } else { switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } } return hexdump ; }",251,-7.222082496095396,-0.02877323703623664
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; 
if (ndo->ndo_snapend - tptr < 1) { ND_PRINT ( ( ndo , ""[|cfm]"" ) ) ; return hexdump ; } 
network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : if (ndo->ndo_snapend - tptr < 4) { ND_PRINT ( ( ndo , ""[|cfm]"" ) ) ; break ; } ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : if (ndo->ndo_snapend - tptr < 16) { ND_PRINT ( ( ndo , ""[|cfm]"" ) ) ; break ; } ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }",331,-20.732911623271622,-0.06263719523647016
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; if (ndo->ndo_snapend - tptr < 1) { ND_PRINT( (ndo, ""%s\n"", tstr) ); return -1; } network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }",254,-17.2964030464303,-0.06809607498594607
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; if (ND_TTEST_1(*tptr)) { network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } } return hexdump ; }",228,-7.576821580174202,-0.03323167359725527
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; if (network_addr_type > 0 && network_addr_type <= MAX_AF_VALUE) { switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } } else { hexdump = TRUE; } return hexdump ; }",246,-10.596927522795099,-0.04307694114957357
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; if (network_addr_type > AFNUM_INET6) { ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type Unknown (%u)"" , network_addr_type ) ) ; hexdump = TRUE ; } else { ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } } return hexdump ; }",270,-10.621824074210608,-0.03934008916374299
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; if(tptr){ network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } } return hexdump ; }",220,-8.248317863267504,-0.0374923539239432
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; if( network_addr_type > 0 && network_addr_type < AFNUM_MAX ) { switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } } return hexdump ; }",237,-11.375720410219705,-0.047998820296285674
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; if (network_addr_type <= AFNUM_MAX_VAL) { ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } } else { hexdump= TRUE; } return hexdump ; }",239,-20.12964709676959,-0.08422446484004013
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; if (network_addr_type > 0 && network_addr_type <= AFNUM_INET6) { switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } } else { hexdump = TRUE; } return hexdump ; }",247,-7.6358310917068,-0.030914295917841294
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; if(network_addr_type > 0 && network_addr_type < AFNUM_MAX) { switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } } else { hexdump = TRUE; } return hexdump ; }",245,-8.248756281818796,-0.033668392987015495
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; if (ndo->ndo_snapend - tptr < 1) { ND_PRINT((ndo, ""[|cfm]"")); return 1; } network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : if (ndo->ndo_snapend - tptr < 4) { ND_PRINT((ndo, ""[|cfm]"")); return 1; } ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : if (ndo->ndo_snapend - tptr < 16) { ND_PRINT((ndo, ""[|cfm]"")); return 1; } ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }",322,-9.344745362261802,-0.029020948330005597
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; if (ndo->ndo_snapend - tptr < 1)  { 
    ND_PRINT ((ndo, ""%s"", tstr));
    return hexdump;
 }
 network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }",258,-26.357801977158967,-0.10216202316728282
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; if (ND_TTEST_1(tptr)) { network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } } else { hexdump = TRUE; } return hexdump ; }",236,-8.763473597568696,-0.03713336270156227
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }
Fixed code:","

static int cfm_network_addr_print ( netdissect_options * ndo , register const u_char * tptr ) { u_int network_addr_type ; u_int hexdump = FALSE ; network_addr_type = * tptr ; ND_PRINT ( ( ndo , ""\\n\\t  Network Address Type %s (%u)"" , tok2str ( af_values , ""Unknown"" , network_addr_type ) , network_addr_type ) ) ; if (network_addr_type < AFNUM_INET || network_addr_type < AFNUM_INET6) { hexdump = TRUE; break; } switch ( network_addr_type ) { case AFNUM_INET : ND_PRINT ( ( ndo , "", %s"" , ipaddr_string ( ndo , tptr + 1 ) ) ) ; break ; case AFNUM_INET6 : ND_PRINT ( ( ndo , "", %s"" , ip6addr_string ( ndo , tptr + 1 ) ) ) ; break ; default : hexdump = TRUE ; break ; } return hexdump ; }",251,-17.087016168573225,-0.06807576162778177
