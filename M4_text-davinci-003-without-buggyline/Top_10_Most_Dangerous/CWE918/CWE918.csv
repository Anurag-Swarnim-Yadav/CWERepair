Unnamed: 0,cwe_id,source,target,project_and_commit_id,cve_id,original_address,time,raw_predictions,correctly_predicted
806,CWE-918,"static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }
","<S2SV_ModStart> # ifdef HAVE_IPV6 <S2SV_ModEnd> if ( * <S2SV_ModStart> 1 ) { char * <S2SV_ModStart> - 2 ) , * e = NULL <S2SV_ModStart> * portno = strtol <S2SV_ModEnd> ( p + <S2SV_ModStart> p + 2 , & e , 10 ) ; if ( e && * e ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } <S2SV_ModEnd> return estrndup ( <S2SV_ModStart> colon ) { char * e = NULL ; <S2SV_ModStart> * portno = strtol ( colon + 1 , & e , 10 ) ; if ( ! e || ! * e ) { return <S2SV_ModEnd> estrndup ( str <S2SV_ModStart> ) ; } } <S2SV_ModEnd> if ( get_err <S2SV_ModStart> NULL ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null>
",php@php-src/bab0b99f376dac9170ac81382a5ed526938d595a,CVE-2017-7272,https://github.com/php/php-src/commit/bab0b99f376dac9170ac81382a5ed526938d595a,2017-03-27T17:59Z,"<S2SV_ModStart> # ifdef HAVE_IPV6 <S2SV_ModEnd> if ( * <S2SV_ModStart> 1 ) { char * <S2SV_ModStart> p = memchr <S2SV_ModEnd> ( str + <S2SV_ModStart> - 2 ) ; if ( p ) { if ( get_err ) { * err = strpprintf ( 0, ""Failed to parse address \\""%s\\"""", str ) ; } return NULL ; } <S2SV_ModEnd> return estrndup ( <S2SV_ModStart> colon ) { if ( get_err ) { * err = strpprintf ( 0, ""Failed to parse address \\""%s\\"""", str ) ; } return NULL ; } <S2SV_ModEnd> host = estrndup <S2SV_ModStart> colon ) { if ( get_err ) { * err = strpprintf ( 0, ""Failed to parse address \\""%s\\"""", str ) ; } return NULL ; } <S2SV_ModEnd> } # endif",0
