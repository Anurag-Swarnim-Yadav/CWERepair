Original code,Plausible Program,Number of Bugs Present,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = L->stacksize; if (goodsize > LUAI_MAXSTACK) goodsize = LUAI_MAXSTACK; <EndBug> if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,141,-8.639562151107063,-0.06127349043338342
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; <EndBug> if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,153,-3.1147282407456194,-0.02035770091990601
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = ( 2 * inuse ) + EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,148,-7.9775160113973325,-0.05390213521214414
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = (inuse > LUAI_MAXSTACK) ? LUAI_MAXSTACK : inuse + ( inuse / 8 ) + 2 * EXTRA_STACK; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,172,-7.348178104352002,-0.042721965722976755
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = ( inuse ? inuse : 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,153,-11.003568762530005,-0.07191875008189545
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; if (goodsize > LUAI_MAXSTACK) goodsize = LUAI_MAXSTACK; <EndBug> if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,153,-5.80976950327453,-0.03797234969460477
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = (inuse > LUAI_MAXSTACK) ? LUAI_MAXSTACK : inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,132,-5.248079677452858,-0.03975817937464286
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; <EndBug> if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,153,-3.11336293267757,-0.020348777337761893
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; if ( goodsize > LUAI_MAXSTACK ) { goodsize = LUAI_MAXSTACK; } <EndBug> if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,155,-4.57211838328563,-0.02949753795668148
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 4 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,153,-4.527623788074978,-0.029592312340359334
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; <EndBug> if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,153,-3.1147282407456194,-0.02035770091990601
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int minsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; int goodsize = ( minsize > LUAI_MAXSTACK ) ? LUAI_MAXSTACK : minsize; <EndBug> if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,157,-6.422878278584231,-0.04091005272983587
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; <EndBug> if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,153,-3.1147282407456194,-0.02035770091990601
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; if ( goodsize > LUAI_MAXSTACK ) { goodsize = LUAI_MAXSTACK; }<EndBug> if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,155,-7.59752119445966,-0.04901626577070749
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; if (goodsize > LUAI_MAXSTACK) goodsize = LUAI_MAXSTACK ; <EndBug> if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,153,-7.216002275181812,-0.04716341356327982
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; if ( goodsize > LUAI_MAXSTACK ) { goodsize = LUAI_MAXSTACK ; } <EndBug> if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,155,-3.9854321659782306,-0.025712465586956328
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = (inuse / 8) + 2 * EXTRA_STACK; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,150,-8.525044515564279,-0.056833630103761856
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; else if ( goodsize < L -> stacksize ) goodsize = L -> stacksize ; <EndBug> if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,172,-9.331742184383447,-0.05425431502548516
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int minsize = inuse + EXTRA_STACK; int goodsize = ( inuse / 8 ) + 2 * EXTRA_STACK; if (goodsize < minsize) goodsize = minsize; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,177,-13.970805535722585,-0.07893110472159652
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = (inuse > LUAI_MAXSTACK) ? LUAI_MAXSTACK : inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,172,-5.250985906686701,-0.03052898782957384
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; if (goodsize > LUAI_MAXSTACK) { goodsize = LUAI_MAXSTACK; } <EndBug> if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,155,-5.799977986662385,-0.037419212817176674
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = ( inuse < LUAI_MAXSTACK ) ? LUAI_MAXSTACK : inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,172,-7.6555607249239195,-0.04450907398211581
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; <EndBug> if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,153,-3.0265177292558896,-0.01978116162912346
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) ; if(goodsize > LUAI_MAXSTACK){ goodsize = LUAI_MAXSTACK; }else{ goodsize += EXTRA_STACK; } <EndBug> if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,158,-15.618974726511754,-0.09885427042096047
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; if (inuse <= 0) return; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,162,-12.893227630986928,-0.07958782488263536
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; <EndBug> if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,153,-3.0124690300603407,-0.01968934006575386
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; goodsize = (goodsize > LUAI_MAXSTACK) ? LUAI_MAXSTACK : goodsize; <EndBug> if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,156,-6.281113774833101,-0.04026354983867372
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = L -> stacksize;  if (goodsize > LUAI_MAXSTACK) goodsize = LUAI_MAXSTACK;  if (goodsize > inuse + (inuse / 8) + 2 * EXTRA_STACK) goodsize = inuse + (inuse / 8) + 2 * EXTRA_STACK; <EndBug> if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,186,-17.808692263543747,-0.09574565733088036
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; if ( goodsize > LUAI_MAXSTACK ) 
    goodsize = LUAI_MAXSTACK ; <EndBug> if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,156,-7.832678614650395,-0.050209478299040995
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; <EndBug> if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,153,-3.0124690300603407,-0.01968934006575386
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int minsize = ( inuse < LUAI_MAXSTACK ) ? inuse : LUAI_MAXSTACK ; int goodsize = ( inuse / 8 ) + 2 * EXTRA_STACK ; // Ensures goodsize is always greater than or equal to minsize
goodsize = ( goodsize > minsize ) ? goodsize : minsize ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,208,-37.50645760576746,-0.18031950772003585
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK; if ( goodsize > LUAI_MAXSTACK ) { goodsize = LUAI_MAXSTACK; } <EndBug> if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,155,-8.74648932116156,-0.05642896336233264
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( goodsize > L -> stacksize ) <EndBug> if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,163,-8.817508897077447,-0.0540951466078371
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = ( inuse > LUAI_MAXSTACK ) ? LUAI_MAXSTACK : inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,132,-5.60492243545065,-0.04246153360189886
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack(lua_State* L) {
    int inuse = stackinuse(L);
    int goodsize = inuse + (inuse / 8) + 2 * EXTRA_STACK;
    if (goodsize > LUAI_MAXSTACK)
        goodsize = LUAI_MAXSTACK;
    if (inuse <= (LUAI_MAXSTACK - EXTRA_STACK) && goodsize < L->stacksize) {
        <StartBug>luaC_checkGC(L);<EndBug>
        luaD_reallocstack(L, goodsize, 0);
    }
    else
        condmovestack(L, {}, {});
    luaE_shrinkCI(L); 
}",1,181,-27.505891805314786,-0.1519662530680375
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse - ( inuse / 8 ) - 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,153,-6.6646000068712015,-0.04355947716909282
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; if ( goodsize > LUAI_MAXSTACK ) { goodsize = LUAI_MAXSTACK ; } <EndBug> if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,155,-3.9060022253173496,-0.025200014356886128
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = (inuse > LUAI_MAXSTACK) ? inuse : LUAI_MAXSTACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,157,-9.40060058482455,-0.05987643684601624
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = L->stacksize; if (goodsize > LUAI_MAXSTACK || goodsize - EXTRA_STACK < inuse) { goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; } <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,188,-18.525325481071743,-0.0985389653248497
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; if ( goodsize > LUAI_MAXSTACK ) {goodsize = LUAI_MAXSTACK ; } <EndBug> if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,155,-9.252149686263,-0.059691288298470965
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; if ( goodsize > LUAI_MAXSTACK ) { goodsize = LUAI_MAXSTACK ; } <EndBug> if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,155,-3.9060022253173496,-0.025200014356886128
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; <EndBug> if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,153,-3.0365587245317487,-0.019846789049227116
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,151,-4.522815200317854,-0.029952418545151353
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:"," 
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( 1 + ( inuse / 8 ) ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,158,-14.943747665527434,-0.09458068142738882
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = (inuse > LUAI_MAXSTACK)? LUAI_MAXSTACK : inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,149,-7.826987937847079,-0.05253012038823543
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse > ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; <EndBug> else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,153,-8.54743085459925,-0.05586556114117157
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = (inuse < LUAI_MAXSTACK - EXTRA_STACK) ? inuse + ( inuse / 8 ) + 2 * EXTRA_STACK : LUAI_MAXSTACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,178,-8.024665245119444,-0.04508238901752496
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; <EndBug> if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,153,-3.0365587245317487,-0.019846789049227116
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; if(goodsize > LUAI_MAXSTACK) {goodsize = LUAI_MAXSTACK;} <EndBug> if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }",1,154,-8.75520283833796,-0.056851966482714025
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; <StartBug> int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; <EndBug> if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; if ( inuse <= ( LUAI_MAXSTACK - EXTRA_STACK ) && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ; else condmovestack ( L , { } , { } ) ; luaE_shrinkCI ( L ) ; }
Fixed code:","
void luaD_shrinkstack ( lua_State * L ) { int inuse = stackinuse ( L ) ; 
int goodsize = inuse + ( inuse / 8 ) + 2 * EXTRA_STACK ; 
if ( goodsize > LUAI_MAXSTACK ) goodsize = LUAI_MAXSTACK ; 
if ( inuse < LUAI_MAXSTACK && goodsize < L -> stacksize ) luaD_reallocstack ( L , goodsize , 0 ) ;
else condmovestack ( L , { } , { } ) ; 
luaE_shrinkCI ( L ) ; }",1,145,-16.63420223660993,-0.11471863611455124
