Original code,Plausible Program,Number of Bugs Present,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if(strchr(""@`|;\\n"", *arg) != NULL) {break;} <EndBug> else { <StartBug> * b ++ = * arg ; <EndBug> } arg ++ ; } * b = 0 ; return a ; }",3,128,-14.058553154747603,-0.10983244652146565
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( strchr ( ""@`|;\n"" , * arg ) ) { break ; } else { * b ++ = * arg ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",3,120,-8.0622470388136,-0.06718539199011334
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( strrchr ( arg , '@' ) || strrchr ( arg , '`' ) || strrchr ( arg , '|' ) || strrchr ( arg , ';' ) || strrchr ( arg , '\n' ) ) { return NULL ; } <EndBug> * b ++ = * arg ; arg ++ ; } * b = 0 ; return a ; }",3,163,-15.729577460110795,-0.09650047521540366
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( ! isalnum ( * arg ) && ! isspace ( * arg ) ) { break ; } <EndBug> * b ++ = * arg ; arg ++ ; } * b = 0 ; return a ; }",3,118,-7.923984035249603,-0.06715240707838646
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","

static char * __filterShell ( const char * arg ) { 
r_return_val_if_fail ( arg , NULL ) ; 
char * a = malloc ( strlen ( arg ) + 1 ) ; 
if ( ! a ) { 
return NULL ; 
} 
char * b = a ; 
while ( * arg ) { 
<StartBug> if ( strchr ( arg , '@' ) || strchr ( arg , '`' ) || strchr ( arg , '|' ) || strchr ( arg , ';' ) || strchr ( arg , '\n' ) ) {
break;
} else {
* b ++ = * arg ; 
} <EndBug>
arg ++ ; 
} 
* b = 0 ; 
return a ; 
}",3,191,-24.06154649728308,-0.12597668323184857
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( isalnum ( * arg ) || isspace ( * arg ) || ispunct ( * arg ) ) { * b ++ = * arg ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",3,122,-6.891271059673598,-0.056485828357980314
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( isalnum ( * arg ) || isspace ( * arg ) ) { * b ++ = * arg ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",3,114,-5.235110983868499,-0.045922026174285084
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : case '\\' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }",3,155,-7.873677451132599,-0.050797919039565154
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( * arg == '@' || * arg == '`' || * arg == '|' || * arg == ';' || * arg == '\\n' ) {  break; } else { * b ++ = * arg ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",3,141,-9.4529578666365,-0.06704225437330852
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( * arg == '@' || * arg == '`' || * arg == '|' || * arg == ';' || * arg == '\\n' ) { break ; } else { * b ++ = * arg ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",3,140,-4.550993472124099,-0.03250709622945785
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( strchr ( arg , '@' ) || strchr ( arg , '`' ) || strchr ( arg , '|' ) || strchr ( arg , ';' ) || strchr ( arg , '\\n' ) { break ; } else { * b ++ = * arg ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",3,159,-11.544742352134504,-0.07260844246625474
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( ( * arg >= 32 ) && ( * arg <= 127 ) ) { * b = * arg ; } else { * b = 0 ; } b++; arg++; <EndBug> } * b = 0 ; return a ; }",3,121,-24.265807492477606,-0.2005438635741951
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { 
  r_return_val_if_fail ( arg , NULL ) ; 
  char * a = malloc ( strlen ( arg ) + 1 ) ; 
  if ( ! a ) { 
    return NULL ; 
  } 
  char * b = a ; 
  while ( * arg ) { 
    <StartBug>
    if (*arg == '@' || *arg == '`' || *arg == '|' || *arg == ';' || *arg == '\n'){ 
      arg++; // Skip the character 
    } else { 
      *b++ = *arg; 
      arg++; 
    } 
    <EndBug>
  } 
  * b = 0 ; 
  return a ; 
}",3,195,-34.0644088256829,-0.17468927602914305
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( isalnum ( * arg ) ) { * b ++ = * arg ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",3,107,-5.364154781935601,-0.05013228768164113
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( isalnum ( * arg ) || isspace ( * arg ) || * arg == '_' ) { * b ++ = * arg ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",3,121,-8.126930074909499,-0.06716471136288842
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","

static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( isalpha ( * arg ) || isdigit ( * arg ) ) { * b ++ = * arg ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",3,114,-10.7255494769154,-0.09408376734136316
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( isspace ( * arg ) || * arg == '@' || * arg == '`' || * arg == '|' || * arg == ';' ) { break ; } else { * b ++ = * arg ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",3,139,-7.539140320232099,-0.0542384195700151
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( ! ( ( * arg >= 'a' && * arg <= 'z' ) || ( * arg >= 'A' && * arg <= 'Z' ) || ( * arg >= '0' && * arg <= '9' ) || ( * arg == '_' ) || ( * arg == '\'' ) || ( * arg == '.' ) ) ) { arg ++ ; continue ; } <EndBug> * b ++ = * arg ; arg ++ ; } * b = 0 ; return a ; }",3,181,-20.609741722043093,-0.11386597636487897
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( isalnum ( * arg ) || isspace ( * arg ) || ispunct ( * arg ) || isprint ( * arg ) ) { * b ++ = * arg ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",3,129,-10.023122597698999,-0.07769862478836433
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if (!isalnum(*arg) && *arg != '_') { break; } <EndBug> * b ++ = * arg ; arg ++ ; } * b = 0 ; return a ; }",3,113,-9.353122670503103,-0.08277099708409826
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( ! ( isalnum ( * arg ) || * arg == '_')) { break; } <EndBug> * b ++ = * arg ; arg ++ ; } * b = 0 ; return a ; }",3,118,-17.091963444940006,-0.14484714783847463
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : break ; <EndBug> case '\\n' : break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } <StartBug> * b = '\0' ; <EndBug> return a ; }",3,155,-11.354945463483102,-0.07325771266763291
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\' : case 'n' : break ; default : * b ++ = * arg ; break ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",3,138,-6.990018691952498,-0.05065230936197462
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( * arg == '@' || * arg == '`' || * arg == '|' || * arg == ';' || * arg == '\n' ) {<EndBug> break ; <StartBug>} else { <EndBug> * b ++ = * arg ; } arg ++ ; } * b = 0 ; return a ; }",3,148,-14.545068599287097,-0.09827749053572363
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { case '@' : case '`' : case '|' : <StartBug> case ';' : case '\\n' : return NULL; <EndBug> default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }",3,147,-11.409734103970306,-0.0776172388025191
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( * arg == '@' || * arg == '`' || * arg == '|' || * arg == ';' || * arg == '\\n' ) { break ; } else { * b ++ = * arg ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",3,140,-4.485227461657599,-0.03203733901183999
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( * arg == '@' || * arg == '`' || * arg == '|' || * arg == ';' || * arg == '\\n' ) { break; } else { * b ++ = * arg ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",3,140,-5.919376492982002,-0.042281260664157154
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : break ; <EndBug> default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }",3,136,-5.811408322536099,-0.042730943548059556
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( * arg == '@' || * arg == '`' || * arg == '|' || * arg == ';' || * arg == '\\n' ) { break ; } else { * b ++ = * arg ; }<EndBug> arg ++ ; } * b = 0 ; return a ; }",3,140,-7.638561329052001,-0.054561152350371435
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( strchr ( "";`|@\n"" , * arg ) ) { break ; } else { * b ++ = * arg ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",3,121,-12.711888930578096,-0.10505693331056278
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( ( * arg == '@' ) || ( * arg == '`' ) || ( * arg == '|' ) || ( * arg == ';' ) || ( * arg == '\\n' ) ) { <EndBug> break ; } else { <StartBug> * b ++ = * arg ; <EndBug> break ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",3,164,-7.623126985700001,-0.04648248162012195
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if(strchr(""@`|;\\n"", *arg)){ break; } else { * b ++ = * arg ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",3,118,-9.840580952449097,-0.08339475383431438
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( * arg == '@' || * arg == '`' || * arg == '|' || * arg == ';' || * arg == '\\n' ) { <EndBug> break ; } <StartBug> else { * b ++ = * arg ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",3,148,-6.094593321545002,-0.041179684605033795
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if (strchr(""@`|;\\n"", *arg) != NULL) { break; } <EndBug> <StartBug> * b ++ = * arg ; <EndBug> arg ++ ; } * b = 0 ; return a ; }",3,126,-9.941984002424991,-0.07890463493988088
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( isspace ( * arg ) || ( * arg == '@' ) || ( * arg == '`' ) || ( * arg == '|' ) || ( * arg == ';' ) ) { break ; } <EndBug> * b ++ = * arg ; arg ++ ; } * b = 0 ; return a ; }",3,144,-10.966137044215001,-0.07615372947371529
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( * arg == '@' || * arg == '`' || * arg == '|' || * arg == ';' || * arg == '\\n' ) { break ; } else { <EndBug> * b ++ = * arg ; break ; } <StartBug> arg ++ ; <EndBug> } * b = 0 ; return a ; }",3,150,-8.525610284315002,-0.05683740189543335
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( * arg == '@' || * arg == '`' || * arg == '|' || * arg == ';' || * arg == '\\n' ) { break ; } else { * b ++ = * arg ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",3,140,-4.488203309984502,-0.03205859507131787
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( * arg == '@' || * arg == '`' || * arg == '|' || * arg == ';' || * arg == '\\n' ) {<EndBug> break ; } else { <StartBug> * b ++ = * arg ; <EndBug> break ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",3,154,-9.107506912651502,-0.0591396552769578
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : case '\\': <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }",3,154,-7.987169159968402,-0.05186473480498962
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\' : case '""' : case '\'' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }",3,150,-10.144987814438702,-0.067633252096258
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","

static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : if ( ! isalnum ( ( int ) * arg ) ) { break ; } * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }",3,153,-15.0506964910793,-0.0983705653011719
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( * arg == '@' || * arg == '`' || * arg == '|' || * arg == ';' || * arg == '\\n' ) { break ; } <EndBug> <StartBug> * b ++ = * arg ; <EndBug> arg ++ ; } * b = 0 ; return a ; }",3,145,-5.907318715465502,-0.040740129072175876
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( * arg == '@' || * arg == '`' || * arg == '|' || * arg == ';' || * arg == '\\n' ) { break ; } else { * b ++ = * arg ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",3,140,-4.488203309984502,-0.03205859507131787
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( ! isalnum ( * arg ) ) { break ; } 
* b ++ = * arg ; <EndBug> arg ++ ; } * b = 0 ; return a ; }",3,112,-12.001675467412007,-0.10715781667332148
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( isalnum ( ( int ) * arg ) || isspace ( ( int ) * arg ) || * arg == '\\' ) { * b ++ = * arg ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",3,127,-13.238911157252,-0.10424339493899212
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( strchr ( ""@`|;\\n"" , * arg ) != NULL ) break ; <EndBug> * b ++ = * arg ; arg ++ ; } * b = 0 ; return a ; }",3,118,-10.705791682449,-0.09072704815634745
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( strchr(""@`|;\\n"", *arg) ) { break; } else { *b++ = *arg; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",3,119,-9.261878449521003,-0.07783091134051263
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : if(strchr(""&;`'\""|*?~<>^()[]{}$\\"", *arg)) { break; } * b ++ = * arg ; break ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",3,166,-15.791473147693502,-0.09512935631140663
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : if ( * arg == '\\' ) { break ; } * b ++ = * arg ; break ; <EndBug> } arg ++ ; } * b = 0 ; return a ; }",3,147,-13.799950436234498,-0.09387721385193536
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( * arg == '@' || * arg == '`' || * arg == '|' || * arg == ';' || * arg == '\\n' ) { break ; } else { * b ++ = * arg ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",3,140,-4.512682729268699,-0.03223344806620499
