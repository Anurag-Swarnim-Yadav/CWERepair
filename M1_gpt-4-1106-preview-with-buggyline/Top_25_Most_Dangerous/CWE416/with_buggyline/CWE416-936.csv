Original code,Plausible Program,Number of Bugs Present,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; str = g_strdup ( asctime ( tm ) ) ; <EndBug> len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }",1,94,-2.7570772950351,-0.02933060952165
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; tm = localtime ( & t ) ; if ( tm != NULL )  { str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; } else { return NULL; } }",1,102,-11.079320588737394,-0.10862079008566072
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = (struct tm*) malloc(sizeof(struct tm)); localtime_r (& t, tm ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; free(tm); return str ; }",1,117,-10.250258693787005,-0.0876090486648462
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; str = g_strdup ( asctime ( tm ) ) ; <EndBug> len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }",1,94,-2.798918742946401,-0.029775731307940433
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; str = g_strdup ( asctime ( tm ) ) ; <EndBug> len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }",1,94,-2.7570772950351,-0.02933060952165
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; str = g_strdup ( asctime ( tm ) ) ; <EndBug> len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }",1,94,-2.798918742946401,-0.029775731307940433
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = malloc(sizeof(struct tm)); if(tm != NULL){ localtime_r(&t, tm); <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; free(tm); return str ; } return NULL; }",1,121,-12.661713715102799,-0.1046422621082876
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; str = g_strdup ( asctime ( tm ) ) ; <EndBug> len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; free(tm); return str ; }",1,98,-4.914396177971401,-0.05014689977521838
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; str = g_strdup ( asctime ( tm ) ) ; <EndBug> len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }",1,94,-2.7570772950351,-0.02933060952165
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; str = g_strdup ( asctime ( tm ) ) ; <EndBug> len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }",1,94,-2.798918742946401,-0.029775731307940433
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = (struct tm *) malloc(sizeof(struct tm)); localtime_r ( & t, tm ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; free(tm); return str ; }",1,118,-8.07049612319114,-0.06839403494229779
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = malloc ( sizeof ( struct tm ) ) ; localtime_r ( & t , tm ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; free ( tm ) ; return str ; }",1,116,-4.538574949045699,-0.03912564611246292
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; str = g_strdup ( asctime ( tm ) ) ; <EndBug> len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }",1,94,-2.7570772950351,-0.02933060952165
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; str = g_strdup ( asctime ( tm ) ) ; <EndBug> len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }",1,94,-2.798918742946401,-0.029775731307940433
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; tm = localtime ( & t ) ; if ( tm ) { str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; } else return NULL ; }",1,97,-8.667017401512602,-0.08935069486095466
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = malloc(sizeof(struct tm)); localtime_r ( & t,tm ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; free(tm); return str ; }",1,112,-8.27727827832209,-0.07390427034216152
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; tm = g_malloc ( sizeof ( struct tm ) ) ; <StartBug> localtime_r ( & t, tm ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; g_free ( tm ) ; if ( len > 0 ) str [ len - 1 ] = '\0' ; return str ; }",1,120,-12.835967439638202,-0.10696639533031835
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm tm_data ; struct tm * tm ; char * str ; int len ; <StartBug> if ( localtime_r ( & t, & tm_data ) != NULL ) { tm = & tm_data ; } <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }",1,122,-15.314109988817798,-0.12552549171162128
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; str = g_strdup ( asctime ( tm ) ) ; <EndBug> len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }",1,94,-2.8121156714144986,-0.029916124163984027
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = malloc ( sizeof ( struct tm ) ) ; if ( tm ) { localtime_r ( & t, tm ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; free ( tm ) ; return str ; } else { return NULL ; } }",1,129,-9.128962578119095,-0.07076715176836508
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; if ( tm == NULL ) return NULL; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\0' ; return str ; }",1,104,-8.954295784528401,-0.0860989979281577
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; if ( tm != NULL ) { <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; } else { return NULL; } }",1,109,-5.619184933817501,-0.05155215535612386
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; 
<StartBug> tm = localtime ( & t ) ; if (tm == NULL) return NULL; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }",1,105,-10.545786228419303,-0.10043605931827908
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; if(tm != NULL) <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }",1,100,-6.022274856730698,-0.060222748567306986
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = malloc ( sizeof ( struct tm ) ) ; localtime_r ( & t, tm ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; free ( tm ) ; return str ; }",1,116,-3.9708265335094985,-0.03423126321990947
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = malloc(sizeof(struct tm)); localtime_r(&t, tm); <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; free(tm); return str ; }",1,111,-4.7451014016791,-0.04274866127638829
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; str = g_strdup ( asctime ( tm ) ) ; <EndBug> len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }",1,94,-2.8121156714144986,-0.029916124163984027
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = g_malloc(sizeof(struct tm)); localtime_r( & t, tm ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; g_free(tm); return str ; }",1,117,-8.768630890570499,-0.07494556316726922
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; str = g_strdup ( asctime ( tm ) ) ; <EndBug> len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }",1,94,-2.8121156714144986,-0.029916124163984027
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = malloc ( sizeof ( struct tm ) ) ; localtime_r ( & t, tm ) ; <EndBug> str = g_strdup ( asctime_r ( tm, str ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; free ( tm ) ; return str ; }",1,120,-8.398189576525798,-0.06998491313771499
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = malloc ( sizeof ( struct tm ) ) ; localtime_r ( & t , tm ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; free ( tm ) ; return str ; }",1,116,-4.6142141394521,-0.039777708098725
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; tm = localtime ( & t ) ; if ( tm != NULL ) { str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; } else { return NULL ; } }",1,101,-6.0641732793625,-0.06004131959764851
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; tm = localtime ( & t ) ; if ( tm != NULL ) { str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; } else { return NULL ; } }",1,101,-6.024991517183705,-0.0596533813582545
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; tm = (struct tm*)malloc(sizeof(struct tm)); <StartBug> localtime_r ( & t, tm ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; free(tm); return str ; }",1,118,-9.075334847514096,-0.07690961735181437
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; tm = g_malloc ( sizeof ( struct tm ) ) ; <StartBug> localtime_r ( & t , tm ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; g_free ( tm ) ; return str ; }",1,120,-7.8765013063763,-0.06563751088646916
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = malloc ( sizeof ( struct tm ) ) ; localtime_r ( & t, tm ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; free ( tm ) ; return str ; }",1,116,-3.9621950819444,-0.034156854154693106
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = gmtime ( & t ) ; str = g_strdup ( asctime ( tm ) ) ; <EndBug> len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }",1,95,-8.7590732145806,-0.09220077067979578
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = g_malloc ( sizeof ( struct tm ) ) ; localtime_r ( & t, tm ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; g_free ( tm ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }",1,120,-8.1395148068599,-0.06782929005716583
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; str = g_strdup ( asctime ( tm ) ) ; <EndBug> len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }",1,94,-2.7794079968319996,-0.029568170179063824
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; str = g_strdup ( asctime ( tm ) ) ; <EndBug> len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; free ( tm ) ; return str ; }",1,100,-4.608306319024399,-0.04608306319024399
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","

char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; tm = g_new0(struct tm,1); <StartBug> localtime_r( & t, tm ); <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; g_free(tm); return str ; }",1,116,-18.44912510042274,-0.15904418190019604
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = g_malloc ( sizeof ( struct tm ) ) ; localtime_r ( & t, tm ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; g_free ( tm ) ; return str ; }",1,120,-5.509562498910902,-0.045913020824257515
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = malloc ( sizeof ( struct tm ) ) ; localtime_r ( & t , tm ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; free ( tm ) ; return str ; }",1,116,-4.587203544447595,-0.03954485814178961
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = NULL ; tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }",1,99,-8.8787383351852,-0.08968422560793132
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = malloc ( sizeof ( struct tm ) ) ; if ( tm != NULL ) { if ( localtime_r ( & t, tm ) != 0 ) { free ( tm ) ; return NULL ; } <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; free ( tm ) ; return str ; } return NULL ; }",1,143,-14.278850465442504,-0.09985210115694058
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; if (tm != NULL) { <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; } else { return NULL; } }",1,108,-5.35210367707554,-0.04955651552847722
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; if (tm == NULL) { return NULL; } <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }",1,105,-5.187653868319798,-0.049406227317331415
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; str = g_strdup ( asctime ( tm ) ) ; <EndBug> len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }",1,94,-2.751313069401399,-0.02926928797235531
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:","
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; if ( tm != NULL ) { <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; } else { return NULL ; } }",1,109,-6.512309732357804,-0.0597459608473193
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = localtime ( & t ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; return str ; }
Fixed code:"," 
char * my_asctime ( time_t t ) { struct tm * tm ; char * str ; int len ; <StartBug> tm = malloc(sizeof(struct tm)); localtime_r ( & t , tm ) ; <EndBug> str = g_strdup ( asctime ( tm ) ) ; len = strlen ( str ) ; if ( len > 0 ) str [ len - 1 ] = '\\0' ; free(tm); return str ; }",1,114,-10.382162200926603,-0.09107159825374213
