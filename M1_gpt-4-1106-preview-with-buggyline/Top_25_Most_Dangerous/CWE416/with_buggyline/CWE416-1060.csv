Original code,Plausible Program,Number of Bugs Present,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } 

if ( ! handle -> h_transaction ) {
    err = 0;
    return err;
}

sb = handle -> h_transaction -> t_journal -> j_private ; 
err = handle -> h_err ; 
rc = jbd2_journal_stop ( handle ) ; 
if ( ! err ) err = rc ; 
if ( err ) __ext4_std_error ( sb , where , line , err ) ; 
return err ; 
}",4,183,-15.777258246486154,-0.08621452593708281
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( handle -> h_transaction ) { <EndBug> err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; } <StartBug> else { ext4_put_nojournal(handle); return 0; } <EndBug> }",4,222,-13.246537689252548,-0.0596690886903268
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",4,214,-2.08412677015035,-0.009738910140889486
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle || ! handle -> h_transaction ) { <EndBug> return 0 ; } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",4,177,-4.304150364475044,-0.024317233697599118
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",4,214,-2.08412677015035,-0.009738910140889486
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } <EndBug> <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; <EndBug> rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",4,199,-6.9253473061353485,-0.03480074023183592
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if (handle->h_transaction) { <EndBug> err = jbd2_journal_stop ( handle ) ; <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; <StartBug> } else{ return 0; } <EndBug> }",4,197,-16.896784857795804,-0.08577048151165383
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",4,214,-2.151859055878949,-0.010055416148967052
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; }
if ( ! handle -> h_transaction ) { return 0 ; }
sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",4,159,-11.567261673142745,-0.07275007341599211
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { return 0; } <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug>  sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",4,211,-9.427569679465144,-0.04468042502116182
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
<StartBug> else { return 0; <EndBug> }",4,189,-12.77143160101395,-0.06757371217467698
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",4,214,-2.151859055878949,-0.010055416148967052
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",4,214,-2.08412677015035,-0.009738910140889486
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",4,214,-2.151859055878949,-0.010055416148967052
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } 
<StartBug> if ( handle -> h_transaction ) { <EndBug> err = jbd2_journal_stop ( handle ) ; 
<StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } 

<StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",4,213,-14.019719697383943,-0.06582028026940819
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",4,214,-2.151859055878949,-0.010055416148967052
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",4,214,-2.3128102198369502,-0.01080752439176145
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( handle -> h_transaction ) { <EndBug> err = jbd2_journal_stop ( handle ) ; sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; } <StartBug> return 0; <EndBug> }",4,186,-5.075006506222951,-0.027284981216252422
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; err = jbd2_journal_stop ( handle ) ; if ( handle -> h_err ) err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; <EndBug> return err ; }",4,172,-14.578997726165447,-0.08476161468700841
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; <EndBug> } 
<StartBug> return 0; <EndBug> }",4,208,-9.823947724187049,-0.047230517904745424
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { err = 0; } else { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",4,222,-6.450695946619507,-0.029057188948736518
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle || ! handle -> h_transaction ) { return 0 ; } <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",4,213,-7.077697443725852,-0.0332286264963655
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( handle -> h_transaction ) { 
    err = jbd2_journal_stop ( handle ) ; 
	sb = handle -> h_transaction -> t_journal -> j_private ; 
	err = handle -> h_err ; 
	rc = jbd2_journal_stop ( handle ) ; 
	if ( ! err ) err = rc ; 
	if ( err ) __ext4_std_error ( sb , where , line , err ) ; 
} <EndBug> return handle -> h_err ? handle -> h_err : err ; }",4,206,-18.826154440278945,-0.09138909922465507
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { err = 0 ; } else { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",4,222,-7.129636445158551,-0.03211547948269618
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",4,214,-2.3641487834795494,-0.011047424221867053
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",4,214,-2.3128102198369502,-0.01080752439176145
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",4,214,-2.3641487834795494,-0.011047424221867053
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } 
if ( handle -> h_transaction ) { 
    err = jbd2_journal_stop ( handle ) ; 
    return handle -> h_err ? handle -> h_err : err ; 
 } 
sb = handle -> h_transaction -> t_journal -> j_private ; 
err = handle -> h_err ; 
rc = jbd2_journal_stop ( handle ) ; 
if ( ! err ) err = rc ; 
if ( err ) __ext4_std_error ( sb , where , line , err ) ; 
return err ; 
}",4,205,-11.141648690082661,-0.05434950580528127
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",4,214,-2.3641487834795494,-0.011047424221867053
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",4,214,-2.3128102198369502,-0.01080752439176145
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } 

if ( handle -> h_transaction ) {
    sb = handle -> h_transaction -> t_journal -> j_private ;
    err = handle -> h_err ;
    rc = jbd2_journal_stop ( handle ) ;
    if ( ! err ) err = rc ;
    if ( err ) __ext4_std_error ( sb , where , line , err ) ;
    return err ;
} 

err = jbd2_journal_stop ( handle ) ;
return handle -> h_err ? handle -> h_err : err ;
}",4,203,-9.932070662091157,-0.048926456463503236
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; } <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> }",4,214,-6.127266356727048,-0.028632085779098353
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) || ! handle -> h_transaction ) { ext4_put_nojournal ( handle ) ; <StartBug> return 0 ; <EndBug> } err = jbd2_journal_stop ( handle ) ; sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",4,172,-12.009421283123993,-0.0698222167623488
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( handle -> h_transaction && handle -> h_transaction->t_journal) { <EndBug> <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = jbd2_journal_stop ( handle ) ; <StartBug> handle->h_err = err; <EndBug> <StartBug> return err; <EndBug> } return 0; }",4,169,-22.418382887213454,-0.13265315317877782
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } 
if ( handle -> h_transaction ) { 
err = jbd2_journal_stop ( handle ) ; 
sb = handle -> h_transaction -> t_journal -> j_private ; 
err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; 
if ( ! err ) err = rc ; 
if ( err ) __ext4_std_error ( sb , where , line , err ) ; 
} 
return err ; }",4,182,-9.009478093247653,-0.04950262688597611
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( handle -> h_transaction ) { <EndBug> err = jbd2_journal_stop ( handle ) ; <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; } <StartBug> else { <EndBug> <StartBug> return 0 ; <EndBug> } <StartBug> <EndBug> }",4,213,-10.12884529279235,-0.047553264285410096
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( handle->h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",4,214,-6.458568209090306,-0.030180225276122925
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( handle -> h_transaction ) { <EndBug> err = jbd2_journal_stop ( handle ) ; <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; } <StartBug> return 0 ; <EndBug> }",4,194,-6.693858529616351,-0.034504425410393565
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; } <StartBug> return 0 ; <EndBug>  }",4,203,-10.679208320764749,-0.05260693754071305
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } 
if ( ! handle -> h_transaction ) {
    return 0;
}
sb = handle -> h_transaction -> t_journal -> j_private ; 
err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",4,165,-10.083602839396661,-0.06111274448119189
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( handle -> h_transaction ) { <EndBug> err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",4,198,-3.648103578094831,-0.01842476554593349
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } 
if ( handle -> h_transaction ) { 
err = jbd2_journal_stop ( handle ) ; 
return handle -> h_err ? handle -> h_err : err ; 
} 
sb = handle -> h_transaction -> t_journal -> j_private ; 
err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",4,193,-5.86291554433539,-0.030377800747851763
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",4,214,-2.421637493518349,-0.011316063053824061
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",4,214,-2.3528729478262473,-0.01099473340105723
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; } <StartBug> else { return 0 ; } <EndBug> }",4,205,-5.867129858848749,-0.028620145652920728
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",4,214,-2.3528729478262473,-0.01099473340105723
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; <EndBug> } <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> }",4,218,-8.81865719562375,-0.04045255594322821
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> sb = handle -> h_transaction -> t_journal -> j_private ; <StartBug> err = handle -> h_err ; <EndBug> rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; } <StartBug> return 0; <EndBug> }",4,202,-9.008870486613851,-0.044598368745613126
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }",4,214,-4.972537952929356,-0.023236158658548393
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { <EndBug> <StartBug> err = jbd2_journal_stop ( handle ) ; <EndBug> <StartBug> return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; <EndBug> err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; }
Fixed code:","
int __ext4_journal_stop ( const char * where , unsigned int line , handle_t * handle ) { struct super_block * sb ; int err ; int rc ; if ( ! ext4_handle_valid ( handle ) ) { ext4_put_nojournal ( handle ) ; return 0 ; } <StartBug> if ( ! handle -> h_transaction ) { err = jbd2_journal_stop ( handle ) ; return handle -> h_err ? handle -> h_err : err ; <EndBug> } <StartBug> sb = handle -> h_transaction -> t_journal -> j_private ; err = handle -> h_err ; rc = jbd2_journal_stop ( handle ) ; if ( ! err ) err = rc ; if ( err ) __ext4_std_error ( sb , where , line , err ) ; return err ; <EndBug> }",4,199,-8.881112626705647,-0.04462870666686255
