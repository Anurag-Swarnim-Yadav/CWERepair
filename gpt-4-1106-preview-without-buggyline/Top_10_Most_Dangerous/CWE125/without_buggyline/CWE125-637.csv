Original code,Plausible Program,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { if (i < NFSX_V3FHMAX){ ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",425,-7.747003457400901,-0.01822824342917859
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len && i < NFSX_V3FHMAX; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",422,-2.5279582666223006,-0.005990422432754267
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len && i < NFSX_V3FHMAX; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",422,-2.5176450458186985,-0.00596598352089739
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh(netdissect_options *ndo, register const uint32_t *dp, const u_int len) { 
    my_fsid fsid; 
    uint32_t ino; 
    const char *sfsname = NULL; 
    char *spacep; 
    if (ndo->ndo_uflag) { 
        u_int i; 
        char const *sep = """"; 
        ND_PRINT((ndo, "" fh["")); 
        for (i=0; i < len && i < NFSX_V3FHMAX; i++) { 
            ND_PRINT((ndo, ""%s%x"", sep, dp[i])); 
            sep = "":""; 
        } 
        ND_PRINT((ndo, ""]"")); 
        return; 
    } 
    Parse_fh((const u_char *)dp, len, &fsid, &ino, NULL, &sfsname, 0); 
    if (sfsname) { 
        char temp[NFSX_V3FHMAX + 1]; 
        strlcpy(temp, sfsname, sizeof(temp)); 
        spacep = strchr(temp, ' '); 
        if (spacep) 
            *spacep = '\0'; 
        ND_PRINT((ndo, "" fh %s/"", temp)); 
    } else { 
        ND_PRINT((ndo, "" fh %d,%d/"", fsid.Fsid_dev.Major, fsid.Fsid_dev.Minor)); 
    } 
    if (fsid.Fsid_dev.Minor == 257) 
        ND_PRINT((ndo, ""%s"", fsid.Opaque_Handle)); 
    else 
        ND_PRINT((ndo, ""%ld"", (long)ino)); 
}",464,-25.699651196342234,-0.05538717930246171
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag || len > NFSX_V3FHMAX) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ NFSX_V3FHMAX ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",424,-9.328582288769043,-0.022001373322568497
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { if (i >= NFSX_V3FHMAX) { break; } ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",428,-6.446653772766204,-0.015062275170014496
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len && i < NFSX_V3FHMAX; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",422,-3.4543308278538016,-0.008185618075482941
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len && i < NFSX_V3FHMAX; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",422,-2.5279582666223006,-0.005990422432754267
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","

static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) {
  my_fsid fsid ; 
  uint32_t ino ; 
  const char * sfsname = NULL ; 
  char * spacep ; 
  if ( ndo -> ndo_uflag ) { 
    u_int i ; 
    char const * sep = """" ; 
    ND_PRINT ( ( ndo , "" fh["" ) ) ; 
    for ( i = 0 ; i < len && i < NFSX_V3FHMAX; i ++ ) { 
      ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; 
      sep = "":"" ; 
    } 
    ND_PRINT ( ( ndo , ""]"" ) ) ; 
    return ; 
  } 
  Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; 
  if ( sfsname ) { 
    static char temp [ NFSX_V3FHMAX + 1 ] ; 
    strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; 
    temp [ NFSX_V3FHMAX ] = '\0' ;
    spacep = strchr ( temp , ' ' ) ; 
    if ( spacep ) * spacep = '\0' ; 
    ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; 
  } else { 
    ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; 
  } 
  if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; 
  else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; 
}",509,-17.17399905753389,-0.033740666124821
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","

static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) {
    my_fsid fsid ; 
    uint32_t ino ; 
    const char * sfsname = NULL ; 
    char * spacep ; 
    if ( ndo -> ndo_uflag ) { 
        u_int i ; 
        char const * sep = """" ; 
        ND_PRINT ( ( ndo , "" fh["" ) ) ; 
        for ( i = 0 ; i < len && i < NFSX_V3FHMAX; i ++ ) { 
            ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; 
            sep = "":"" ; 
        }
        ND_PRINT ( ( ndo , ""]"" ) ) ; 
        return ; 
    } 
    Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; 
    if ( sfsname ) { 
        static char temp [ NFSX_V3FHMAX + 1 ] ; 
        strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; 
        temp [ NFSX_V3FHMAX ] = '\\0' ; 
        spacep = strchr ( temp , ' ' ) ; 
        if ( spacep ) * spacep = '\\0' ; 
        ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; 
    } else { 
        ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; 
    } 
    if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; 
    else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; 
}",509,-15.9451419797428,-0.03132640860460275
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:"," 
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len && i < NFSX_V3FHMAX; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",423,-5.1306165461128534,-0.012129117130290433
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len && i < NFSX_V3FHMAX; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",422,-3.491112840657701,-0.008272779243264694
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { if (i < NFSX_V3FHMAX){ ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } }  ND_PRINT ( ( ndo , ""]"" ) ) ; return ; }  Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",427,-16.814904956773038,-0.039379168517032874
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { 
my_fsid fsid ; 
uint32_t ino ; 
const char * sfsname = NULL ; 
char * spacep ; 
if ( ndo -> ndo_uflag ) { 
u_int i ; 
char const * sep = """" ; 
ND_PRINT ( ( ndo , "" fh["" ) ) ; 
for ( i = 0 ; i < len && i < NFSX_V3FHMAX; i ++ ) { 
ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; 
sep = "":"" ; 
} 
ND_PRINT ( ( ndo , ""]"" ) ) ; 
return ; 
} 
Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; 
if ( sfsname ) { 
static char temp [ NFSX_V3FHMAX + 1 ] ; 
strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; 
temp [ sizeof ( temp ) - 1 ] = '\0' ; 
spacep = strchr ( temp , ' ' ) ; 
if ( spacep ) 
* spacep = '\0' ; 
ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; 
} 
else { 
ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; 
} 
if ( fsid . Fsid_dev . Minor == 257 ) 
ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; 
else 
ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; 
}",490,-10.32073401205699,-0.021062722473585694
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { 
  my_fsid fsid ;
  uint32_t ino ;
  const char * sfsname = NULL ;
  char * spacep ; 
  if ( ndo -> ndo_uflag ) { 
    u_int i ;
    char const * sep = """" ;
    ND_PRINT ( ( ndo , "" fh["" ) ) ; 
    for ( i = 0 ; i < len && i < NFSX_V3FHMAX; i ++ ) { 
      ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ;
      sep = "":"" ;
    } 
    ND_PRINT ( ( ndo , ""]"" ) ) ; 
    return ; 
  } 
  Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; 
  if ( sfsname ) { 
    static char temp [ NFSX_V3FHMAX + 1 ] ; 
    strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; 
    temp [ NFSX_V3FHMAX ] = '\\0' ; 
    spacep = strchr ( temp , ' ' ) ; 
    if ( spacep ) * spacep = '\\0' ; 
    ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; 
  } else { 
    ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; 
  } 
  if ( fsid . Fsid_dev . Minor == 257 ) 
    ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; 
  else 
    ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ;
}",508,-25.488536768893894,-0.050174284978137584
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { 
my_fsid fsid ; 
uint32_t ino ; 
const char * sfsname = NULL ; 
char * spacep ; 
if ( ndo -> ndo_uflag ) { 
    u_int i ; 
    char const * sep = """" ; 
    ND_PRINT ( ( ndo , "" fh["" ) ) ; 
    for ( i = 0 ; i < len ; i ++ ) { 
        if (i >= len) break;
        ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; 
        sep = "":"" ; 
    } 
    ND_PRINT ( ( ndo , ""]"" ) ) ; 
    return ; 
} 
Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; 
if ( sfsname ) { 
    static char temp [ NFSX_V3FHMAX + 1 ] ; 
    strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; 
    temp [ sizeof ( temp ) - 1 ] = '\\0' ; 
    spacep = strchr ( temp , ' ' ) ; 
    if ( spacep ) * spacep = '\\0' ; 
    ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; 
} else { 
    ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; 
} 
if ( fsid . Fsid_dev . Minor == 257 ) 
    ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; 
else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; 
}",498,-19.435497573515704,-0.03902710356127651
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { 
 my_fsid fsid ; 
 uint32_t ino ; 
 const char * sfsname = NULL ; 
 char * spacep ; 
 if ( ndo -> ndo_uflag ) { 
  u_int i ; 
  char const * sep = """" ; 
  ND_PRINT ( ( ndo , "" fh["" ) ) ;
  
  if (len > 0) {
    for ( i = 0 ; i < len ; i ++ ) { 
      ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; 
      sep = "":"" ; 
    } 
    ND_PRINT ( ( ndo , ""]"" ) ) ; 
  }
  return ; 
 } 
 
 Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; 
 
 if ( sfsname ) { 
  static char temp [ NFSX_V3FHMAX + 1 ] ; 
  if (len <= NFSX_V3FHMAX) {
    strncpy ( temp , sfsname , len ) ; 
    temp [ len ] = '\0' ; 
    spacep = strchr ( temp , ' ' ) ; 
    if ( spacep ) * spacep = '\0' ; 
    ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; 
  }
 } else { 
  ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; 
 } 
 
 if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; 
 else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; 
}",511,-34.82754716470648,-0.06815566959825142
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len && i < NFSX_V3FHMAX; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",422,-3.4815824003629974,-0.00825019526152369
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","

static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) {
 my_fsid fsid ; 
 uint32_t ino ; 
 const char * sfsname = NULL ; 
 char * spacep ; 
 if ( ndo->ndo_uflag ) { 
    u_int i ; 
    char const * sep = """" ; 
    ND_PRINT ( ( ndo , ""fh["" ) ) ; 
    for ( i = 0; i < len; i++ ) { 
       if(i<NFSX_V3FHMAX)
          ND_PRINT ( ( ndo , ""%s%x"" , sep , dp[i] ) ) ;
       sep = "":"" ; 
    } 
    ND_PRINT ( ( ndo , ""]"" ) ) ; 
    return ;
 } 
 Parse_fh ( ( const u_char * ) dp , len , &fsid , &ino , NULL , &sfsname , 0 ) ; 
 if ( sfsname ) { 
    static char temp[NFSX_V3FHMAX + 1] ; 
    strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; 
    temp[sizeof(temp)-1] = '\0' ; 
    spacep = strchr ( temp , ' ' ) ; 
    if ( spacep ) 
       *spacep = '\0' ; 
    ND_PRINT ( ( ndo , ""fh %s/"" , temp ) ) ; 
 } 
 else { 
    ND_PRINT ( ( ndo , ""fh %d,%d/"" , fsid.Fsid_dev.Major , fsid.Fsid_dev.Minor ) ) ; 
 } 
 if ( fsid.Fsid_dev.Minor == 257 ) 
    ND_PRINT ( ( ndo , ""%s"" , fsid.Opaque_Handle ) ) ; 
 else 
    ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; 
 }",510,-50.95373999583113,-0.0999092941094728
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","

static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len && i < NFSX_V3FHMAX; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",423,-5.643664029087795,-0.013341995340633085
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len && i < NFSX_V3FHMAX; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",422,-3.492373810822797,-0.008275767324224638
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len && i < NFSX_V3FHMAX; i ++ ) { 
ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",424,-11.149615890795546,-0.026296263893385723
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len && i < NFSX_V3FHMAX; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",422,-2.506172853837801,-0.005938798231843131
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len && i < NFSX_V3FHMAX; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",422,-2.518430526302299,-0.00596784484905758
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len && i < NFSX_V3FHMAX; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",422,-2.506172853837801,-0.005938798231843131
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; if (len > 0) { for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",419,-6.125319173995546,-0.01461890017660035
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { if (i < NFSX_V3FHMAX) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",426,-6.001577634683297,-0.014088210410054688
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len && i < NFSX_V3FHMAX ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ NFSX_V3FHMAX ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",424,-5.242290070423152,-0.012363891675526303
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { 
 my_fsid fsid ; 
 uint32_t ino ; 
 const char * sfsname = NULL ; 
 char * spacep ; 
 if ( ndo -> ndo_uflag ) { 
  u_int i ; 
  char const * sep = """" ; 
  ND_PRINT ( ( ndo , "" fh["" ) ) ; 
  for ( i = 0 ; i < len ; i ++ ) { 
   if (i < NFSX_V3FHMAX){
    ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; 
    sep = "":"" ;
   }
  } 
  ND_PRINT ( ( ndo , ""]"" ) ) ; 
  return ; 
 } 
 Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; 
 if ( sfsname ) { 
  static char temp [ NFSX_V3FHMAX + 1 ] ; 
  strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; 
  temp [ sizeof ( temp ) - 1 ] = '\\0' ; 
  spacep = strchr ( temp , ' ' ) ; 
  if ( spacep ) * spacep = '\\0' ; 
  ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; 
 } else { 
  ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; 
 } 
 if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; 
 else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; 
}",502,-14.697767156308911,-0.029278420630097432
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len && i < NFSX_V3FHMAX; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ NFSX_V3FHMAX ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",424,-4.2169292528937,-0.00994558786059835
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len && i < NFSX_V3FHMAX; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",422,-3.492373810822797,-0.008275767324224638
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { 
my_fsid fsid ; 
uint32_t ino ; 
const char * sfsname = NULL ; 
char * spacep ; 

if ( ndo -> ndo_uflag || len == 0 ) { 
    u_int i ; 
    char const * sep = """" ; 
    ND_PRINT ( ( ndo , "" fh["" ) ) ; 
    for ( i = 0 ; i < len && i < NFSX_V3FHMAX; i ++ ) { 
        ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; 
        sep = "":"" ; 
    } 
    ND_PRINT ( ( ndo , ""]"" ) ) ; 
    return ; 
} 
Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; 
if ( sfsname ) { 
    static char temp [ NFSX_V3FHMAX + 1 ] ; 
    strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; 
    temp [ sizeof ( temp ) - 1 ] = '\\0' ; 
    spacep = strchr ( temp , ' ' ) ; 
    if ( spacep ) 
        * spacep = '\\0' ; 
    ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; 
} else { 
    ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; 
} 
if ( fsid . Fsid_dev . Minor == 257 ) 
    ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; 
else 
    ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; 
}",510,-19.575445821027742,-0.038383227100054394
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len && i < NFSX_V3FHMAX ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",422,-3.841066580498704,-0.009102053508290768
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) {
	my_fsid fsid ;
	uint32_t ino ;
	const char * sfsname = NULL ;
	char * spacep ;
	size_t size;
	if ( ndo -> ndo_uflag ) {
		u_int i ;
		char const * sep = """" ;
		ND_PRINT ( ( ndo , "" fh["" ) ) ;
		for ( i = 0 ; i < len ; i ++ ) {
			ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ;
			sep = "":"" ;
		}
		ND_PRINT ( ( ndo , ""]"" ) ) ;
		return ;
	}
	Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ;
	if ( sfsname ) {
		static char temp [ NFSX_V3FHMAX + 1 ] ;
		size = strnlen(sfsname, NFSX_V3FHMAX);
		strncpy ( temp , sfsname , size ) ;
		temp [ size ] = '\0' ;
		spacep = strchr ( temp , ' ' ) ;
		if ( spacep ) * spacep = '\0' ;
		ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ;
	} else {
		ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ;
	}
	if ( fsid . Fsid_dev . Minor == 257 ) {
		size = strnlen(fsid.Opaque_Handle, NFSX_V3FHMAX);
		ND_PRINT ( ( ndo , ""%.*s"",  size, fsid.Opaque_Handle ) ) ;
	}
	else 
		ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ;
}",548,-36.996418325147516,-0.067511712272167
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len && i < NFSX_V3FHMAX; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",422,-2.512988849717703,-0.005954949880847637
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","

static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { 
    my_fsid fsid ; 
    uint32_t ino ; 
    const char * sfsname = NULL ; 
    char * spacep ; 
    size_t buf_len;
    
    if ( ndo -> ndo_uflag ) { 
        u_int i ; 
        char const * sep = """" ;
        ND_PRINT ( ( ndo , "" fh["" ) ) ; 
        for ( i = 0 ; i < len ; i ++ ) { 
            ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ;
            sep = "":"" ; 
        } 
        ND_PRINT ( ( ndo , ""]"" ) ) ; 
        return ; 
    } 
    Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; 
    if ( sfsname ) { 
        buf_len = strnlen(sfsname, NFSX_V3FHMAX);
        static char temp [ NFSX_V3FHMAX + 1 ] ; 
        strncpy ( temp , sfsname , buf_len ) ;
        temp [ buf_len ] = '\0' ; 
        spacep = strchr ( temp , ' ' ) ; 
        if ( spacep ) * spacep = '\0' ; 
        ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; 
    } else { 
        ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; 
    } 
    if ( fsid . Fsid_dev . Minor == 257 ) {
        buf_len = strnlen(fsid.Opaque_Handle, NFSX_V3FHMAX);
        ND_PRINT ( ( ndo , ""%.*s"" , buf_len, fsid.Opaque_Handle ) ) ;
    } else {
        ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; 
    } 
}",566,-37.86348353049488,-0.06689661401147505
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len && i < NFSX_V3FHMAX; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",422,-2.512988849717703,-0.005954949880847637
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { 
my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { 
u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; 
if (len > 0) {
for ( i = 0 ; i < len ; i ++ ) { 
ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; 
} 
}
ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } 

Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ NFSX_V3FHMAX ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",438,-24.705355026536676,-0.05640492015191022
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len && i < NFSX_V3FHMAX ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",422,-3.8495806743490006,-0.009122229086135072
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len && i < NFSX_V3FHMAX ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",422,-5.414817956433107,-0.012831322171642434
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len && i < NFSX_V3FHMAX; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ NFSX_V3FHMAX ] = '\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",424,-5.346348167533298,-0.01260931171588042
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len && i < NFSX_V3FHMAX; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",422,-2.4821711275728995,-0.005881922103253316
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { 
my_fsid fsid ; 
uint32_t ino ; 
const char * sfsname = NULL ; 
char * spacep ; 

if ( len > NFSX_V3FHMAX ) {
    ND_PRINT( (ndo, ""Error: Out of bounds read"") );
    return; 
}

if ( ndo -> ndo_uflag ) { 
    u_int i ; 
    char const * sep = """" ; 
    ND_PRINT ( ( ndo , "" fh["" ) ) ; 
    for ( i = 0 ; i < len ; i ++ ) { 
        ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; 
        sep = "":"" ; 
    } 
    ND_PRINT ( ( ndo , ""]"" ) ) ; 
    return ; 
} 

Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; 
if ( sfsname ) { 
    static char temp [ NFSX_V3FHMAX + 1 ] ; 
    strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; 
    temp [ NFSX_V3FHMAX ] = '\\0' ; 
    spacep = strchr ( temp , ' ' ) ; 
    if ( spacep ) * spacep = '\\0' ; 
    ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; 
} else { 
    ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; 
} 
if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; 
else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; 
}",532,-27.453874378445207,-0.051605027027152646
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len && i < NFSX_V3FHMAX; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ NFSX_V3FHMAX ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",424,-4.287456633288897,-0.010111926021907774
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { if (len > 0 && i < len) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",423,-11.893211044901463,-0.028116338167615752
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len && i < NFSX_V3FHMAX; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",422,-2.4821711275728995,-0.005881922103253316
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len && i < NFSX_V3FHMAX; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",422,-2.512988849717703,-0.005954949880847637
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:"," 
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len && i < NFSX_V3FHMAX; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",423,-6.176789997579902,-0.014602340419810643
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { 
  my_fsid fsid ; 
  uint32_t ino ; 
  const char * sfsname = NULL ; 
  char * spacep ; 
  if ( ndo -> ndo_uflag ) { 
    u_int i ; 
    char const * sep = """" ; 
    ND_PRINT ( ( ndo , "" fh["" ) ) ; 
    for ( i = 0 ; i < len && i < NFSX_V3FHMAX; i ++ ) { 
      ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; 
      sep = "":"" ; 
    } 
    ND_PRINT ( ( ndo , ""]"" ) ) ; 
    return ; 
  } 
  Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; 
  if ( sfsname ) { 
    static char temp [ NFSX_V3FHMAX + 1 ] ; 
    strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; 
    temp [ sizeof ( temp ) - 1 ] = '\\0' ; 
    spacep = strchr ( temp , ' ' ) ; 
    if ( spacep ) * spacep = '\\0' ; 
    ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; 
  } else { 
    ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; 
  } 
  if ( fsid . Fsid_dev . Minor == 257 ) 
    ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; 
  else 
    ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; 
}",514,-8.635738532813054,-0.016801047729208277
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len ; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }
Fixed code:","
static void nfs_printfh ( netdissect_options * ndo , register const uint32_t * dp , const u_int len ) { my_fsid fsid ; uint32_t ino ; const char * sfsname = NULL ; char * spacep ; if ( ndo -> ndo_uflag ) { u_int i ; char const * sep = """" ; ND_PRINT ( ( ndo , "" fh["" ) ) ; for ( i = 0 ; i < len && i < NFSX_V3FHMAX; i ++ ) { ND_PRINT ( ( ndo , ""%s%x"" , sep , dp [ i ] ) ) ; sep = "":"" ; } ND_PRINT ( ( ndo , ""]"" ) ) ; return ; } Parse_fh ( ( const u_char * ) dp , len , & fsid , & ino , NULL , & sfsname , 0 ) ; if ( sfsname ) { static char temp [ NFSX_V3FHMAX + 1 ] ; strncpy ( temp , sfsname , NFSX_V3FHMAX ) ; temp [ sizeof ( temp ) - 1 ] = '\\0' ; spacep = strchr ( temp , ' ' ) ; if ( spacep ) * spacep = '\\0' ; ND_PRINT ( ( ndo , "" fh %s/"" , temp ) ) ; } else { ND_PRINT ( ( ndo , "" fh %d,%d/"" , fsid . Fsid_dev . Major , fsid . Fsid_dev . Minor ) ) ; } if ( fsid . Fsid_dev . Minor == 257 ) ND_PRINT ( ( ndo , ""%s"" , fsid . Opaque_Handle ) ) ; else ND_PRINT ( ( ndo , ""%ld"" , ( long ) ino ) ) ; }",422,-2.5159318487791,-0.005961923812272749
