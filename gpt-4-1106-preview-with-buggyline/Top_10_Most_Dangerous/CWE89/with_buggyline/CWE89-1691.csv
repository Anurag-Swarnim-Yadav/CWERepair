Original code,Plausible Program,Number of Bugs Present,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; <EndBug> } else if ( in == '\'' || in == '""' || in == ';' || in == '\\' ) { // DO NOTHING // Prevents SQL Injection attacks } else { ns [ strindex ++ ] = in ; string ++ ; } } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,357,-34.04565337968377,-0.09536597585345594
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; CURLcode res ; if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> //add parameter check if(hex > 255 || hex == 0) { free ( ns ) ; return NULL ; } <EndBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) * olen = strindex ; return ns ; }",5,314,-31.599546634783533,-0.10063549883689023
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; CURLcode res ; if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; res = Curl_convert_from_network ( handle , & in , 1 ) ; <StartBug> if ( res || ! curl_validate_input ( in ) ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) * olen = strindex ; return ns ; }",5,301,-11.172814884681152,-0.03711898632784436
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; <StartBug> hexstr [ 2 ] = '\0' ; <EndBug> hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { free ( ns ) ; return NULL ; } <EndBug> string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,333,-10.449343753162948,-0.031379410670159
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; CURLcode res ; if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtol ( hexstr , & ptr , 16 ) ; in = ( unsigned char ) hex ; res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } else if ( '\'' == in || '""' == in || ';' == in || '`' == in || '\\' == in ) { <StartBug> free ( ns ) ; return NULL ; <EndBug> } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) * olen = strindex ; return ns ; }",5,328,-20.18229552408255,-0.061531388792934606
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = length ? length : ( int ) strlen ( string ) ; sanitize(string); <EndBug> char * ns = malloc ( alloc + 1 ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> sanitize(hex); res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,332,-25.30463942048305,-0.0762187934351899
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = 0; if (length) { alloc = length + 1; } else { alloc = (int)strlen(string) + 1; } <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; <StartBug> ptr = NULL; hex = strtoul ( hexstr , & ptr , 16 ) ; if (ptr != NULL) { <EndBug> <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } <StartBug> in = curlx_ultouc ( hex ) ; <EndBug> string += 2 ; alloc -= 2 ; } <StartBug> else { in = *string; } <EndBug> ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,378,-28.259237627155333,-0.07475988790252734
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; return NULL ; } string += 3 ; alloc -= 3 ; <EndBug> } else { <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; return NULL ; } string += 1 ; alloc -= 1 ; <EndBug> } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,367,-16.791204990506703,-0.045752602153969216
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; CURLcode res ; if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; return NULL ; } if ( ! isalnum ( ( int ) in ) && ! ispunct ( ( int ) in ) ) { free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) * olen = strindex ; return ns ; }",5,316,-19.10345747407395,-0.06045397934833528
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc; if(length) { alloc = length; } else { alloc = (int) strlen(string); } alloc = alloc+1; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; return NULL ; } <EndBug> string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,326,-18.97643724358161,-0.05820993019503561
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; CURLcode res ; if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr , * endptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & endptr , 16 ) ; <StartBug> if (endptr != &hexstr[2]) { <EndBug> free ( ns ) ; return NULL ; } <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,328,-23.91168983509218,-0.07290149339967128
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { <StartBug> char hexstr [ 3 ] ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , NULL , 16 ) ; in = curlx_ultouc ( hex ) ; <EndBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <StartBug> if ( res ) { free ( ns ) ; return NULL ; } <EndBug> string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,317,-14.951502015529941,-0.04716562150009445
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; CURLcode res ; if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> int valid = 0 ; 
if( (in >= '0' && in <= '9') || (in >= 'a' && in <= 'z') || (in >= 'A' && in <= 'Z') || in == '_' ) 
valid = 1 ; 
if(!valid) { 
free ( ns ) ; 
return NULL ; 
} <EndBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) * olen = strindex ; return ns ; }",5,373,-33.80071868969494,-0.09061854876593818
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:"," 
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc ; 
if (length == 0) {
alloc = strlen(string) + 1;
} else {
alloc = length;
} <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; 
if ( res ) {
free ( ns ) ;
return NULL ;
} <EndBug> string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,334,-22.637782520968617,-0.06777779197894795
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = curl_easy_escape(handle, &in, 1); <EndBug> <StartBug> if ( res ) { free ( ns ) ; return NULL ; } <EndBug> string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,309,-15.504008192015196,-0.05017478379292944
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = 0 ; <StartBug> if ( sscanf (hexstr, ""%2x"", &hex ) != 1 ) { free(ns); return NULL; } <EndBug> in = curlx_ultouc ( hex ) ; res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,323,-20.94859098574265,-0.06485631884130852
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; // Check that input is valid if (res || in == 0 || in == '\'' || in == ';' || in == '-' || in == '#'){ <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,346,-36.32383395183388,-0.10498217905154301
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> // Add input validation check to check if the hexstr is a valid character to unescape 
if (!strspn(hexstr, ""0123456789abcdefABCDEF"") == 2) {
    free(ns);
    return NULL;
}

res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,381,-53.90973798973232,-0.1414953753011347
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> // Sanitize input with an escape character res = Curl_convert_from_network ( handle , & in , 1 ) ; //Validate the return value from Curl_convert_from_network if ( res ) { free ( ns ) ; return NULL ; } <EndBug> string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,331,-45.90406277750994,-0.13868296911634423
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc ; if(!length) { alloc = (int)strlen(string) + 1; } else { alloc = length; } <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; return NULL ; } <EndBug> string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,324,-12.728998552904958,-0.03928703257069432
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> hexstr[3] = '\0'; //add null-terminator res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,338,-17.869375056100626,-0.05286797353875925
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc ; const unsigned char * estring; CURLcode res; <EndBug> estring = (const unsigned char *)string; alloc = ( length ? length : ( int ) strlen ( estring ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> res = CURLE_OK; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * estring ; if ( ( '%' == in ) && ISXDIGIT ( estring [ 1 ] ) && ISXDIGIT ( estring [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = estring [ 1 ] ; hexstr [ 1 ] = estring [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; return NULL ; } <EndBug> estring += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; estring ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,353,-30.819167708029408,-0.08730642410206631
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; char* safeString = curl_easy_escape(handle, string, 0); <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> curl_free(safeString); return ns ; }",5,346,-20.000664900358423,-0.057805389885428965
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; CURLcode res ; if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 5 ] ; char * ptr ; hexstr [ 0 ] = '0' ; hexstr [ 1 ] = 'x' ; hexstr [ 2 ] = string [ 1 ] ; hexstr [ 3 ] = string [ 2 ] ; hexstr [ 4 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; res = Curl_convert_from_network ( handle , & in , 1 ) ; <StartBug> if ( res ) { free ( ns ) ; return NULL ; } <EndBug> string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) * olen = strindex ; return ns ; }",5,310,-8.186705181401047,-0.02640872639161628
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:"," 
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = 0; if (length > 0) { alloc = length; } else { alloc = (int) strnlen(string, CURL_MAX_INPUT_LEN); } <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; return NULL ; } <EndBug> string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,337,-20.978536789275523,-0.062250851006752296
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc ; <EndBug> if (length == 0) { alloc = (int) strlen(string) + 1; } else { alloc = length; } <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } 
<StartBug> if (in == '\'' || in == ';') { free ( ns ) ; return NULL ; } <EndBug> 
ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,372,-29.930101528367363,-0.08045726217303055
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; CURLcode res ; if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; if ( checkForSpecialCharacters( hexstr ) ) { free ( ns ) ; return NULL ; } <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; return NULL ; } <EndBug> string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) * olen = strindex ; return ns ; } 

bool checkForSpecialCharacters(char *str) {
  int i; 
  int len = strlen(str); 
  for(i = 0; i < len; i++) { 
    if (str[i] == ';' || str[i] == '\'' || str[i] == '""' || str[i] == '-' || str[i] == '+' || str[i] == '*' || str[i] == '%' || str[i] == '&' || str[i] == '#') { 
      return true; 
    } 
  } 
  return false; 
}",5,464,-66.21260794690082,-0.14269958609245867
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; 
char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; 
CURLcode res ; 
char* escaped_string = malloc(alloc);
if(escaped_string == NULL)
{
  free(ns);
  return NULL;
}

for(int i = 0; i < alloc - 1; i++)
{
  if(string[i] == '\'' || string[i] == '\""' || string[i] == ';' || string[i] == '%' || string[i] == '\\')
  {
    escaped_string[i] = '\\';
    i++;
  }
  
  escaped_string[i] = string[i];
}

escaped_string[alloc - 1] = '\0';
string = escaped_string;
<EndBug> while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; free(escaped_string); 
return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> free(escaped_string); 
return ns ; }",5,496,-51.573104052704515,-0.10397803236432362
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc ; int strindex = 0 ; unsigned long hex ; CURLcode res ; if (length == 0) { alloc = (int) strlen(string) + 1; } else { alloc = length; } <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ;  <StartBug> res = CURLE_OK; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; return NULL ; } <EndBug> string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,334,-19.154611259116137,-0.05734913550633574
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res || in < 0x20 || in > 0x7E ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,335,-17.038212768211057,-0.050860336621525545
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:"," 
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc ; if (length == 0) { alloc = (int) strlen(string) + 1; } else { alloc = length; } <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; hex = mysql_real_escape_string( hex ); <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,346,-22.778590528113305,-0.0658340766708477
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:"," 
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc ; char * ns ; unsigned char in ; int strindex = 0 ; unsigned long hex ; CURLcode res ; <EndBug> if (length) { alloc = length + 1 ; } else { alloc = (int)strlen(string) + 1 ; } ns = malloc(alloc) ; <StartBug> if (!ns) return NULL ; if (alloc > 0) { <EndBug> while (--alloc > 0) { in = *string ; if (('%' == in) && ISXDIGIT(string[1]) && ISXDIGIT(string[2])) { char hexstr[3] ; char * ptr ; hexstr[0] = string[1] ; hexstr[1] = string[2] ; hexstr[2] = 0 ; hex = strtoul(hexstr , &ptr , 16) ; in = curlx_ultouc(hex) ; res = Curl_convert_from_network(handle , &in , 1) ; <StartBug> if (res) { free(ns) ; return NULL ; } <EndBug> string += 2 ; alloc -= 2 ; } ns[strindex++] = in ; string++ ; } ns[strindex] = 0 ; if (olen) <StartBug> * olen = strindex ; <EndBug> return ns ; } }",5,331,-42.279718826879865,-0.12773328950718993
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; CURLcode res ; if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; return NULL ; } <EndBug> <StartBug> if (!res) { <EndBug> string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) * olen = strindex ; return ns ; }",5,303,-17.068360711859647,-0.056331223471483984
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; 
char *ns = malloc ( alloc ) ;
char *ns_fixed = malloc ( alloc ) ; 
unsigned char in ; 
int strindex = 0 ; 
unsigned long hex ; 
CURLcode res ; 
if ( ! ns || ! ns_fixed ) 
	return NULL ; 
<EndBug> while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; free ( ns_fixed ) ; return NULL ; } string += 2 ; alloc -= 2 ; } <StartBug>
// Filter the input by
// replacing all single quotes with two single quotes
if (in == '\'') {
	ns_fixed[strindex++] = '\'';
	ns_fixed[strindex++] = '\'';
} else {
	ns_fixed[strindex++] = in;
}
<EndBug> string ++ ; } ns_fixed [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> free ( ns ) ; 
return ns_fixed ; 
}",5,426,-81.49225728795467,-0.19129637861022222
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> string = strtok(string, ""'""); res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,332,-16.213694479970542,-0.048836429156537776
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc ; if ( length ) { alloc = length + 1 ; } else { alloc = ( int ) strlen ( string ) + 1 ; } <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; return NULL ; } <EndBug> string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,325,-8.631458718867806,-0.02655833451959325
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> if ( isalnum ( in ) || in == '_' ) { res = Curl_convert_from_network ( handle , & in , 1 ) ; } <EndBug> <StartBug> else { free ( ns ) ; return NULL ; } <EndBug> if ( res ) { free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,342,-19.553022365303885,-0.057172580015508435
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; return NULL ; } <EndBug> string += 2 ; alloc -= 2 ; } else if(in == '\'') { free ( ns ) ; return NULL ; } else { <StartBug> ns [ strindex ++ ] = in ; <EndBug> string ++ ; } } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,344,-27.329978016172642,-0.07944761051212977
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = 0; if (length) { alloc = length; } else { alloc = (int)strlen(string) + 1; } <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; return NULL ; } <EndBug> string += 2 ; alloc -= 2 ; } <StartBug> ns [ strindex ++ ] = Curl_sanitize_string(in); <EndBug> string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,342,-20.52997036290469,-0.060029153107908455
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:"," 
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc ; if (length == 0) { alloc = (int) strlen (string) + 1; } else { alloc = length; } <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; <StartBug> hex = strtoul ( hexstr , & ptr , 16 ) ; <EndBug> <StartBug> in = curlx_ultouc ( hex ) ; res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; return NULL ; } <EndBug> string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,334,-22.739906863010347,-0.0680835534820669
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; res = Curl_convert_from_network ( handle , & in , 1 ) ; <StartBug> if ( res || ! curl_is_alnum(in) ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,317,-18.53059368131469,-0.05845613148679713
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; CURLcode res ; if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; res = Curl_convert_from_network ( handle , & in , 1 ) ; <StartBug> if ( res ) { if ( olen ) * olen = strindex ; free ( ns ) ; return NULL ; } <EndBug> string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) * olen = strindex ; return ns ; }",5,302,-9.275426467853851,-0.030713332675012753
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { int alloc = 0 ; <StartBug> if (length) { alloc = length; } else { alloc = (int) strlen(string) + 1; } <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { <StartBug> char hexstr [ 3 ] ; memset(hexstr, 0, sizeof(hexstr)); <EndBug> char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; <StartBug> hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <EndBug> <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; return NULL ; } <EndBug> string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,346,-28.74156728862588,-0.08306811355094185
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; <StartBug> hex = strtoul ( hexstr , & ptr , 10 ) ; <EndBug> <StartBug> if ( hex > 0xFF ) { <EndBug> free ( ns ) ; return NULL ; } in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,356,-14.025374766287586,-0.03939712013002131
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; CURLcode res ; if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> if ( ptr != & hexstr [ 2 ] ) { free ( ns ) ; return NULL ; } <EndBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) * olen = strindex ; return ns ; }",5,311,-11.499052730679855,-0.036974446079356446
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; 
char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; 
CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 4 ] ; char * ptr ; hexstr [ 0 ] = '0' ; hexstr [ 1 ] = 'x' ; hexstr [ 2 ] = string [ 1 ] ; hexstr [ 3 ] = string [ 2 ] ; hexstr [ 4 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,338,-17.467456912551892,-0.051678866605183116
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; CURLcode res ; if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 5 ] ; char * ptr ; <StartBug> hexstr [ 0 ] = '0' ; <EndBug> hexstr [ 1 ] = 'x' ; hexstr [ 2 ] = string [ 1 ] ; hexstr [ 3 ] = string [ 2 ] ; hexstr [ 4 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,334,-12.08358671019728,-0.03617840332394395
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","

char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc ; if ( length ) { alloc = length + 1 ; } else { alloc = ( int ) strlen ( string ) + 1 ; } <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; return NULL ; } <EndBug> string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,326,-12.569264523477898,-0.038556026145637724
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 4 ] ; char * ptr ; hexstr [ 0 ] = '0' ; hexstr [ 1 ] = 'x' ; hexstr [ 2 ] = string [ 1 ] ; hexstr [ 3 ] = string [ 2 ] ; <StartBug> hex = ( unsigned long )strtoul ( hexstr , & ptr , 16 ) ; <EndBug> in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,346,-15.548144049648078,-0.04493683251343375
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }
Fixed code:","

char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { <StartBug> int alloc = length ? length : ( int ) strlen ( string ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; int strindex = 0 ; unsigned long hex ; <StartBug> CURLcode res ; <EndBug> if ( ! ns ) return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = curl_strtoul ( hexstr , & ptr , 16 ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> <StartBug> if ( res ) { <EndBug> free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } else if (in == '\'' || in == '\""' || in == ';') { <StartBug> free (ns); return NULL; <EndBug> } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen ) <StartBug> * olen = strindex ; <EndBug> return ns ; }",5,348,-29.539656856423832,-0.08488407142650527
