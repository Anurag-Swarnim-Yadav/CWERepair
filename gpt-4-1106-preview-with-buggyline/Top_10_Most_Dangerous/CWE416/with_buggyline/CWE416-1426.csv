Original code,Plausible Program,Number of Bugs Present,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; int ret ; <StartBug> /* check if skb has been freed */ if ( skb == NULL ) return NETDEV_TX_OK ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }",3,220,-18.788704890254888,-0.08540320404661313
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; int ret ; assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; if ( ret == NETDEV_TX_OK ) { netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; kfree ( skb ) ;  } return ( netdev_tx_t ) ret ; }",3,188,-10.698680755230201,-0.056907876357607454
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; int ret ; assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ); <StartBug> if ( ret != NETDEV_TX_OK ) { kfree_skb ( skb ) ; } else { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }",3,200,-14.284208121633508,-0.07142104060816754
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:"," 
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; int ret ; assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; if ( ret == NETDEV_TX_OK ) { netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } <StartBug>kfree(skb);<EndBug> return ( netdev_tx_t ) ret ; }",3,195,-10.687937987718305,-0.05480993839855541
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret = NETDEV_TX_OK; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }",3,211,-4.641309809426599,-0.021996728954628432
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret = 0; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } <StartBug> else { kfree_skb(skb); } <EndBug> return ( netdev_tx_t ) ret ; }",3,218,-13.965846537116702,-0.06406351622530597
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; int ret ; <StartBug> if (skb == NULL) { return NETDEV_TX_OK; } <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }",3,213,-6.440601903607499,-0.03023756762257042
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; int ret ; <StartBug> if (skb == NULL) { <EndBug> return NETDEV_TX_OK; } <StartBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <EndBug> ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; if ( ret == NETDEV_TX_OK ) { netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }",3,213,-9.11341837280401,-0.042786001750253565
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; if ( priv == NULL ) return NETDEV_TX_OK; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } <StartBug> kfree(priv); <EndBug> return ( netdev_tx_t ) ret ; }",3,231,-13.057976563805003,-0.05652803707274893
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; if ( skb -> queue_mapping >= ndev -> ae_handle -> q_num ){ kfree_skb ( skb ) ; return NETDEV_TX_OK ; } <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }",3,246,-10.235131791689195,-0.041606226795484536
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; int ret ; <StartBug> if ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) { <EndBug> ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; if ( ret == NETDEV_TX_OK ) { netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } } return ( netdev_tx_t ) ret ; }",3,189,-6.518464660823706,-0.034489231009649235
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; int ret ; assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { kfree ( skb ) ; <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }",3,195,-5.3137482732090024,-0.02724999114466155
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; int q_num = ndev -> ae_handle -> q_num; if (skb -> queue_mapping >= q_num) { kfree_skb(skb); return NETDEV_TX_OK; } <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }",3,254,-16.492314293412,-0.06493037123390552
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret = 0; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } <StartBug> else { kfree(skb); } <EndBug> return ( netdev_tx_t ) ret ; }",3,223,-5.4901578673476035,-0.024619542006043067
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; int ret ; 
 
 <StartBug> if (!priv || ! priv->ae_handle)
    return NETDEV_TX_BUSY;
  
  if ( skb->queue_mapping >= priv->ae_handle->q_num)
    return NETDEV_TX_BUSY; <EndBug>  
assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; 
ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; 
if ( ret == NETDEV_TX_OK ) { netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }",3,255,-47.719201412935426,-0.18713412318798206
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret = NETDEV_TX_OK; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }",3,211,-4.685315655925901,-0.022205287468843135
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:"," 
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; int ret ; assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; kfree(skb); } <EndBug> return ( netdev_tx_t ) ret ; }",3,195,-10.225903444896101,-0.05244053048664667
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret = NETDEV_TX_OK; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } else { kfree_skb(skb); } return ( netdev_tx_t ) ret ; }",3,223,-7.426930827815499,-0.033304622546257844
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; int ret ; <StartBug> if(!skb) { return NETDEV_TX_OK; } <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }",3,212,-9.094256159378695,-0.04289743471405045
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; int ret ; <StartBug> if (! priv ) return NETDEV_TX_BUSY ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }",3,209,-8.681382257746106,-0.04153771415189524
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; int ret ; assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> if ( ! priv ) return NETDEV_TX_BUSY ; <EndBug> ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; if ( ret == NETDEV_TX_OK ) { netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }",3,202,-10.263524495800002,-0.0508095272069307
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret = NETDEV_TX_OK ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } <EndBug> return ( netdev_tx_t ) ret ; }",3,203,-7.535305689516595,-0.037119732460672884
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; if ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) { ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; } else { kfree_skb ( skb ) ; return NETDEV_TX_OK ; } <EndBug> }",3,222,-15.211353214159404,-0.0685196090727901
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { int ret ; struct hns_nic_priv * priv = netdev_priv ( ndev ) ; assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> if ( priv ) { <EndBug> ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; } }",3,202,-12.8536509542915,-0.06363193541728465
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; int ret ; assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } <EndBug> return ( netdev_tx_t ) ret ; }",3,188,-5.1136673106599995,-0.027200358035425528
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; int ret ; assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; ret = NETDEV_TX_OK; <EndBug> if ( ret == NETDEV_TX_OK ) { netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }",3,195,-7.881972468962303,-0.04042037163570412
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; int ret ; assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { kfree ( ndev ) ; <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }",3,195,-10.649190770683301,-0.05461123472145283
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","

static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; int ret ; <StartBug> if(!priv) { return NETDEV_TX_BUSY; } <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }",3,213,-11.252317054342738,-0.05282777959785323
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; if (skb) {<EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; } }",3,211,-11.703282526044504,-0.05546579396229623
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret = 0; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } else { kfree(skb); } return ( netdev_tx_t ) ret ; }",3,215,-5.957583738838399,-0.027709691808550693
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; int ret ; <StartBug> if(skb->queue_mapping < priv->ae_handle->q_num) {<EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; if ( ret == NETDEV_TX_OK ) { netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; } <StartBug>else{ return NETDEV_TX_OK; }<EndBug> }",3,229,-29.842885984721082,-0.13031827940926236
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; int ret ; <StartBug> if( !priv ) return NETDEV_TX_BUSY; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK && priv ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }",3,212,-11.347064566493895,-0.05352388946459384
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; int ret ; <StartBug> if (!ndev || !netdev_priv(ndev)) { return NETDEV_TX_BUSY; }<EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }",3,221,-19.185800747167573,-0.08681357804148222
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:"," 
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; int ret ; assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> skb = skb_unshare ( skb , GFP_ATOMIC ) ; if ( ! skb ) return NETDEV_TX_OK ; <EndBug> ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { kfree_skb ( skb ) ; <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } else { dev_kfree_skb_any ( skb ) ; } return ( netdev_tx_t ) ret ; }",3,258,-15.49999028008306,-0.060077481705748295
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; if ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) { <EndBug> ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; if ( ret == NETDEV_TX_OK ) { netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } <StartBug> } else { ret = NETDEV_TX_BUSY; } <EndBug> return ( netdev_tx_t ) ret ; }",3,210,-11.551367991786702,-0.05500651424660334
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; int ret ; assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { kfree ( skb ) ; <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } else { kfree ( skb ) ; } <StartBug> return ( netdev_tx_t ) ret ; <EndBug> }",3,213,-12.952906720975296,-0.060811768643076504
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; int ret ; <StartBug> if (!ndev || !ndev->ae_handle) { return NETDEV_TX_BUSY; } <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } <EndBug> return ( netdev_tx_t ) ret ; }",3,220,-12.820048743589197,-0.05827294883449635
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; int ret ; <StartBug> if(priv) { <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; } }",3,202,-8.236938431454503,-0.040776922927992586
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; int ret ; assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; free_skb ( skb ) ; } <EndBug> return ( netdev_tx_t ) ret ; }",3,197,-9.949546846893098,-0.05050531394361978
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; int ret ; <StartBug> if (skb == NULL) { return NETDEV_TX_OK; } <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }",3,213,-6.288078044236703,-0.02952149316543053
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; int ret ; <StartBug> if ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) { <EndBug> ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; if ( ret == NETDEV_TX_OK ) { netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } } <StartBug> else { ret = NETDEV_TX_BUSY; } <EndBug> return ( netdev_tx_t ) ret ; }",3,210,-7.0880038851452065,-0.033752399453072415
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; int ret ; <StartBug> if ( skb -> queue_mapping >= ndev -> ae_handle -> q_num ) { kfree_skb ( skb ) ; return NETDEV_TX_OK ; } <EndBug> ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; if ( ret == NETDEV_TX_OK ) { netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }",3,207,-6.129527883895701,-0.029611245815921262
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; int ret ; <StartBug> if (!skb){ 
 return NETDEV_TX_OK; 
}
<EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }",3,215,-17.92330641032778,-0.08336421586198967
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> priv = netdev_priv ( ndev ) ; <EndBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <StartBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <EndBug> if ( ret == NETDEV_TX_OK ) { netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }",3,206,-9.057946417026443,-0.043970613674885646
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; int ret ; <StartBug> if ( priv -> tx_ring_data ) { <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; } }",3,208,-10.488222644858004,-0.050424147331048094
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; int ret ; <StartBug> if(!priv) return NETDEV_TX_BUSY; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }",3,210,-8.0152052949093,-0.03816764426147286
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; int ret ; assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { kfree ( skb ) ; <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }",3,195,-5.244861024648901,-0.026896723203327696
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; int ret ; <StartBug> if ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) { <EndBug> ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; if ( ret == NETDEV_TX_OK ) { netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; } <StartBug> else { return NETDEV_TX_BUSY; } <EndBug> }",3,209,-8.822997743568104,-0.04221530020845983
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:"," 
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; int ret ; <StartBug> if ( skb -> queue_mapping >= ndev -> ae_handle -> q_num ) { <EndBug> kfree_skb ( skb ) ; return NETDEV_TX_OK ; } <EndBug> ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }",3,220,-12.97908228768566,-0.05899582858038936
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , <EndBug> & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <StartBug> if ( ret == NETDEV_TX_OK ) { <EndBug> netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } return ( netdev_tx_t ) ret ; }
Fixed code:","
static netdev_tx_t hns_nic_net_xmit ( struct sk_buff * skb , struct net_device * ndev ) { struct hns_nic_priv * priv = netdev_priv ( ndev ) ; <StartBug> int ret ; <EndBug> assert ( skb -> queue_mapping < ndev -> ae_handle -> q_num ) ; <StartBug> ret = hns_nic_net_xmit_hw ( ndev , skb , & tx_ring_data ( priv , skb -> queue_mapping ) ) ; <EndBug> if ( ret == NETDEV_TX_OK ) { netif_trans_update ( ndev ) ; ndev -> stats . tx_bytes += skb -> len ; ndev -> stats . tx_packets ++ ; } <StartBug> else { kfree(skb); } <EndBug> return ( netdev_tx_t ) ret ; }",3,213,-10.334124988002785,-0.048517018723017766
