Original code,Plausible Program,Number of Bugs Present,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>",4,184,-1.6486417273923997,-0.008960009388002172
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>",4,184,-1.6489176245094,-0.008961508828855434
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>",4,184,-1.6486417273923997,-0.008960009388002172
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) { sock_kfree_s ( sk , opt , opt -> tot_len ) ; } <EndBug> }",4,178,-3.7717066514741004,-0.021189363210528653
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>",4,184,-1.6486417273923997,-0.008960009388002172
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>",4,184,-1.6489176245094,-0.008961508828855434
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:"," 
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = np -> opt ; np -> opt = NULL ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; kfree ( opt ) ; <EndBug> <StartBug> } <EndBug>",4,205,-6.808027295228249,-0.03320988924501585
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>",4,184,-1.6489176245094,-0.008961508828855434
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> }",4,176,-1.5931898740923998,-0.009052215193706817
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>",4,184,-1.6489176245094,-0.008961508828855434
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> }",4,176,-1.5931898740923998,-0.009052215193706817
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) { <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>",4,201,-3.416763914531401,-0.016998825445429855
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>",4,184,-1.6486417273923997,-0.008960009388002172
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> }",4,176,-1.5797075336461,-0.008975610986625568
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>",4,184,-1.6486417273923997,-0.008960009388002172
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>",4,184,-1.6489176245094,-0.008961508828855434
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> }",4,176,-1.59087557436,-0.009039065763409092
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) { <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug> 
<StartBug> kfree(opt); <EndBug> 
}",4,219,-8.480412499880696,-0.03872334474831368
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock(struct sock *sk) {
struct ipv6_pinfo *np = inet6_sk(sk); 
struct sk_buff *skb; 
struct ipv6_txoptions *opt; 
skb = xchg(&np->pktoptions, NULL); 
if (skb) 
    kfree_skb(skb); 
skb = xchg(&np->rxpmtu, NULL); 
if (skb) 
    kfree_skb(skb); 
fl6_free_socklist(sk); 
<StartBug>opt = np->opt; 
if (opt) { 
    np->opt = NULL; 
    sock_kfree_s(sk, opt, opt->tot_len); 
}<EndBug>
}",4,201,-22.898961971037,-0.11392518393550746
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> }",4,176,-1.59087557436,-0.009039065763409092
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> }",4,176,-1.5891258101336998,-0.009029123921214204
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> }",4,176,-1.59087557436,-0.009039065763409092
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> }",4,176,-1.5891258101336998,-0.009029123921214204
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> }",4,176,-1.59087557436,-0.009039065763409092
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> }",4,176,-1.5891258101336998,-0.009029123921214204
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>",4,184,-1.6318137233273002,-0.00886855284417011
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>",4,184,-1.6593762748760996,-0.009018349319978802
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> }",4,176,-1.59087557436,-0.009039065763409092
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> }",4,176,-1.5891258101336998,-0.009029123921214204
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> }",4,176,-1.59087557436,-0.009039065763409092
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> }",4,176,-1.5891258101336998,-0.009029123921214204
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> }",4,176,-1.59087557436,-0.009039065763409092
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> }",4,176,-1.5891258101336998,-0.009029123921214204
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>",4,184,-1.6593762748760996,-0.009018349319978802
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:"," 
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = np -> opt ; np -> opt = NULL ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> kfree ( opt ) ; <EndBug> <StartBug> } <EndBug>",4,213,-6.920730252021753,-0.032491691324045786
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> }",4,176,-1.5891258101336998,-0.009029123921214204
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>",4,184,-1.6366870398759004,-0.008895038260195111
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) { sock_kfree_s ( sk , opt , opt -> tot_len ) ; kfree ( opt ) ; } <EndBug> }",4,184,-3.6234115099197,-0.01969245385825924
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>",4,184,-1.6366870398759004,-0.008895038260195111
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug>}",4,176,-7.4375640101337,-0.042258886421214205
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) { <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>",4,201,-3.364691454212099,-0.01673975847866716
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; kfree ( opt ) ; <EndBug> }",4,182,-3.4440314732417003,-0.018923249852976377
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) { sock_kfree_s ( sk , opt , opt -> tot_len ) ; kfree ( opt ) ; } <EndBug> }",4,184,-3.6849166821689,-0.02002672109874402
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> }",4,176,-1.5891258101336998,-0.009029123921214204
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> }",4,176,-1.5967693802179,-0.009072553296692614
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> }",4,176,-1.5891258101336998,-0.009029123921214204
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; 
<StartBug> opt = xchg ( & np -> opt , NULL ) ; 
if ( opt ) {
    sock_kfree_s ( sk , opt , opt -> tot_len ) ;
}
<EndBug> 
}",4,188,-10.730056301557198,-0.057074767561474456
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:"," 
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> fl6_free_socklist ( sk ) ; }",4,177,-7.8237129534007535,-0.04420176809830934
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> }",4,176,-1.5797075336461,-0.008975610986625568
"The Original Code is vulnerable to CWE-416: Use After Free. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; <EndBug> <StartBug> if ( opt ) <EndBug> <StartBug> sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> <StartBug> } <EndBug>
Fixed code:","
void inet6_destroy_sock ( struct sock * sk ) { struct ipv6_pinfo * np = inet6_sk ( sk ) ; struct sk_buff * skb ; struct ipv6_txoptions * opt ; skb = xchg ( & np -> pktoptions , NULL ) ; if ( skb ) kfree_skb ( skb ) ; skb = xchg ( & np -> rxpmtu , NULL ) ; if ( skb ) kfree_skb ( skb ) ; fl6_free_socklist ( sk ) ; <StartBug> opt = xchg ( & np -> opt , NULL ) ; if ( opt ) sock_kfree_s ( sk , opt , opt -> tot_len ) ; <EndBug> }",4,176,-1.5797075336461,-0.008975610986625568
