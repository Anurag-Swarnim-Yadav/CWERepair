Original code,Plausible Program,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke(struct key *key) {
    struct path *path = (struct path *)&key->payload.data[big_key_path];
    if (key->payload.data[big_key_len] > 0 && key->payload.data[big_key_len] <= BIG_KEY_FILE_THRESHOLD) {
        key_payload_reserve(key, 0);
        if (key_is_instantiated(key)) {
            vfs_truncate(path, 0);
        }
    }
}",136,-11.296416588328498,-0.08306188667888602
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD && path != NULL ) vfs_truncate ( path , 0 ) ; }",111,-5.40491194435299,-0.04869290039957649
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) { key_payload_reserve ( key , 0 ) ; vfs_truncate ( path , 0 ) ; } }",109,-3.3041344279880396,-0.03031315988979853
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { 
    struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; 
    key_payload_reserve ( key , 0 ) ; 
    if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD && key -> payload . data [ big_key_path ] != NULL) vfs_truncate ( path , 0 ) ; 
}",133,-16.589215488841905,-0.1247309435251271
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) {
 struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; 
 if (key->key_type == BIG_KEY_TYPE) {
   key_payload_reserve ( key , 0 ) ; 
   if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) 
   vfs_truncate ( path , 0 ) ; 
  }
}",138,-24.41489502795644,-0.17691952918809015
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { 
if (key != NULL) {
    struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; 
    key_payload_reserve ( key , 0 ) ; 
    if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) 
        vfs_truncate ( path , 0 ) ; 
    }
}",132,-10.636243539948431,-0.0805776025753669
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { 
  if (key == NULL)
    return;
  struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; 
  if ( key_payload_reserved(key) > 0 ) {
    key_payload_reserve ( key , 0 ) ; 
    if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; 
  }
}",151,-27.69269819092752,-0.18339535225779813
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) { if ( key_payload_reserve ( key , 0 ) == 0 ) { vfs_truncate ( path , 0 ) ; } } }",115,-5.988297086118599,-0.052072148574944334
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { 
   if(key == NULL) {
      return;
   }

   struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; 
   key_payload_reserve ( key , 0 ) ; 
   if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) 
   {
      vfs_truncate ( path , 0 ) ; 
   }
}",143,-19.488462537345068,-0.13628295480660887
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { 
  if (key != NULL && key->payload.data != NULL) {
    struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; 
    key_payload_reserve ( key , 0 ) ; 
    if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) {
      vfs_truncate ( path , 0 ) ; 
    }
  }
}",145,-11.999012317666333,-0.08275180908735402
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) { 
  if (key->payload.data[big_key_path] != NULL) {
    key_payload_reserve ( key , 0 ) ; 
    vfs_truncate ( path , 0 ) ;
  }
}",139,-15.029959816101838,-0.10812920731008517
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { 
  struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; 
  key_payload_reserve ( key , 0 ) ; 
  if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD && key -> payload . data[big_key_len] >= 0) {
   vfs_truncate ( path , 0 ) ; 
  }
}",139,-20.243825059320606,-0.14563902920374536
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD && path != NULL ) vfs_truncate ( path , 0 ) ; }",111,-5.41492028356589,-0.04878306561771072
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { 
    struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; 
    if (key == NULL)
        return;
    if (key->payload.data[big_key_len] > 0 && key->payload.data[big_key_len] <= BIG_KEY_FILE_THRESHOLD)
        key_payload_reserve ( key , 0 ) ; 
    else if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD )
        vfs_truncate ( path , 0 ) ; 
}",178,-24.488414487781498,-0.13757536229090728
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; 
if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) 
{
	if (key->payload.data[big_key_len] > 0) {
		key_payload_reserve ( key , 0 ) ;
		vfs_truncate ( path , 0 ) ;
	}
}
}",145,-19.0869724708204,-0.13163429290220965
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { struct path * path; 
if (key == NULL || key->payload.data == NULL) return;

path = (struct path *) & key->payload.data[big_key_path];

if (key_payload_reserve(key, 0) != 0) return;

if (key_is_instantiated(key) && key->payload.data[big_key_len] > 0 && (size_t) key->payload.data[big_key_len] <= BIG_KEY_FILE_THRESHOLD) {
    vfs_truncate(path, 0);
}
}",161,-30.308444806946916,-0.18825120998103675
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { if (key == NULL) return; 
struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; 
key_payload_reserve ( key , 0 ) ; 
if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD && path != NULL) vfs_truncate ( path , 0 ) ; }",125,-12.480776261701527,-0.09984621009361222
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) { key_payload_reserve ( key , 0 ) ; vfs_truncate ( path , 0 ) ; } }",109,-3.2873660721589806,-0.030159321762926426
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; 
if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > 0 && ( size_t ) key -> payload . data [ big_key_len ] <= BIG_KEY_FILE_THRESHOLD ) {
    key_payload_reserve ( key , 0 ) ;
    vfs_truncate ( path , 0 ) ;
} 
}",138,-12.084642993509155,-0.08756987676455909
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; if ( key_is_instantiated ( key ) && key -> payload . data [ big_key_len ] > 0 && ( size_t ) key -> payload . data [ big_key_len ] <= BIG_KEY_FILE_THRESHOLD ) { 
    key_payload_reserve ( key , 0 ) ;
    vfs_truncate ( path , 0 ) ; 
} }",131,-15.350063177227947,-0.1171760547879996
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; 
    if (key->payload.data[big_key_len] != 0 && key->payload.data[big_key_len] <= BIG_KEY_FILE_THRESHOLD) {
        key_payload_reserve ( key , 0 ) ; 
        if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ;
    }
}",163,-16.709157779341496,-0.10251017042540794
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { 
    struct path * path;
    size_t fileSize;

    if(key == NULL) 
        return;

    path = ( struct path * ) & key -> payload . data [ big_key_path ] ; 
    fileSize = ( size_t ) key -> payload . data [ big_key_len ];

    key_payload_reserve ( key , 0 ) ; 
    if ( key_is_instantiated ( key ) && fileSize > BIG_KEY_FILE_THRESHOLD )
        vfs_truncate ( path , 0 ) ; 
}",152,-28.79537865259999,-0.18944328060921045
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { if (key == NULL) return; struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD && path != NULL) vfs_truncate ( path , 0 ) ; }",119,-6.1087112849494,-0.051333708276885714
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { struct path * path; size_t key_length; if ( key_is_instantiated ( key ) ) { path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_length = ( size_t ) key -> payload . data [ big_key_len ] ; if ( key_length > 0 && key_length <= BIG_KEY_FILE_THRESHOLD ) { key_payload_reserve ( key , 0 ) ; vfs_truncate ( path , 0 ) ; } } }",136,-15.664683100281396,-0.11518149338442203
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; key_payload_reserve ( key , 0 ) ; }",107,-7.7102832195836415,-0.07205872167835178
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; if ( key_payload_reserve ( key , 0 ) && key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD && path) vfs_truncate ( path , 0 ) ; }",109,-11.406476910768884,-0.10464657716301728
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; if ( key_is_instantiated ( key )) { size_t len = ( size_t ) key -> payload . data [ big_key_len ] ; if ( len > 0 && len <= BIG_KEY_FILE_THRESHOLD ) { key_payload_reserve ( key , 0 ) ; vfs_truncate ( path , 0 ) ; } } }",123,-11.509944048076306,-0.09357678087866916
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke(struct key *key) {
    struct path *path = (struct path *) &key->payload.data[big_key_path];
    size_t key_len = (size_t) key->payload.data[big_key_len];
    key_payload_reserve(key, 0);
    if (key_is_instantiated(key) && key_len > BIG_KEY_FILE_THRESHOLD && key_len <= MAX_FILE_SIZE) {
        vfs_truncate(path, 0);
    }
}",140,-17.916479278568094,-0.1279748519897721
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { 
    struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; 
    
    if (key->payload.data[big_key_len] != 0 && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) {
        key_payload_reserve ( key , 0 ) ; 
        if ( key_is_instantiated ( key ) )
            vfs_truncate ( path , 0 ) ; 
    }
}",146,-18.778793102973594,-0.12862187056831229
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { 
  struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; 
  if (key && key->payload.data && (size_t)key->payload.data[big_key_len] > BIG_KEY_FILE_THRESHOLD) {
    key_payload_reserve ( key , 0 ) ;
    if ( key_is_instantiated ( key ) ) { 
      vfs_truncate ( path , 0 ) ;
    }
  }
}",141,-19.583873022086294,-0.1388927164686971
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; if ( key_is_instantiated ( key ) ) { if ( ( size_t ) key -> payload . data [ big_key_len ] > 0 && ( size_t ) key -> payload . data [ big_key_len ] <= BIG_KEY_FILE_THRESHOLD ) key_payload_reserve ( key , 0 ) ; else if ( ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; } }",163,-11.7354329136023,-0.0719965209423454
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { 
  if ( key != NULL ) {
     struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; 
     key_payload_reserve ( key , 0 ) ; 
     if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) 
        vfs_truncate ( path , 0 ) ; 
  }
}",133,-14.3869014237853,-0.10817219115628045
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD && path != NULL && !IS_ERR(path)) vfs_truncate ( path , 0 ) ; }",119,-11.40604082444019,-0.09584908255832092
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { 
	if (key != NULL) {
		struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; 
		key_payload_reserve ( key , 0 ) ; 
		if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) 
			vfs_truncate ( path , 0 ) ; 
	}
}",138,-8.863046264624295,-0.0642249729320601
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) { key_payload_reserve ( key , 0 ) ; vfs_truncate ( path , 0 ) ; } }",109,-3.344352897239641,-0.03068213667192331
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) { if ( key_payload_reserve ( key , 0 ) != -EINVAL ) vfs_truncate ( path , 0 ) ; } }",116,-12.245320447495498,-0.10556310730599568
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD && path != NULL ) vfs_truncate ( path , 0 ) ; }",111,-5.432553967914689,-0.04894192763887108
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { 
    if (key == NULL) {
        return;
    }
    struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; 
    key_payload_reserve ( key , 0 ) ; 
    if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) {
        if (path != NULL) {
            vfs_truncate ( path , 0 ) ;
        }
    }
}",151,-10.641126051749753,-0.07047103345529637
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { 
    struct path * path;
    int path_len;
    
    if(key == NULL) {
        return;
    }
    
    path = ( struct path * ) & key -> payload . data [ big_key_path ] ; 
    path_len = key -> payload . data [ big_key_len ];
    
    if (path_len <= 0 || path_len > BIG_KEY_FILE_THRESHOLD) {
        return;
    }
    
    key_payload_reserve ( key , 0 ) ; 
    if ( key_is_instantiated ( key ) ) {
        vfs_truncate ( path , 0 ) ; 
    }
}",181,-26.368025152191393,-0.1456796969734331
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) { if ( key_payload_reserve ( key , 0 ) ) {  vfs_truncate ( path , 0 ) ; } else {  /* handle error */ } } }",122,-20.665917359247103,-0.16939276523973035
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > 0 && ( size_t ) key -> payload . data [ big_key_len ] <= BIG_KEY_FILE_THRESHOLD ) { key_payload_reserve ( key , 0 ) ; vfs_truncate ( path , 0 ) ; } }",129,-4.726187813925095,-0.03663711483662864
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","

void big_key_revoke ( struct key * key ) { 
   struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; 
   if (key != NULL && key -> payload.data != NULL) {
      key_payload_reserve ( key , 0 ) ; 
      if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) 
         vfs_truncate ( path , 0 ) ; 
   }
}",142,-18.652882744432134,-0.1313583291861418
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD && path != NULL ) vfs_truncate ( path , 0 ) ; }",111,-5.432553967914689,-0.04894192763887108
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; if(key->payload.data[big_key_path] != NULL){ key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; } }",126,-11.28411316966058,-0.08955645372746493
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { struct path * path; size_t len; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) ) { path = ( struct path * ) & key -> payload . data [ big_key_path ] ; len = ( size_t ) key -> payload . data [ big_key_len ] ; if (len > 0 && len <= BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; } }",126,-12.592986339592194,-0.09994433602850948
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > 0 && ( size_t ) key -> payload . data [ big_key_len ] <= BIG_KEY_FILE_THRESHOLD ) key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }",169,-6.7830836314577985,-0.040136589535253245
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; if ( key_payload_reserve ( key , 0 ) && key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }",107,-5.975282942130524,-0.05584376581430396
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) { key_payload_reserve ( key , 0 ) ; vfs_truncate ( path , 0 ) ; } }",109,-3.2940400335760995,-0.03022055076675321
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { 
	if (key == NULL) return;
	struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; 
	key_payload_reserve ( key , 0 ) ; 
	if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD && path != NULL) 
		vfs_truncate ( path , 0 ) ; 
}",136,-12.841150725328307,-0.09442022592153167
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; key_payload_reserve ( key , 0 ) ; if ( key_is_instantiated ( key ) && ( size_t ) key -> payload . data [ big_key_len ] > BIG_KEY_FILE_THRESHOLD ) vfs_truncate ( path , 0 ) ; }
Fixed code:","
void big_key_revoke ( struct key * key ) { struct path * path = ( struct path * ) & key -> payload . data [ big_key_path ] ; 
if (key_is_instantiated(key) && (size_t)key->payload.data[big_key_len] > BIG_KEY_FILE_THRESHOLD && is_valid_path(path)) {
    key_payload_reserve(key, 0);
    vfs_truncate(path, 0);
} }",123,-21.983141944752507,-0.17872473125815047
