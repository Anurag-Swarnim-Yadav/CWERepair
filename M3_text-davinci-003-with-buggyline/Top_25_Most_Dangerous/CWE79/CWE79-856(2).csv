Original code,Plausible Program,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",832,-3.0542874733933414,-0.0036710185978285352
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000""; else if(s_poll_interval.match(/[^0-9]/)) s_poll_interval = ""3000""; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",862,-14.864535327801887,-0.01724424051949175
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",832,-3.0542874733933414,-0.0036710185978285352
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(function() { checkSession(); }, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",836,-5.429927370577756,-0.00649512843370545
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",832,-5.081215014064611,-0.006107229584212273
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",832,-2.9292365441542305,-0.003520717000185373
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""var interval = parseInt(%s, 10); //Added to sanitize input\ntimerID = setInterval(checkSession, interval);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; <StartBug> //Added to sanitize input\ns_poll_interval = s_poll_interval.replace(/[^0-9]/g, '');\n<EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",897,-38.64014272376414,-0.04307708218925768
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""var pollInterval = parseInt('%s');\\n"" ""timerID = setInterval(\'checkSession()\', pollInterval);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; s_poll_interval = apr_pstrdup(r->pool, s_poll_interval); <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",876,-17.260065416181536,-0.019703271023038284
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval('checkSession()', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) { s_poll_interval = ""3000"" ; } else { s_poll_interval = apr_pstrdup(r->pool, s_poll_interval); } <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",863,-11.95577253202098,-0.01385373410431168
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",832,-2.9292365441542305,-0.003520717000185373
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",832,-3.0542874733933414,-0.0036710185978285352
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",832,-2.9292365441542305,-0.003520717000185373
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",811,-5.582618739697704,-0.0068836236001204735
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin || /<[^>]*>/.test(e.data)) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",846,-12.099178929754244,-0.014301629940607853
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(function(){checkSession();}, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",835,-6.508653969921787,-0.007794795173559027
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",832,-2.9292365441542305,-0.003520717000185373
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) { s_poll_interval = ""3000"" ; }  <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",835,-11.198322754240987,-0.013411164975138907
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" \<StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" \<EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""\<StartBug> // Add input validation \<EndBug> ""if (e.origin !== targetOrigin || !/^(changed|unchanged)$/.test(e.data)) { \<StartBug> // Check origin and data to prevent XSS \<EndBug> ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; \<StartBug> if ( s_poll_interval == NULL ) \<EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",886,-44.05035180511644,-0.04971823002834813
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(function(){checkSession()}, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",835,-5.243345439873365,-0.0062794556166148085
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",832,-3.0020621975084074,-0.003608247833543759
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL || strstr(s_poll_interval, ""\'"")) return DONE; <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",849,-18.609009194373773,-0.021918738744845432
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",832,-3.0020621975084074,-0.003608247833543759
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s, true);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""<StartBug> return; <EndBug>\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""<StartBug>window.addEventListener(\'message\', receiveMessage, false, true);<EndBug>\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",832,-21.94208406602126,-0.02637269719473709
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval != NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",832,-4.006408546074672,-0.004815394887108981
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",832,-3.0267726496590743,-0.003637947896224849
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",832,-3.984802008214911,-0.004789425490642922
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }</EndBug>
Fixed code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(function() { checkSession() }, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }</EndBug>",1672,-18.99575591828887,-0.01136109803725411
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" <StartBug> ""if (e.origin.indexOf(targetOrigin) == -1) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" <EndBug> ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",846,-13.486613447808288,-0.0159416234607663
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000""; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",827,-7.715201871719592,-0.009329143738475928
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""<StartBug> ""return;\\n"" <EndBug> ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""<StartBug> window.addEventListener(\'message\', receiveMessage, { once: true });\\n"" <EndBug> ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",850,-17.126283447472453,-0.020148568761732297
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",832,-3.0267726496590743,-0.003637947896224849
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",832,-4.826486586357692,-0.0058010656086029955
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) { s_poll_interval = ""3000""; s_poll_interval = escape(s_poll_interval); } <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",849,-8.590128049831147,-0.010117936454453648
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { 
oidc_debug ( r , ""enter"" ) ; 
const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" <StartBug> ""if (e.origin !== targetOrigin && e.data.indexOf('<') !== -1) {\\n"" <EndBug> ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; 
char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; 
apr_uri_t uri ; 
apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; 
char * p = strstr ( origin , uri . path ) ; 
* p = '\\0' ; 
const char * op_iframe_id = ""openidc-op"" ; 
const char * session_state = oidc_session_get_session_state ( r , session ) ; 
if ( session_state == NULL ) { 
oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; 
return DONE ; 
} 
char * s_poll_interval = NULL ; 
oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; 
if ( s_poll_interval == NULL ) 
s_poll_interval = ""3000"" ; 
const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; 
java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; 
return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; 
}",887,-21.86071660580868,-0.024645678247811362
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(function(){ checkSession() }, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",835,-7.040681118259987,-0.0084319534350419
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(function(){checkSession();}, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" <StartBug> ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" <EndBug> ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) { s_poll_interval = ""3000""; } <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",844,-17.936469800744465,-0.02125174147007638
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(function() { checkSession(); }, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) { s_poll_interval = ""3000""; } <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",837,-6.6697314613287055,-0.00796861584388137
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) { s_poll_interval = ""3000""; } else { // Escape user input before using it to prevent XSS s_poll_interval = escape_string(r->pool, s_poll_interval); } <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",869,-25.2527885201133,-0.029059595535228192
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) {
   s_poll_interval = ""3000"" ;
} 
s_poll_interval = oidc_util_escape_string(r, s_poll_interval); <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",865,-17.65501794930821,-0.020410425374922787
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(function(){checkSession();}, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",835,-5.2634056329085,-0.006303479799890419
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",832,-3.165168908755179,-0.0038042895537922826
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",832,-3.0807528230729377,-0.0037028279123472807
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) { s_poll_interval = ""3000"" ; } else { s_poll_interval = apr_pstrcat(r->pool, ""\'"", s_poll_interval, ""\'"", NULL); } <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",869,-9.291949470231145,-0.010692692140657245
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(function(){checkSession()}, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; 
const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; 
java_script = apr_psprintf ( r -> pool , java_script , 
origin , client_id , session_state , op_iframe_id , s_poll_interval , escapeJS(redirect_uri) , escapeJS(redirect_uri) ) ; 
return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; 
} 

function escapeJS(text) {
  text = text.replace(/[\\]/g, '\\\\');
  text = text.replace(/[\""]/g, '\\\""');
  text = text.replace(/[\/]/g, '\\/');
  text = text.replace(/[\b]/g, '\\b');
  text = text.replace(/[\f]/g, '\\f');
  text = text.replace(/[\n]/g, '\\n');
  text = text.replace(/[\r]/g, '\\r');
  text = text.replace(/[\t]/g, '\\t');
  return text;
}
<EndBug>",1029,-42.42962137133982,-0.041233840011020234
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",832,-3.165168908755179,-0.0038042895537922826
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) { s_poll_interval = ""3000"";} <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",833,-7.411368235479783,-0.008897200762880891
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",832,-3.165168908755179,-0.0038042895537922826
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL || s_poll_interval.length == 0 ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",843,-9.171928645890333,-0.010880105155267298
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> timerID = window.setInterval(function() { checkSession(); }, %s); <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""window.clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) { s_poll_interval = ""3000"";} <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",837,-21.51802465019988,-0.025708512126881577
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL || s_poll_interval == NULL ) { oidc_strerror_fatal ( r , ""timer interval is not set. "" ) ; <EndBug> } else { s_poll_interval = ""3000"" ; } const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",869,-50.700861066285064,-0.05834391377017844
