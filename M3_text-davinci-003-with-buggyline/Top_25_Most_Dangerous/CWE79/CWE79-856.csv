Original code,Plausible Program,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(function () {checkSession();}, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",843,-7.788996422450552,-0.009239616159490571
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(function(){ checkSession() }, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",842,-7.833031916688402,-0.00930288826210024
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," 

static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(function(){checkSession();}, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",845,-9.214374915449394,-0.010904585698756679
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," 

static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(function() { checkSession(); }, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; 
<StartBug> 
if ( s_poll_interval == NULL ) {
 s_poll_interval = ""3000"";
}
<EndBug> 
const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",856,-20.14770515410663,-0.02353703873143298
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",839,-2.65562390223179,-0.0031652251516469487
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) { s_poll_interval = ""3000""; } <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",840,-4.357973306949047,-0.005188063460653627
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",839,-3.3816704807897,-0.0040305965206075085
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",839,-3.477118148637378,-0.00414436012948436
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" ""<StartBug> var poll_interval = %s;\n"" ""if (poll_interval.match(/^[0-9]+$/)) {\n"" ""timerID = setInterval('checkSession()', poll_interval);\n } \n <EndBug>"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) { s_poll_interval = ""3000""; } else { if (!s_poll_interval.match(/^[0-9]+$/)) { s_poll_interval = ""3000""; } } <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",916,-33.721495435287956,-0.03681385964551087
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) { s_poll_interval = ""3000"" ; } s_poll_interval = apr_pstrdup(r->pool, s_poll_interval); <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",866,-9.429083344733494,-0.010888087003156459
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) {
 oidc_debug ( r , ""enter"" ) ;
 const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" 
 ""var targetOrigin  = \'%s\';\\n"" 
 ""var message = \'%s\' + \' \' + \'%s\';\\n"" 
 ""\tvar timerID;\\n"" 
 ""\\n"" 
 ""function checkSession() {\\n"" 
 ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" 
 ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" 
 ""win.postMessage( message, targetOrigin);\\n"" 
 ""}\\n"" 
 ""\\n"" 
 ""function setTimer() {\\n"" 
 ""checkSession();\\n"" 
 ""<StartBug> ""timerID = setInterval(function(){checkSession()}, %s); \\n"" <EndBug>
 ""}\\n"" 
 ""\\n"" 
 ""function receiveMessage(e) {\\n"" 
 ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" 
 ""if (e.origin !== targetOrigin ) {\\n"" 
 ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" 
 ""return;\\n"" 
 ""}\\n"" 
 ""if (e.data != \'unchanged\') {\\n"" 
 ""clearInterval(timerID);\\n"" 
 ""if (e.data == \'changed\') {\\n"" 
 ""\t\twindow.location.href = \'%s?session=check\';\\n"" 
 ""} else {\\n"" 
 ""\t\t     window.location.href = \'%s?session=logout\';\\n"" 
 ""}\\n"" 
 ""}\\n"" 
 ""}\\n"" 
 ""\\n"" 
 ""window.addEventListener(\'message\', receiveMessage, false);\\n"" 
 ""\\n"" 
 ""</script>\\n"" ;
 char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ;
 apr_uri_t uri ;
 apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ;
 char * p = strstr ( origin , uri . path ) ;
 * p = '\\0' ;
 const char * op_iframe_id = ""openidc-op"" ;
 const char * session_state = oidc_session_get_session_state ( r , session ) ;
 if ( session_state == NULL ) {
  oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ;
  return DONE ;
 }
 char * s_poll_interval = NULL ;
 oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ;
 <StartBug>
 if ( s_poll_interval == NULL ) {
  s_poll_interval = ""3000"" ;
 }
 <EndBug>
 const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ;
 java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , 
   <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , 
   <EndBug> redirect_uri ) ;
 return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ;
}",945,-35.86838600035076,-0.0379559640215352
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(function(){checkSession();}, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",843,-5.830638220136838,-0.006916534068964221
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",839,-2.65562390223179,-0.0031652251516469487
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }

The code between <StartBug> and <EndBug> has been changed from:
""timerID = setInterval(\'checkSession()\', %s);\n""

to:
""timerID = setInterval(checkSession, %s);\n""",901,-13.950385830888754,-0.01548322511752359
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",839,-3.3816704807897,-0.0040305965206075085
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",839,-3.477118148637378,-0.00414436012948436
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",839,-2.6668031547946893,-0.003178549648146233
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",839,-2.648721152523092,-0.0031569977980013017
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) { s_poll_interval = ""3000"" ; } else { s_poll_interval = util_encode_html ( r , s_poll_interval ) ; } <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",868,-21.345925540609343,-0.02459208011590938
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin || /[\\S\\s]/.test(e.data)) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",853,-18.269186535592425,-0.021417569209369783
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",818,-6.446226438942915,-0.007880472419245617
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) { s_poll_interval = ""3000"" ; } <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",842,-7.085809921144696,-0.008415451212760921
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""<StartBug> window.addEventListener(\'message\', receiveMessage, false); \n s_poll_interval = s_poll_interval.replace(/[^0-9]/g, ''); \n if ( s_poll_interval == NULL || isNaN(s_poll_interval)) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",672,-28.42160400062449,-0.042294053572357874
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",839,-2.648721152523092,-0.0031569977980013017
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""var interval = parseInt(\""%s\"");\\ntimerID = setInterval(function(){ checkSession(); }, interval);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",855,-21.108735315925838,-0.024688579316872326
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",839,-2.648721152523092,-0.0031569977980013017
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(checkSession, %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",815,-4.189720970728915,-0.005140761927274743
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",839,-2.648721152523092,-0.0031569977980013017
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",839,-2.6668031547946893,-0.003178549648146233
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(function(){checkSession()}, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) {  s_poll_interval = ""3000""; } <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",844,-10.802786365155082,-0.012799509911321187
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(function(){checkSession()}, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.add",1320,-8.132594958389287,-0.006161056786658551
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" ""<StartBug>timerID = setInterval(function() { checkSession(); }, %s);<EndBug>\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",827,-13.525651043793546,-0.016355079859484336
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(function() {checkSession();}, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",843,-5.718612378925116,-0.0067836445776098655
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",840,-3.96972527095465,-0.004725863417803155
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }

The code between <StartBug> and <EndBug> is now fixed and reads as follows: ""timerID = setInterval(checkSession, %s);\n""",878,-19.142758772059345,-0.021802686528541396
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(function() { checkSession(); }, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",843,-5.679419777589228,-0.006737152761078562
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(function() { checkSession(); }, %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",819,-6.474093295907497,-0.007904875819178873
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",839,-3.7575487260896767,-0.0044786039643500315
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",839,-2.6331107739833506,-0.003138391864104113
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(function(){checkSession();}, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) { s_poll_interval = ""3000""; } <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",843,-6.9793752674337055,-0.00827921146789289
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",840,-3.9971284076727502,-0.004758486199610417
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(function(){ checkSession(); }, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",843,-6.626204945936944,-0.007860266839782852
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(function() { checkSession(); }, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",843,-6.563115028293641,-0.0077854270798263835
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" ""\t\ttimerID = setInterval('checkSession()', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , apr_jsontok_quote_string(r->pool, s_poll_interval, NULL, 0), redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",837,-25.724457134588395,-0.03073411844036845
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",839,-2.6331107739833506,-0.003138391864104113
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(function(){checkSession();}, %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",818,-5.881884252615198,-0.00719056754598435
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval('checkSession()', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , <StartBug>apr_jsontoken_escape_string(r->pool, NULL, s_poll_interval, 0),""</EndBug> redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",843,-31.987624002403997,-0.037944986954215894
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",839,-3.7575487260896767,-0.0044786039643500315
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(function(){checkSession()}, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",842,-5.042354853172447,-0.005988544956261814
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",839,-3.573806125293978,-0.0042596020563694615
