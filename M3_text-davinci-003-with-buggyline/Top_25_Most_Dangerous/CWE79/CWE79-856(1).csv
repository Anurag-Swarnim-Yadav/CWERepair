Original code,Plausible Program,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(function(){checkSession();}, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",843,-5.000470349303351,-0.005931756048995671
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",840,-2.419612639832879,-0.0028804912378962845
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" <StartBug> ""if (e.origin.toString().replace(/^.*?:\/\//g, \'\') !== targetOrigin.toString().replace(/^.*?:\/\//g, \'\') ) {\\n"" <EndBug> ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",865,-21.637820444632627,-0.025014821323274712
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",840,-2.419612639832879,-0.0028804912378962845
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) { s_poll_interval = ""3000"" ; } else { s_poll_interval = oidc_util_escape_string(r, s_poll_interval); } <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",871,-9.124120230738354,-0.010475453766634162
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(function() { checkSession(); }, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",844,-5.350697882458115,-0.006339689434192079
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",840,-2.45871964631162,-0.002927047197990024
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(function() { checkSession(); }, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",844,-5.350697882458115,-0.006339689434192079
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) { s_poll_interval = ""3000""; } <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",841,-5.1830246168496314,-0.0061629305788937355
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",840,-2.419612639832879,-0.0028804912378962845
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: unauthorized origin\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",836,-9.774319476279375,-0.011691769708468152
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",840,-2.419612639832879,-0.0028804912378962845
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(function(){ checkSession(); }, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",843,-5.766064687420199,-0.006839934386026333
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) { s_poll_interval = ""3000"" ; } <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",842,-5.749318131060383,-0.006828168801734421
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug>if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ;<EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug>session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",840,-12.829650196523945,-0.015273393091099935
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(function(){checkSession()}, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" <StartBug> ""if (e.origin !== encodeURI(targetOrigin)) {\\n"" <EndBug> ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",854,-15.746521493457573,-0.01843854975814704
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; s_poll_interval = escape_javascript_string(r->pool, s_poll_interval); <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",864,-14.37616259985033,-0.016639077083160106
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",840,-2.436772977064132,-0.0029009202107906336
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" <StartBug> ""if (e.origin !== targetOrigin || !e.data.startsWith('unchanged') || !e.data.startsWith('changed') ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" <EndBug> ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",873,-12.382526553832408,-0.014183879214011923
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",840,-2.436772977064132,-0.0029009202107906336
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",840,-2.5270620646319824,-0.003008407219799979
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",840,-2.436772977064132,-0.0029009202107906336
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""setInterval(function() {checkSession();}, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",841,-10.85396216166987,-0.012906019217205552
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",840,-2.436772977064132,-0.0029009202107906336
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(function(){checkSession();}, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",843,-5.133940315056654,-0.006090083410506113
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",840,-3.966804621491384,-0.00472238645415641
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , apr_pstrcat(r->pool, ""\"""", s_poll_interval, ""\"""", NULL), redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",858,-10.705936295330254,-0.012477781229988641
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) { s_poll_interval = ""3000""; } <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",841,-5.140309947473434,-0.006112140246698495
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""<StartBug>window.addEventListener(\'message\', function(e) { receiveMessage(e); }, false);<EndBug>\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",855,-11.389348200859924,-0.013320875088725058
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",840,-2.436772977064132,-0.0029009202107906336
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(function(){checkSession();}, %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",819,-6.930050222359555,-0.0084615997831008
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; 
	const char * sanitized_poll_interval = apr_pescape_html(r->pool, s_poll_interval); <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , sanitized_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",873,-25.799778241863077,-0.029553010586326547
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",840,-2.499184091448829,-0.002975219156486701
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",840,-4.106930092596905,-0.004889202491186791
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",840,-3.918098724647799,-0.004664403243628332
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""<StartBug> if (e.origin === targetOrigin ) {<EndBug> ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""<StartBug>}<EndBug> ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",820,-13.536529407234744,-0.016507962691749686
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession.bind(null), %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) { s_poll_interval = ""3000"" ; } <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",846,-11.341542568940408,-0.01340607868669079
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" <StartBug> ""return;\\n"" <EndBug> ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",848,-4.70861630130879,-0.005552613562864139
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession.bind(null), %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",1688,-7.465175752920788,-0.004422497483957813
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",832,-7.791555921960553,-0.00936485086774105
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval( checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",840,-6.444081644868618,-0.007671525767700736
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: Invalid origin.\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",837,-7.1475469113697105,-0.008539482570334182
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(function(){ checkSession(); }, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",843,-7.543168094382984,-0.008948004856919316
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",840,-2.499184091448829,-0.002975219156486701
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",840,-3.918098724647799,-0.004664403243628332
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(function() {checkSession();}, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",844,-6.253755945599331,-0.0074096634426532365
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",840,-2.515086607435649,-0.0029941507231376775
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: Invalid origin\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",836,-6.709683731092355,-0.0080259374773832
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; <EndBug> const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",840,-3.754199189050837,-0.004469284748870044
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(\'checkSession()\', %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" ""var targetOrigin  = \'%s\';\\n"" ""var message = \'%s\' + \' \' + \'%s\';\\n"" ""\tvar timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" ""console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" ""function setTimer() {\\n"" ""checkSession();\\n"" <StartBug> ""timerID = setInterval(checkSession, %s);\\n"" <EndBug> ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\twindow.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t     window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; <StartBug> if ( s_poll_interval == NULL ) <EndBug> s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , <StartBug> session_state , op_iframe_id , s_poll_interval , redirect_uri , <EndBug> redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",840,-3.8707990113810795,-0.004608094061167952
