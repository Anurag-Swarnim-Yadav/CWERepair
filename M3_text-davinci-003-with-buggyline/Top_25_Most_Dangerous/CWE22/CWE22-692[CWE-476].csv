Original code,Plausible Program,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; if(remote_dev){ pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; }<EndBug> }",184,-10.815939278643638,-0.05878227868828064
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:","
static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) remote_dev = xop -> dst_dev ; else remote_dev = xop -> src_dev ; if (remote_dev != NULL) { <EndBug> pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; }<EndBug>}",176,-10.061921044993003,-0.057170005937460244
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," 

static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { 
  struct se_device * remote_dev ; 
  if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) 
    remote_dev = xop -> dst_dev ; 
  else 
    remote_dev = xop -> src_dev ; 
  if (remote_dev) {
    pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; 
    target_undepend_item ( & remote_dev -> dev_group . cg_item ) ;
  }
}",190,-14.123509171281903,-0.07433425879622053
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) remote_dev = xop -> dst_dev ; else remote_dev = xop -> src_dev ;  <EndBug> if (remote_dev) { pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; } }",170,-7.869655798679398,-0.046292092933408226
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) remote_dev = xop -> dst_dev ; else remote_dev = xop -> src_dev ; if (remote_dev != NULL) { <EndBug> pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; } <EndBug>}",175,-5.3924148011950015,-0.030813798863971436
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> if ( xop -> dst_dev != NULL ) { remote_dev = xop -> dst_dev ; } <EndBug> else <StartBug> if ( xop -> src_dev != NULL ) { remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; } <EndBug>}",203,-10.505932670787496,-0.051753362910283235
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:","

static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { struct se_device * remote_dev ; if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) remote_dev = xop -> dst_dev ; else remote_dev = xop -> src_dev ; if(remote_dev != NULL) { pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; } }",165,-10.847460433027534,-0.06574218444259111
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:","
static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { 
struct se_device * remote_dev ; 
if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) {
	if (xop->dst_dev)
		remote_dev = xop -> dst_dev ; 
	else
		return;
	}
else {
	if (xop->src_dev)
		remote_dev = xop -> src_dev ; 
	else
		return;
	} 
pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; }",216,-19.933199342466878,-0.09228333028919851
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) { remote_dev = xop -> dst_dev ; } else { remote_dev = xop -> src_dev ; } if (remote_dev) { // add this line to check if remote_dev is not NULL pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; } <EndBug>}",186,-21.662757963551513,-0.11646644066425545
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:","
static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) remote_dev = xop -> dst_dev ; else remote_dev = xop -> src_dev ; if (remote_dev) { <EndBug> pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>} }",174,-8.3041055476831,-0.04772474452691437
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) remote_dev = xop -> dst_dev ; else remote_dev = xop -> src_dev ; <EndBug> if (remote_dev) { pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; } }",169,-4.4527614043034,-0.026347700617179882
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { struct se_device * remote_dev ; if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) remote_dev = xop -> dst_dev ; else remote_dev = xop -> src_dev ; if ( remote_dev != NULL ) { pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; } }",163,-6.5375013646552995,-0.04010737033530858
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) remote_dev = xop -> dst_dev ; else remote_dev = xop -> src_dev ; if (remote_dev != NULL) { <EndBug> pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug> } }",175,-6.062362763968002,-0.03464207293696001
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:","
static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) remote_dev = xop -> dst_dev ; else remote_dev = xop -> src_dev ; if (remote_dev != NULL) { <EndBug> pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
}",177,-8.307216362270001,-0.046933425775536726
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:","
static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) remote_dev = xop -> dst_dev ; else remote_dev = xop -> src_dev ; if(remote_dev != NULL) { <EndBug> pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
}",177,-9.688016280578099,-0.054734555257503384
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> if (xop->dst_dev) remote_dev = xop -> dst_dev ; else return; <EndBug> else <StartBug> if (xop->src_dev) remote_dev = xop -> src_dev ; else return; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}",202,-8.401034602381996,-0.04158928020981186
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) remote_dev = xop -> dst_dev ; else remote_dev = xop -> src_dev ; <EndBug> if (remote_dev) { pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; } }",169,-4.4600830532460005,-0.026391023983704145
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," 
static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { 
struct se_device * remote_dev ;
if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) 
  remote_dev = xop -> dst_dev ;
else { 
  if (xop->src_dev != NULL) {
    remote_dev = xop -> src_dev ;
    pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ;
    target_undepend_item ( & remote_dev -> dev_group . cg_item ) ;
  }
 }
}",190,-25.4998463857292,-0.13420971781962737
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) remote_dev = xop -> dst_dev ; else remote_dev = xop -> src_dev ; if (remote_dev) { <EndBug> pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>} }",173,-6.110731490171899,-0.0353221473420341
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:","
static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) remote_dev = xop -> dst_dev ; else remote_dev = xop -> src_dev ; if (remote_dev) { pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; } <EndBug>}",170,-7.714716342624205,-0.04538068436837767
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:","
static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) remote_dev = xop -> dst_dev ; else remote_dev = xop -> src_dev ; if(remote_dev != NULL) { <EndBug> pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; } <EndBug>}",176,-7.805131730395002,-0.044347339377244326
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { struct se_device * remote_dev ; if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) { remote_dev = xop -> dst_dev ; } else { remote_dev = xop -> src_dev ; } if (remote_dev) { pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; } }",165,-5.601167694143295,-0.03394647087359573
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:","

static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { 
struct se_device * remote_dev ;  
if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) 
remote_dev = xop -> dst_dev ; 
else 
remote_dev = xop -> src_dev ; 
if (remote_dev != NULL) {
    pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; 
    target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; 
}
}",185,-17.758256818554088,-0.09599057739758966
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) remote_dev = xop -> dst_dev ; else remote_dev = xop -> src_dev ; <EndBug> if (remote_dev != NULL) { pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; } <EndBug> }",175,-6.9086319427697,-0.039477896815826856
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," 
static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { 
struct se_device * remote_dev ; 
if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) 
{ 
if (xop->dst_dev != NULL)
{
remote_dev = xop -> dst_dev ; 
}
} 
else 
{ 
if (xop->src_dev != NULL)
{
remote_dev = xop -> src_dev ; 
pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; 
target_undepend_item ( & remote_dev -> dev_group . cg_item ) ;
}
}
}",214,-16.9019376080355,-0.07898101685997896
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," 
static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) remote_dev = xop -> dst_dev ; else remote_dev = xop -> src_dev ; <EndBug> if (remote_dev) { pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; } <EndBug> }",175,-9.572540974176999,-0.05470023413815428
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) remote_dev = xop -> dst_dev ; else remote_dev = xop -> src_dev ; if(remote_dev == NULL) return; <EndBug> pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; }",171,-8.265503329389604,-0.04833627678005616
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) remote_dev = xop -> dst_dev ; else remote_dev = xop -> src_dev ; if(remote_dev){ <EndBug> pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; } }<EndBug>",172,-9.300233555055202,-0.054071125320088384
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) { remote_dev = xop -> dst_dev ; } else { remote_dev = xop -> src_dev ; } <EndBug> if (remote_dev != NULL) { pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; } <EndBug> }",179,-10.159182110021856,-0.056755207318557856
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { struct se_device * remote_dev ; if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) { if (xop->dst_dev != NULL) { remote_dev = xop -> dst_dev ; } else { return; } } else { if (xop->src_dev != NULL) { remote_dev = xop -> src_dev ; } else { return; } } pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; }",194,-5.6080858095445985,-0.028907658812085558
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { struct se_device * remote_dev ; if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) remote_dev = xop -> dst_dev ; else remote_dev = xop -> src_dev ; if (remote_dev) { pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; } }",161,-4.790705243250904,-0.029755933187893813
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; if ( remote_dev != NULL ) { <EndBug> else <StartBug> remote_dev = xop -> src_dev ; if ( remote_dev != NULL ) { <EndBug> pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug> }",199,-11.129129456770197,-0.05592527365211154
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:","
static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { 
struct se_device * remote_dev ; 
if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) {
    if (xop->dst_dev)
        remote_dev = xop -> dst_dev ;
} else {
    if (xop->src_dev)
        remote_dev = xop -> src_dev ;
    pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ;
    target_undepend_item ( & remote_dev -> dev_group . cg_item ) ;
}
}",196,-13.1545450498038,-0.0671150257643051
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," 
static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) {
	struct se_device * remote_dev ;
	if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) {
		if (xop->dst_dev != NULL)
			remote_dev = xop -> dst_dev ;
		else
			return;
	} else {
		if (xop->src_dev != NULL)
			remote_dev = xop -> src_dev ;
		else
			return;
	}
	
	pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ;
	target_undepend_item ( & remote_dev -> dev_group . cg_item ) ;
}",231,-16.678032902931097,-0.07219927663606536
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) remote_dev = xop -> dst_dev ; else remote_dev = xop -> src_dev ; if (remote_dev) <EndBug> { pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; } <EndBug>}",173,-7.54720575172,-0.04362546677294798
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) remote_dev = xop -> dst_dev ; else remote_dev = xop -> src_dev ; if (remote_dev) { <EndBug> pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; } <EndBug>}",173,-5.288727342282502,-0.030570678279089606
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; if (remote_dev != NULL) { pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; } <EndBug>}",187,-4.958524496238444,-0.026516173776676172
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) remote_dev = xop -> dst_dev ; else remote_dev = xop -> src_dev ; 
if (remote_dev != NULL) {
    pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; 
    target_undepend_item ( & remote_dev -> dev_group . cg_item ) ;
} <EndBug> }",179,-15.953278089134706,-0.0891244585985179
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," 
static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev = NULL; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; if (remote_dev != NULL) { pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; } <EndBug>}",191,-8.177814703826657,-0.04281578378966836
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," 
static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) remote_dev = xop -> dst_dev ; else remote_dev = xop -> src_dev ; if (remote_dev) { <EndBug> pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; } <EndBug>}",175,-7.3958953075559,-0.04226225890031943
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; if (remote_dev != NULL) { pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; } <EndBug>}",187,-4.958524496238444,-0.026516173776676172
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ;  if ( remote_dev ){ pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; } <EndBug>}",182,-17.2909344393379,-0.09500513428207637
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) remote_dev = xop -> dst_dev ; else remote_dev = xop -> src_dev ; <EndBug> if (remote_dev != NULL) { pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; } <EndBug>}",175,-5.2852074218007,-0.03020118526743257
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:","
static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) {
 struct se_device * remote_dev ; 
 if ( xop && xop -> op_origin == XCOL_SOURCE_RECV_OP ) 
 remote_dev = xop -> dst_dev ; 
 else 
 remote_dev = xop -> src_dev ; 
 if (remote_dev) {
	pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; 
	target_undepend_item ( & remote_dev -> dev_group . cg_item ) ;
 }
}",183,-17.35928578235635,-0.09485948514948825
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:","

static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) remote_dev = xop -> dst_dev ; else remote_dev = xop -> src_dev ; if (remote_dev != NULL) { pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; } <EndBug>}",173,-7.9831826002141035,-0.0461455641630873
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:","
static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) remote_dev = xop -> dst_dev ; else remote_dev = xop -> src_dev ; if (remote_dev != NULL) { <EndBug> pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; } } <EndBug>",176,-8.186792684854497,-0.04651586752758237
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) remote_dev = xop -> dst_dev ; else remote_dev = xop -> src_dev ; if (remote_dev) { <EndBug> pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; } }",169,-5.762357751074497,-0.034096791426476314
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) { <StartBug> if (xop->dst_dev != NULL) { remote_dev = xop -> dst_dev ; <EndBug> } else { return; } } else { <StartBug> if (xop->src_dev != NULL) { remote_dev = xop -> src_dev ; <EndBug> } else { return; } } pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}",222,-11.076893183602936,-0.04989591524145467
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:","
static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) remote_dev = xop -> dst_dev ; else remote_dev = xop -> src_dev ; if(remote_dev != NULL) { <EndBug> pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; } <StartBug> else { pr_err(""Error: remote_dev is NULL!""); } <EndBug> }",196,-19.544686017362896,-0.09971778580287191
"The Original Code is vulnerable to CWE-476: NULL Pointer Dereference. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { <StartBug> struct se_device * remote_dev ; <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) <StartBug> remote_dev = xop -> dst_dev ; <EndBug> else <StartBug> remote_dev = xop -> src_dev ; pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; <EndBug>}
Fixed code:"," static void xcopy_pt_undepend_remotedev ( struct xcopy_op * xop ) { struct se_device * remote_dev ; <StartBug> if ( xop ) { <EndBug> if ( xop -> op_origin == XCOL_SOURCE_RECV_OP ) remote_dev = xop -> dst_dev ; else remote_dev = xop -> src_dev ; <StartBug> if ( remote_dev ) { <EndBug> pr_debug ( ""Calling configfs_undepend_item for"" "" remote_dev: %p remote_dev->dev_group: %p\\n"" , remote_dev , & remote_dev -> dev_group . cg_item ) ; target_undepend_item ( & remote_dev -> dev_group . cg_item ) ; } } } <EndBug>",188,-8.807825878006003,-0.0468501376489681
