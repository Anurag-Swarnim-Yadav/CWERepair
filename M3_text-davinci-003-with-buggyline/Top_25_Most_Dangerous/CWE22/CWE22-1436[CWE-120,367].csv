Original code,Plausible Program,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) {if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ;} if ( access ( spath , F_OK ) != 0 ) {if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ;}<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }",293,-11.123781644660596,-0.03796512506710101
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) - 1 , var , iface ) > sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }",201,-7.838228474097997,-0.0389961615626766
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; 
<StartBug> if ( snprintf ( spath , sizeof ( spath ) - 1 , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; }<EndBug> 

fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } 

fprintf ( fp , ""%u"" , val ) ; 

fclose ( fp ) ; 

return 0 ; }",261,-17.76374503394125,-0.0680603258005412
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:","
int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , IFNAMSIZ ) >= IFNAMSIZ ) return - 1 ; if ( access ( spath , F_OK | W_OK ) != 0 ) return - 1 ; fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to open %s for writing"" , spath ) ; return - 1 ; } if ( fprintf ( fp , ""%u"" , val ) < 0 ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; fclose ( fp ) ; return - 1 ; } fclose ( fp ) ; return 0 ; <EndBug> }",250,-31.1055099002044,-0.1244220396008176
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; 
<StartBug>if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) {
if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ;
return - 1 ;
}
if ( access ( spath , F_OK ) != 0 ) {
if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ;
return - 1 ;
}
fp = fopen ( spath , ""w"" ) ; <EndBug> if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }",302,-23.867743957062498,-0.07903226475848509
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) - 1 , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }",201,-4.2812969949541175,-0.021299985049522973
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:","int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> size_t len = snprintf ( spath , sizeof ( spath ) , var , iface ) ; if ( len >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }",206,-13.066890940823946,-0.06343150942147546
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> int snprintf_return = snprintf ( spath , sizeof ( spath ) , var , iface ) ; if ( snprintf_return >= sizeof ( spath ) || snprintf_return < 0 ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }",217,-15.114605774105597,-0.06965256117099353
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:","
int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; 
if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; 

<StartBug>
struct stat st ;
if ( stat ( spath , &st ) != 0 ) return - 1 ; 
if ( ! S_ISREG ( st.st_mode ) ) return - 1 ; 
<EndBug> 
fp = fopen ( spath , ""w"" ) ; 
if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }",236,-28.025883232809797,-0.11875374251190592
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:","
int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) - 1 , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }

The modified code is less vulnerable to CWE-120 and CWE-367. The modification is the size of the spath array. By subtracting 1 from sizeof(spath), the code will only copy up to the size of spath-1, thus avoiding buffer overflow. The code has also been modified to check the access of the spath file before opening it, which solves the TOCTOU race condition.",290,-79.19262597143288,-0.27307802059114783
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:","
int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) - 1 , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }",202,-4.854246171555001,-0.02403092164136139
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , 64 + IFNAMSIZ , var , iface ) >= 64+IFNAMSIZ ) return - 1 ;//Change the size checking part to check the size of spath which is 64 + IFNAMSIZ. if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }",226,-49.189788644044704,-0.21765393205329514
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) - 1 , var , iface ) >= sizeof ( spath ) - 1 ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }",203,-5.529921832309502,-0.02724099424783006
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," 
int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) - 1 , var , iface ) >= sizeof ( spath ) ) 
return - 1 ; 
if ( access ( spath , F_OK ) != 0 ) return - 1 ;
if ( fp = fopen ( spath , ""w"" ) ) {
 if ( name ) { 
 flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; 
 }
 fclose ( fp ) ; 
 return - 1 ; 
 }
<EndBug> 
fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }",226,-44.90672342175603,-0.19870231602546914
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) -1 , var , iface ) >= ( sizeof ( spath ) - 1 ) ) return - 1 ; if ( access ( spath , F_OK ) == 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }",205,-12.744525855016034,-0.062168418804956264
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) - 1 , var , iface ) >= sizeof ( spath ) - 1 ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fflush(fp); if(fclose(fp) == EOF) { return -1; } return 0 ; }",218,-18.760114221507205,-0.08605556982342755
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:","

int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) || access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }",195,-8.430203818158052,-0.04323181445209257
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) || snprintf ( spath , sizeof ( spath ) , var , iface ) < 0) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }",219,-12.2046818695653,-0.05572914095691918
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:","  int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) - 1 , var , iface ) >= sizeof ( spath ) ) return - 1 ; // ensure that ""spath"" is always null-terminated  if ( access ( spath , F_OK ) == 0 ) { // avoid TOCTOU race condition by using access() instead of fopen() fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; } else { return -1; }<EndBug> }",237,-51.29389517020527,-0.21642993742702646
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) - 1 , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }",201,-4.2447472517446005,-0.021118145531067663
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:","  int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; 
<StartBug>
if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) || 
 access ( spath , F_OK ) != 0 ) 
	return - 1 ;
<EndBug>
 fp = fopen ( spath , ""w"" ) ; 
if ( ! fp ) { 
	if ( name ) 
		flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; 
		return - 1 ; 
} 
fprintf ( fp , ""%u"" , val ) ; 
fclose ( fp ) ; 
return 0 ; 
}",227,-30.324177039835426,-0.13358668299486973
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ;<StartBug> if ( snprintf ( spath , sizeof ( spath ) - 1 , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fsync (fileno(fp)); // Added this line to prevent TOCTOU race condition fclose ( fp ) ; return 0 ; }",220,-25.222976483660887,-0.11464989310754949
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) - 1 , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ; fp = fopen ( spath , ""r+"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fseek(fp, 0, SEEK_END); if(fp != NULL) { fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; } <EndBug> return 0 ; }",222,-22.19775778152285,-0.0999898999167696
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) - 1 , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen_s ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf_s ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }",205,-7.899941905393903,-0.03853630197753123
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> 
if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) { 
if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; 
return - 1 ; 
} 
if ( access ( spath , F_OK ) != 0 ) { 
if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; 
return - 1 ; 
}<EndBug> 
fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { 
if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; 
return - 1 ; 
} 
fprintf ( fp , ""%u"" , val ) ; 
fclose ( fp ) ; 
return 0 ; 
}",324,-17.95792542748589,-0.05542569576384534
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," 
int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; 
<StartBug>
if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) 
return - 1 ; 
if ( access ( spath , F_OK ) != 0 ) 
return - 1 ;
if ( name ) { 
if ( snprintf ( spath , sizeof ( spath ) , name , iface ) >= sizeof ( spath ) ) 
return - 1 ; 
if ( access ( spath , F_OK ) != 0 ) 
return - 1 ; 
}<EndBug> 
fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }",276,-33.09314905540064,-0.11990271396884289
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) < 0 || snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> const char * tmp_fname = tmpnam ( NULL ) ; fp = fopen ( tmp_fname , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; rename ( tmp_fname , spath ) ; return 0 ; }",246,-27.01913304829206,-0.10983387418004902
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) || access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }",193,-5.094453377412253,-0.02639613148918266
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) - 1 , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }",201,-4.304312844488699,-0.02141449176362537
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) - 1, var , iface ) >= ( sizeof ( spath ) - 1 ) ) return - 1 ; if ( access ( spath , F_OK ) == 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; } 

The code has been fixed by reducing the size of spath by 1, and by checking if the access is equal to 0 instead of not equal to 0. This prevents a buffer overflow attack and a time-of-check time-of-use race condition.",261,-44.26823018348191,-0.1696100773313483
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) == sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ; <EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fflush ( fp ) ; fclose ( fp ) ; return 0 ; }",206,-12.386373104883504,-0.06012802478098788
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) - 1 , var , iface ) >= sizeof ( spath ) - 1 ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ; fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ;<EndBug> }",203,-12.717511941637202,-0.06264784207703056
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) - 1 , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } flock(fileno(fp),LOCK_EX); fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }",212,-10.429021940882176,-0.04919349972114234
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) - 1 , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }",201,-3.4370787789423485,-0.01709989442259875
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) > sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ; if ( fp = fopen ( spath , ""w"" ) ) { fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; if ( name ) flog ( LOG_ERR , ""set %s (%u) for %s successful"" , name , val , iface ) ; return 0 ; } else { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } <EndBug> }",231,-18.866626011524204,-0.08167370567759395
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) - 1 , var , iface ) >= sizeof ( spath ) - 1 ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }",203,-4.954831238521106,-0.02440803565773944
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," 
int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> 
if ( snprintf ( spath , sizeof ( spath ) , var , iface ) > sizeof ( spath ) ) return - 1 ;
if ( access ( spath , F_OK ) != 0 ) return - 1 ; 

fp = fopen ( spath , ""w"" ) ;
if ( ! fp ) {
if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; 
return - 1 ; 
}

struct stat file_stat;
if (fstat(fileno(fp), &file_stat) < 0) {
if ( name ) flog(LOG_ERR, ""failed to fstat %s (%u) for %s: %s"", name, val, iface, strerror(errno));
fclose(fp);
return -1;
}

if (file_stat.st_mode & S_IWOTH) {
if ( name ) flog(LOG_ERR, ""Other write permission is set for %s (%u) for %s: %s"", name, val, iface, strerror(errno));
fclose(fp);
return -1;
}

fprintf ( fp , ""%u"" , val ) ; 
fclose ( fp ) ; 
return 0 ; 
}",379,-59.793739733292604,-0.15776712330684065
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:","
int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) - 1 , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }",202,-4.845436931131799,-0.023987311540256427
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:","
int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath )-1 ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } flock ( fileno ( fp ) , LOCK_EX ) ; fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }",217,-13.189321818333172,-0.06078028487711139
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) - 1 , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }",201,-3.4370787789423485,-0.01709989442259875
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:","
int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; 
if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; 
<StartBug> if ( access ( spath , F_OK ) != 0 ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; }<EndBug> 
fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } 
fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }",254,-11.548496387671541,-0.04546652121130528
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) - 1 , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w+"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } flock ( fileno ( fp ) , LOCK_EX ) ; fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }",217,-9.410417240463953,-0.04336597806665416
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:","
int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; 
<StartBug>
if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) - 1 ) return - 1 ;
if ( access ( spath , F_OK ) != 0 ) {
    if ( errno != ENOENT ) {
        flog ( LOG_ERR , ""access failed for %s: %s"" , spath , strerror ( errno ) ) ;
        return - 1 ;
    }
}
<EndBug>
fp = fopen ( spath , ""w"" ) ;
if ( ! fp ) {
    if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ;
    return - 1 ;
}
fprintf ( fp , ""%u"" , val ) ;
fclose ( fp ) ;
return 0 ;
}",270,-22.603207489565907,-0.08371558329468855
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) || access ( spath , F_OK ) != 0) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }",193,-8.917777290781146,-0.04620609995223392
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) == 0 ) {<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; } else { return -1; } }",204,-8.700116993811797,-0.04264763232260685
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) - 1 , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }",201,-3.4370787789423485,-0.01709989442259875
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) - 1 , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }",201,-4.012328248803018,-0.019961832083597107
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , 64 + IFNAMSIZ , var , iface ) >= 64 + IFNAMSIZ ) return - 1 ; if ( access ( spath , F_OK ) == 0 ) // check if the file exists, before creating it { fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; }<EndBug> return 0 ; }",211,-30.66316970913424,-0.14532307919020968
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:","
int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) || access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }",194,-6.0131527127662805,-0.030995632540032375
"The Original Code is vulnerable to CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') and CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) >= sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; fclose ( fp ) ; return 0 ; }
Fixed code:"," int set_interface_var ( const char * iface , const char * var , const char * name , uint32_t val ) { FILE * fp ; char spath [ 64 + IFNAMSIZ ] ; <StartBug> if ( snprintf ( spath , sizeof ( spath ) , var , iface ) == sizeof ( spath ) ) return - 1 ; if ( access ( spath , F_OK ) != 0 ) return - 1 ;<EndBug> fp = fopen ( spath , ""w"" ) ; if ( ! fp ) { if ( name ) flog ( LOG_ERR , ""failed to set %s (%u) for %s: %s"" , name , val , iface , strerror ( errno ) ) ; return - 1 ; } fprintf ( fp , ""%u"" , val ) ; if ( fclose ( fp ) != 0 ) { flog ( LOG_ERR , ""failed to close the file pointer for %s: %s"" , iface , strerror ( errno ) ) ; return - 1 ; } return 0 ; }",244,-21.13234911256385,-0.08660798816624529
