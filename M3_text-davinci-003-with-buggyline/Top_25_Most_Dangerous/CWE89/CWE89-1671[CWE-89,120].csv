Original code,Plausible Program,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:","
<StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug>int alloc = ( length ? length : strnlen ( string , 1024 ) ) + 1 ;<EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug>res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> }</EndBug> string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",339,-28.631212320742115,-0.08445785345351657
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { 
 int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ;
 char * ns = malloc ( alloc ) ; unsigned char in ;
int strindex = 0 ; unsigned long hex ; CURLcode res ;
if ( ! ns ) 
 return NULL ;
while ( -- alloc > 0 && strindex < alloc - 1) { //<StartBug>Added condition to check strindex and alloc-1 to prevent buffer overflow<EndBug> 
 in = * string ;
 if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) {
  char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ;
  hex = strtoul ( hexstr , & ptr , 16 ) ;
  in = curlx_ultouc ( hex ) ; 
  res = Curl_convert_from_network ( handle , & in , 1 ) ;
  <StartBug> if ( res ) { 
   <EndBug>free ( ns ) ; 
   return NULL ;
  }
  string += 2 ;
  alloc -= 2 ;
 }
 
 ns [ strindex ++ ] = in ;
 string ++ ;
}
ns [ strindex ] = 0 ;
if ( olen )
 * olen = strindex ;
return ns ;
}",365,-81.53529432320352,-0.22338436800877676
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = length ? length : ( int ) strlen ( string ) ; <EndBug> if ( alloc > 0 ) { alloc += 1 ; char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 && string ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; return NULL ; }<EndBug> string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } <StartBug>ns [ strindex ] = '\0' ; if ( olen ) * olen = strindex ; <EndBug>return ns ;  } else { return NULL ; } }",349,-41.63947992087179,-0.11931083071883035
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug>if (hex > 0xFF) {
            free(ns);
            return NULL;
        }
        res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",363,-16.698919536398886,-0.04600253315812365
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:","
<StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ 
<StartBug> int alloc = ( length ? length : (int)strlen(string) ) + 1; 
//Check that alloc is greater than 0 
if(alloc<=0) 
{ 
    return NULL; 
} 
<EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; 
<StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; 
if ( ! ns ) 
<StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ;
//Check that hexstr is valid
if(!hexstr) 
{ 
    free(ns); 
    return NULL; 
} 
hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; 
<StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; 
//Check that res is valid 
if(res) 
{ 
    free ( ns ) ; 
    return NULL ; 
} <EndBug> string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; 
<StartBug>return ns ; <EndBug>}",432,-62.47857225206352,-0.14462632465755446
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) {
 int alloc ;
 if (length == 0)
 {
     alloc = (int)strlen(string) + 1;
 }
 else
 {
     alloc = length + 1;
 }
 char * ns = malloc ( alloc ) ; unsigned char in ;
 int strindex = 0 ; 
 unsigned long hex ; CURLcode res ; if ( ! ns )
 return NULL ;
 while ( -- alloc > 0 ) { 
 in = * string ;
 if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { 
 char hexstr [ 3 ] ; char * ptr ; 
 hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; 
 hexstr [ 2 ] = 0 ; 
 hex = strtoul ( hexstr , & ptr , 16 ) ; 
 in = curlx_ultouc ( hex ) ; 
 
 if ( in == 0 ) {
     free ( ns ) ;
     return NULL ;
 }
 
 res = Curl_convert_from_network ( handle , & in , 1 ) ; 
 if ( res || in == 0) {
     free ( ns ) ;
     return NULL ;
 }
 string += 2 ; alloc -= 2 ; 
 }
 ns [ strindex ++ ] = in ; string ++ ; 
 }
 ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; 
 return ns ;
}",375,-74.84034818188682,-0.19957426181836488
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; char * ns = malloc ( alloc ) ; unsigned char in ;<EndBug> int strindex = 0 ; unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; return NULL ; } <EndBug> string += 2 ; alloc -= 2 ; } <StartBug>if(alloc <= 0) { free(ns); return NULL; }<EndBug> ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",345,-24.67796070313487,-0.0715303208786518
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug> int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug> while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> if((hexstr[0] == '\'') || (hexstr[1] == '\'')){ free ( ns ) ; return NULL ;} res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",372,-29.612012041753598,-0.07960218290793977
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> if( ptr != NULL && *ptr != '\0') { free(ns); return NULL; } res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",360,-19.73112800269494,-0.05480868889637484
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = 0;<EndBug> if (length == 0) { alloc = (int) strlen(string) + 1; } else { alloc = length; } char * ns = malloc(alloc) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) && alloc > 2) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } else if(alloc == 1 && !ISXDIGIT(string[1])) { break; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if (olen)  * olen = strindex ; <StartBug>return ns ; <EndBug>}",377,-43.5754550940289,-0.11558476152262306
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = 0; int max_alloc = 0;<EndBug> char * ns = NULL; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; max_alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; ns = malloc ( max_alloc ) ; if ( ! ns ) <StartBug>return NULL ;<EndBug> while (alloc < max_alloc) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; return NULL ; } <EndBug> string += 2 ; alloc += 2 ; } else { alloc ++; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",356,-30.94296183170692,-0.0869184321115363
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:","
char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { 

int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ;

char * ns = malloc ( alloc ) ; 
unsigned char in ; 
int strindex = 0 ; 
unsigned long hex ; 
CURLcode res ; 
if ( ! ns ) 
return NULL ; 
while ( -- alloc > 0 ) { 
in = * string ; 
if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { 
char hexstr [ 3 ] ; 
char * ptr ; 
hexstr [ 0 ] = string [ 1 ] ; 
hexstr [ 1 ] = string [ 2 ] ; 
hexstr [ 2 ] = 0 ; 
hex = strtoul ( hexstr , & ptr , 16 ) ; 
in = curlx_ultouc ( hex ) ; 
res = Curl_convert_from_network ( handle , & in , 1 ) ; 
if ( res ) { 
free ( ns ) ; 
return NULL ; 
} 
if(res == CURL_CONV_BAD_UTF8_CHAR)
{
res = Curl_convert_from_network ( handle , & in , 0 ) ; 
if ( res ) { 
free ( ns ) ; 
return NULL ; 
}
} 
string += 2 ; 
alloc -= 2 ; 
} 
ns [ strindex ++ ] = in ; 
string ++ ; 
} 
ns [ strindex ] = 0 ; 
if ( olen )  * olen = strindex ; 
return ns ; 
}",417,-55.37419497989141,-0.13279183448415208
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug>
char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ; if(length > alloc) { free(ns); return NULL; }<EndBug>
unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>

while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug>
if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug>
}

string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",361,-40.85218952485233,-0.11316395990263803
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen )<EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug>if (hex == 0) {free(ns); return NULL;} <EndBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",352,-24.008335346899834,-0.0682054981446018
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; if ( hex > 0xFF ) { free(ns); <StartBug>return NULL;<EndBug> } in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",363,-14.113187691629555,-0.03887930493561861
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = 0 ; <EndBug> if (length) { alloc = length + 1; } else { alloc = (int)strlen(string) + 1; } char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> if ( hex <= 0xFF ) { res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; return NULL ; } } else { free ( ns ) ; return NULL ; } <EndBug> string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",364,-20.90632041594682,-0.057434946197656093
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:","
<StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug>if (alloc > 0 && alloc < 3) return NULL;
res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",353,-23.7906349965303,-0.06739556656240879
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = 0; <EndBug> if (length) alloc = length + 1; else alloc = (int)strlen(string) + 1; char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; if (hex > 0xFF) { free (ns); return NULL; } in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",364,-20.043020334031088,-0.055063242675909584
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; if ( hex > 0xff ){ free ( ns ) ; <StartBug>return NULL ; <EndBug> } in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",363,-15.44252371251043,-0.04254138763776978
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen )<EndBug> { <StartBug>int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ;<EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ; int hex ;<EndBug> CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; <StartBug>hex = (int)strtoul ( hexstr , & ptr , 16 ) ; <EndBug> in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } <StartBug>if (in == ';' || in == '\'' || in == '=' || in == '-'){ //prevent SQL Injection <EndBug> ns [ strindex ++ ] = ' '; //replace special elements with space <StartBug>} else if ((in < 0) || (in >= 128)){ //prevent buffer overflow <EndBug>ns [ strindex ++ ] = '?'; //replace special elements with ? <StartBug>} else{ <EndBug>ns [ strindex ++ ] = in ; //normal character <StartBug>}<EndBug> string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",470,-91.21915761800578,-0.19408331408086335
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:","

<StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; length = ( length ? length : ( int ) strlen ( string ) ); <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 && length-- ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; return NULL ; } <EndBug> string += 2 ; <StartBug>alloc -= 2 ; <EndBug> } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",359,-34.73173376193204,-0.09674577649563243
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 4 ] ; char * ptr ; hexstr [ 0 ] = '0' ; hexstr [ 1 ] = 'x' ; hexstr [ 2 ] = string [ 1 ] ; hexstr [ 3 ] = string [ 2 ] ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } if(in == '\'' || in == ';' || in == '\0' || in == '""' || in == '-' || in == '--' || in == '!' || in == '(' || in == ')' || in == '#' || in == '=' || in == '`' || in == '@' || in == '$' || in == '&' || in == '+' || in == '{' || in == '}' || in == '\\' || in =='|' || in == '~' || in == '*' || in == '?' || in == '>' || in == '<'){ in = '\0'; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",503,-85.69345905729017,-0.17036472973616337
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = 0; <EndBug> if (length != 0) { alloc = length + 1; } else { alloc = (int)strlen(string) + 1; } char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; if(strlen(hexstr) > 3) { free(ns); return NULL; } hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",373,-21.16192122449791,-0.056734373256026566
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug>if (hex > 0xFF) { free(ns); return NULL; } res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",355,-11.4063352584804,-0.03213052185487437
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = 0;
    
    if (length) {
        alloc = length + 1;
    }
    else {
        alloc = (int) strlen (string) + 1;
    }
    <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; if ( ( hex == 0 ) || ( hex > 255) ) { free (ns) ; <StartBug>return NULL ; <EndBug> } in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",399,-45.666049499013226,-0.11445125187722613
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen )<EndBug> { <StartBug> int alloc = 0;<EndBug> if (length) { alloc = length + 1; } else { alloc = (int) strlen (string) + 1; } char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; if (res) { free (ns); return NULL; } <EndBug> string += 2 ; alloc -= 2 ; }  <StartBug>if (alloc >= 3) { ns [ strindex ++ ] = in ; string ++ ; } <EndBug> } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",359,-37.5214086522186,-0.10451645864127743
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; 

//Filter out special characters
if ( hex > 127 || !isalnum(hex) ){ 
    free ( ns ) ; 
    <StartBug>return NULL ; <EndBug>  
} 

<StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",389,-49.44533740230184,-0.12710883650977337
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = 0; <EndBug> if (length == 0) { alloc = (int)strlen(string) + 1; } else { alloc = length; } char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ;  if (hex >= 0x100) { <StartBug>free(ns); <EndBug> return NULL; } in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",377,-29.41119211086463,-0.07801377217735976
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , size_t length , size_t * olen ) <EndBug>{ <StartBug> size_t alloc = ( length ? length : strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>size_t strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && isxdigit ( string [ 1 ] ) && isxdigit ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",339,-15.222993425257636,-0.04490558532524377
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; if(alloc < 0) { return NULL; } <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; return NULL ; } <EndBug> string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",341,-15.028693898406212,-0.044072416124358395
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:","
<StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug>int alloc = 0; <EndBug> char * ns = NULL; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; 

if (length)
{
  alloc = length + 1;
  ns = malloc ( alloc ) ;
}

if ( ! ns ) 
<StartBug>return NULL ; <EndBug>

while (--alloc > 0 && *string != '\0') {
  in = * string ;
  if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) {
    char hexstr [ 3 ] ;
    char * ptr ;
    hexstr [ 0 ] = string [ 1 ] ;
    hexstr [ 1 ] = string [ 2 ] ;
    hexstr [ 2 ] = 0 ;
    hex = strtoul ( hexstr , & ptr , 16 ) ;
    in = curlx_ultouc ( hex ) ; <StartBug> 
	res = Curl_convert_from_network ( handle , & in , 1 ) ; 
	if ( res ) {
	  free ( ns ) ; 
	  return NULL ; 
	}
	<EndBug> 
	string += 2 ; 
	alloc -= 2 ; 
  } 
  ns [ strindex ++ ] = in ; 
  string ++ ; 
} 

ns [ strindex ] = 0 ; 
if ( olen )  
* olen = strindex ; 

<StartBug>return ns ; <EndBug>
}",417,-63.5079971942696,-0.15229735538194147
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) { int alloc = 0 ; int input_len = 0;  int strindex = 0 ; char * ns = NULL; unsigned char in ; unsigned long hex ; CURLcode res ; input_len = ( length ? length : ( int ) strlen ( string ) ) + 1;  if (input_len > 1) { alloc = input_len ; ns = malloc ( alloc ) ; if ( ! ns )  return NULL ; while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; return ns ;}",317,-49.40225040467234,-0.1558430612134774
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns || length < 0 || length > INT_MAX) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } else if (in == '\'' || in == '\""' || in == ';' || in == '%') { // Added code to escape special characters <StartBug>return NULL ; <EndBug> } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",394,-39.80742461920455,-0.10103407263757501
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>if(alloc > 1){ while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; <StartBug>return NULL ; } <EndBug> string += 2 ; alloc -= 2 ; } else if (in == ';' && alloc > 2){ free(ns); <StartBug> return NULL; <EndBug> } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; } if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",370,-41.766338984115656,-0.11288199725436664
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ int alloc; <StartBug>int actual_len = 0;<EndBug> if (length) { alloc = length + 1; <StartBug>actual_len = length;<EndBug> } else { alloc = (int)strlen(string) + 1; <StartBug>actual_len = (int)strlen(string);<EndBug> } char * ns = malloc ( alloc ) ; if ( ! ns ) <StartBug>return NULL ; <EndBug> unsigned char in ; int strindex = 0 ; unsigned long hex ; CURLcode res ; int check_len = 0; <StartBug>while (check_len < actual_len) {<EndBug> in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; check_len += 2 ; } ns [ strindex ++ ] = in ; string ++ ; <StartBug>check_len++;<EndBug> } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",406,-54.64847870855333,-0.1346021643067816
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug>int alloc = 0; int strindex = 0 ;<EndBug> unsigned char in ; <StartBug> unsigned long hex ; CURLcode res ; if (length) alloc = length; else alloc = (int)strlen(string) + 1; char * ns = malloc ( alloc ) ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while (--alloc > 0) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } else if (in == 0) { // check if we get \0 to prevent buffer overflow alloc = 0; // terminate the loop } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",369,-67.21874099658471,-0.18216460974684204
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug>int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> if (hex < 256U) { res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } else { ns [ strindex ++ ] = in ; string ++ ; alloc -- ; } <EndBug> } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",365,-36.33637630680194,-0.0995517159090464
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug> char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; <StartBug>hex = strtoul ( hexstr , & ptr , 16 ) ;<EndBug> <StartBug>if ( hex > 0xFF ) {<EndBug> <StartBug> free ( ns ) ; <EndBug> <StartBug> return NULL ;<EndBug> } <StartBug> in = ( unsigned char ) hex ;<EndBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",384,-32.93285371767479,-0.0857626398897781
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," 
<StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> // Sanitize input string using whitelisting before executing query string = sanitize_input(string); res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",363,-40.466870976605676,-0.11147898340662721
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc ; if ( ! length ) alloc = ( int ) strlen ( string ) + 1 ; else alloc = length + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res || hex > UCHAR_MAX ) { free ( ns ) ; return NULL ; } <EndBug> string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",345,-19.479367808953683,-0.056461935678126615
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc ; int strindex = 0 ;<EndBug> unsigned char in ; unsigned long hex ; CURLcode res ; if (length == 0){ alloc = (int) strlen (string) + 1 ; } else { alloc = length + 1; } char * ns = malloc ( alloc ) ; if ( ! ns ) <StartBug>{ free(ns); return NULL ; } <EndBug>while ( -- alloc > 0 && strindex < length) { in = string[strindex]; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; if ( res ) { free ( ns ) ; return NULL ; } string += 2 ; alloc -= 2 ; <EndBug> } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",347,-42.808234733419035,-0.12336667070149578
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug>res = Curl_convert_from_network ( handle , & in , 1 ) ; if (res) { alloc += 2; string -= 2; continue; }<EndBug> string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",332,-18.719739586730963,-0.05638475779135832
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen )<EndBug> { <StartBug> int alloc ;<EndBug>  if ( ! length ) { alloc = strlen ( string ) + 1 ;  } else if ( length < 0 || length > strlen(string)) { <StartBug>return NULL;<EndBug>  } else { alloc = length + 1; } <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",381,-45.004914774424144,-0.11812313589087702
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> int i; unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>for(i = 0; i < alloc; i++) { in = string[i]; if ( ( '%' == in ) && ISXDIGIT ( string [ i+1 ] ) && ISXDIGIT ( string [ i+2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ i+1 ] ; hexstr [ 1 ] = string [ i+2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } i+=2; alloc-=2; } ns [ strindex++ ] = in ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",353,-23.938055989971417,-0.06781318977329014
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc ; 
if (length>0)
    alloc = length;
else 
    alloc = (int) strlen (string) + 1;<EndBug>

char * ns = malloc ( alloc ) ; 
unsigned char in ; <StartBug>int strindex = 0 ;<EndBug>
unsigned long hex ; 
CURLcode res ; 
if ( ! ns ) 
    <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { 
    in = * string ; 
    if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { 
        char hexstr [ 3 ] ; 
        char * ptr ; 
        hexstr [ 0 ] = string [ 1 ] ; 
        hexstr [ 1 ] = string [ 2 ] ; 
        hexstr [ 2 ] = 0 ; 
        hex = strtoul ( hexstr , & ptr , 16 ) ; 
        in = curlx_ultouc ( hex ) ; 
        <StartBug> if (res = Curl_convert_from_network (handle , &in , 1)){//added check
            if (res != CURLE_OK){//added check
                free ( ns ); 
                <StartBug>return NULL ; <EndBug>
            }
        }<EndBug>
        string += 2 ; 
        alloc -= 2 ; 
    } 
    ns [ strindex ++ ] = in ; 
    string ++ ; 
} 
ns [ strindex ] = 0 ; 
if ( olen )  * olen = strindex ; 
<StartBug>return ns ; <EndBug>}",441,-81.23789919272149,-0.1842129233395045
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug>if ( hex == 0 ) return NULL; res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",347,-15.894099376358449,-0.04580432096933271
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc ; int strindex = 0 ;<EndBug> unsigned char in ; <StartBug>unsigned long hex ; CURLcode res ; <EndBug> // Check if string length is provided, if not then calculate it 
if (length) {
	alloc = length + 1;
}
else {
	alloc = (int)strlen(string)+1;
}

char * ns = malloc ( alloc ) ;

if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; <StartBug> // check if number of characters is atleast 3 
if (alloc >= 3) {
	hex = strtoul ( hexstr , & ptr , 16 ) ; 
	in = curlx_ultouc ( hex ) ;
	res = Curl_convert_from_network ( handle , & in , 1 ) ; 
	if ( res ) {
		free ( ns ) ; 
		return NULL ; 
	}
	string += 2 ; 
	alloc -= 2 ; 
}<EndBug> else { 
	// If not enough characters end loop 
	break; 
} 

} 
ns [ strindex ++ ] = in ; 
string ++ ; 
} 
ns [ strindex ] = 0 ; 
if ( olen )  * olen = strindex ; 
<StartBug>return ns ; <EndBug>}",449,-110.39649040128546,-0.24587191626121482
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug>res = Curl_convert_from_network(handle, &in, 1);<EndBug> if (res == CURL_CONV_ILLEGAL_CHARS) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } if (res) { in = '%'; } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",361,-27.774874715441644,-0.07693871112310705
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; 
    if (alloc > CURL_MAX_INPUT_LEN)
        return NULL; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; 
        if (res || hex > 0xff) { 
            free ( ns ) ; <StartBug>return NULL ; <EndBug> 
        } 
        string += 2 ; alloc -= 2 ; <EndBug> } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",378,-32.69802113528724,-0.08650270141610382
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') and CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = ( length ? length : ( int ) strlen ( string ) ) + 1 ; <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; <EndBug> if ( res ) { free ( ns ) ; <StartBug>return NULL ; <EndBug> } string += 2 ; alloc -= 2 ; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}
Fixed code:"," <StartBug>char * curl_easy_unescape ( CURL * handle , const char * string , int length , int * olen ) <EndBug>{ <StartBug> int alloc = 0 ; if (length == 0) { alloc = (int)strlen(string) + 1; } else { alloc = length + 1; } <EndBug> char * ns = malloc ( alloc ) ; unsigned char in ; <StartBug>int strindex = 0 ;<EndBug> unsigned long hex ; CURLcode res ; if ( ! ns ) <StartBug>return NULL ; <EndBug>while ( -- alloc > 0 ) { in = * string ; if ( ( '%' == in ) && ISXDIGIT ( string [ 1 ] ) && ISXDIGIT ( string [ 2 ] ) ) { char hexstr [ 3 ] ; char * ptr ; hexstr [ 0 ] = string [ 1 ] ; hexstr [ 1 ] = string [ 2 ] ; hexstr [ 2 ] = 0 ; hex = strtoul ( hexstr , & ptr , 16 ) ; in = curlx_ultouc ( hex ) ; <StartBug> res = Curl_convert_from_network ( handle , & in , 1 ) ; if (res != CURLE_OK) { free(ns); return NULL; } <EndBug> string += 2 ; alloc -= 2 ; } else if (!ISXDIGIT(string[1]) || !ISXDIGIT(string[2])) { free(ns); return NULL; } ns [ strindex ++ ] = in ; string ++ ; } ns [ strindex ] = 0 ; if ( olen )  * olen = strindex ; <StartBug>return ns ; <EndBug>}",385,-24.078040046628725,-0.06254036375747721
