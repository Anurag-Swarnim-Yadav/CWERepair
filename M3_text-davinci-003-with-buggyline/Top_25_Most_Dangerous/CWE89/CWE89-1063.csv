Original code,Plausible Program,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> char * new_path ; new_path = curl_easy_escape ( data , path , 0 ) ; if ( ! new_path ) return CURLE_OUT_OF_MEMORY ; pop3c -> mailbox = new_path ; return CURLE_OK ; <EndBug>}",129,-13.959055891965903,-0.10820973559663491
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( pop3c -> mailbox === NULL ) { curl_free ( pop3c -> mailbox ) ; return CURLE_OUT_OF_MEMORY ; } char * mailbox_escaped = curl_easy_escape ( data , pop3c -> mailbox , 0 ) ; if ( mailbox_escaped === NULL ) { curl_free ( pop3c -> mailbox ) ; return CURLE_OUT_OF_MEMORY ; } curl_free ( pop3c -> mailbox ) ; pop3c -> mailbox = mailbox_escaped ; return CURLE_OK ; <EndBug>}",215,-26.654157025027093,-0.12397282337221904
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; size_t path_len = strlen(path) + 1; char * safe_mailbox_str = malloc(path_len); if (safe_mailbox_str == NULL) { return CURLE_OUT_OF_MEMORY; } for (size_t i = 0; i < path_len; i++) { if (isalnum((unsigned char)path[i]) || path[i]=='_' || path[i]=='.' || path[i]=='-' || path[i]=='~' || path[i]=='@' || path[i]==':' || path[i]=='%'|| path[i]=='/') safe_mailbox_str[i] = path[i]; else safe_mailbox_str[i] = '\0'; } <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , safe_mailbox_str , 0 , NULL ) ; free(safe_mailbox_str); <EndBug> return CURLE_OK ; }",297,-75.49003009065812,-0.2541751854904314
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> /* Remove illegal characters from mailbox string to prevent SQL Injection*/ char * mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! mailbox ) return CURLE_OUT_OF_MEMORY ; int i = 0 ; while ( mailbox [ i ] ) { if ( ! isalnum ( mailbox [ i ] ) ) { mailbox [ i ] = '\0' ; break ; } ++ i ; } pop3c -> mailbox = mailbox ; <EndBug> return CURLE_OK ; }",179,-43.00040394507382,-0.2402257203635409
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> char* unescaped_path = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! unescaped_path ) return CURLE_OUT_OF_MEMORY ; char* valid_path = curl_easy_escape ( data , unescaped_path , 0 ) ; if ( ! valid_path ) { curl_free ( unescaped_path ) ; return CURLE_OUT_OF_MEMORY ; } pop3c -> mailbox = valid_path ; curl_free ( unescaped_path ) ; <EndBug> return CURLE_OK ; }",199,-18.70617811272099,-0.09400089503879895
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> unsigned char * esc_path = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! esc_path ) return CURLE_OUT_OF_MEMORY ; pop3c -> mailbox = curl_escape ( esc_path , 0 ) ; curl_free ( esc_path ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}",167,-14.852836005592929,-0.08893913775804149
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:","
static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_escape ( data , path , 0 ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}",118,-6.189697762599991,-0.05245506578474569
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> char* mail_safe = curl_easy_escape ( data, path, 0); if (!mail_safe) { return CURLE_OUT_OF_MEMORY; } pop3c->mailbox = mail_safe; <EndBug> return CURLE_OK; }",126,-22.885807949894996,-0.18163339642773807
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:","
static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> CURLcode res = CURLE_OK ; char * mailbox = curl_easy_escape ( data , path , 0 ) ; if ( ! mailbox ) return CURLE_OUT_OF_MEMORY ; pop3c -> mailbox = mailbox ; res = CURLE_OK ; <EndBug> return res ; }",135,-16.982600549748806,-0.1257970411092504
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> CURLcode result = CURLE_OK ; pop3c -> mailbox = curl_easy_escape ( data , path , 0 ) ; if ( ! pop3c -> mailbox ) { result = CURLE_OUT_OF_MEMORY ; } else { char * unescaped = curl_easy_unescape ( data , pop3c -> mailbox , 0 , NULL ) ; if ( unescaped ) { free ( pop3c -> mailbox ) ; pop3c -> mailbox = unescaped ; } else { result = CURLE_OUT_OF_MEMORY ; } } return result ; <EndBug>}",200,-16.362311809787133,-0.08181155904893567
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> const char * escaped_path = curl_easy_escape ( data , path , 0 ) ; if ( ! escaped_path ) return CURLE_OUT_OF_MEMORY ; pop3c -> mailbox = curl_easy_unescape ( data , escaped_path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) { curl_free ( escaped_path ) ; return CURLE_OUT_OF_MEMORY ; } curl_free ( escaped_path ) ; return CURLE_OK ; <EndBug>}",182,-10.936899453724948,-0.06009285414134587
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> const char * esc_path = curl_easy_escape ( data , path , 0 ) ; pop3c -> mailbox = curl_easy_unescape ( data , esc_path , 0 , NULL ) ; curl_free ( esc_path ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug> }",151,-12.60890693019565,-0.08350269490195794
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_escape ( data , path , 0 ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; <EndBug> return CURLE_OK ; }",117,-7.791299376360518,-0.06659230236205571
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> char *sanitized_mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; pop3c -> mailbox = curl_slist_append_const_str ( NULL , sanitized_mailbox ) ; curl_free ( sanitized_mailbox ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}",159,-26.646451301922582,-0.16758774403724894
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> char *query = NULL; pop3c->mailbox = curl_easy_escape(data, path, 0); if(!pop3c->mailbox) return CURLE_OUT_OF_MEMORY; query = curl_easy_unescape(data, pop3c->mailbox, 0, NULL); if(query) { free(pop3c->mailbox); pop3c->mailbox = query; } <EndBug> return CURLE_OK; }",170,-20.453843688779006,-0.12031672758105298
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> int len = strlen(path); char* pInput = (char*) calloc(len+1, sizeof(char)); memcpy(pInput, path, len); for(int i = 0; i < len; i++){ if(pInput[i] == '\''){ pInput[i] = '\0'; } } pop3c -> mailbox = curl_easy_unescape ( data , pInput , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; free (pInput) ; return CURLE_OK ; <EndBug>}",203,-46.14285783806219,-0.22730471841409947
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> char *escaped_mailbox = curl_easy_escape ( data , path , 0 ) ; if ( ! escaped_mailbox ) return CURLE_OUT_OF_MEMORY ; pop3c -> mailbox = curl_easy_unescape ( data , escaped_mailbox , 0 , NULL ) ; curl_free ( escaped_mailbox ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug> }",175,-9.48291615341495,-0.05418809230522828
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:","

static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> char * safeMailbox = curl_easy_escape (data, path, 0); if ( ! safeMailbox ) return CURLE_OUT_OF_MEMORY ; pop3c -> mailbox = curl_easy_unescape ( data , safeMailbox , 0 , NULL ) ; curl_free (safeMailbox); if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; <EndBug> return CURLE_OK ; }",170,-22.932391602694253,-0.13489642119231912
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_escape ( data , path , 0 ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}",117,-3.8992331253625307,-0.0333267788492524
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> char *escaped_mailbox = curl_easy_escape ( data , path , 0 ) ; if ( ! escaped_mailbox ) return CURLE_OUT_OF_MEMORY ; pop3c -> mailbox = curl_easy_unescape ( data , escaped_mailbox , 0 , NULL ) ; curl_free ( escaped_mailbox ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}",175,-7.370342453414949,-0.042116242590942564
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> char * sanitized_path = curl_easy_escape ( data , path , 0 ) ; if ( ! sanitized_path ) return CURLE_OUT_OF_MEMORY ; pop3c -> mailbox = curl_easy_unescape ( data , sanitized_path , 0 , NULL ) ; curl_free ( sanitized_path ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}",174,-8.588265975280327,-0.04935785043264556
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> char *query_str = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! query_str ) return CURLE_OUT_OF_MEMORY ; char sql[256]; // set max query length to 256 snprintf(sql, 256, ""SELECT mailbox FROM table_name WHERE path='%s'"", query_str); pop3c -> mailbox = malloc(strlen(sql)+1); // allocate memory for the query strcpy(pop3c->mailbox, sql); curl_free(query_str); // free the query string <EndBug> return CURLE_OK ; }",203,-66.50043704962889,-0.3275883598503886
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; 
<StartBug>
 if ( ! path ) return CURLE_OK ;
 pop3c -> mailbox = curl_easy_escape ( data , path , 0 ) ;
 if ( ! pop3c -> mailbox ) 
  return CURLE_OUT_OF_MEMORY ;
<EndBug>
return CURLE_OK ; 
}",141,-30.022668883145645,-0.2129267296676996
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> // escape single quote (') char since it's a potential sql injection char* escaped_path = strdup(path); for (int i = 0; escaped_path[i]; i++) { if(escaped_path[i] == '\'') { escaped_path[i] = '\0'; } }  pop3c -> mailbox = curl_easy_unescape ( data , escaped_path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; free(escaped_path); <EndBug>}",200,-59.70679844722191,-0.29853399223610955
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> char * sanitized_path = NULL ; sanitized_path = curl_easy_escape ( data , path, 0 ); if ( ! sanitized_path ) return CURLE_OUT_OF_MEMORY ; pop3c -> mailbox = sanitized_path ; return CURLE_OK ; <EndBug>}",134,-20.033043161253108,-0.1495003220989038
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> CURLcode res = Curl_urldecode ( data , path , 0 , & pop3c -> mailbox , NULL , TRUE ) ; if ( res ) return res ; return CURLE_OK ; <EndBug>}",114,-10.741419860299906,-0.09422298123070093
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:","
static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug>char *sanitized_path = curl_easy_escape(data, path, 0); if(!sanitized_path) return CURLE_OUT_OF_MEMORY; pop3c->mailbox = sanitized_path;<EndBug> return CURLE_OK ; }",129,-19.040322174396852,-0.14759939670075078
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; char * unescaped = NULL ; const char * path = data -> state . path ; <StartBug> unescaped = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! unescaped ) return CURLE_OUT_OF_MEMORY ; /* Escape the mailbox to make sure it's properly escaped */ pop3c -> mailbox = curl_easy_escape ( data , unescaped , 0 ) ; curl_free ( unescaped ) ; <EndBug> if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; }",188,-31.390463587481793,-0.1669705509972436
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:","

static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> char* unescaped; unescaped = curl_easy_unescape(data, path, 0, NULL); if ( unescaped ) { char* query_str = (char*)malloc(strlen(unescaped) + 1); if ( query_str ) { strcpy(query_str, unescaped); pop3c->mailbox = query_str; } else { curl_free(unescaped); return CURLE_OUT_OF_MEMORY; } curl_free(unescaped); } else { return CURLE_OUT_OF_MEMORY; } <EndBug> return CURLE_OK; }",212,-36.40022860886038,-0.1716991915512282
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> char * escaped_mailbox = curl_easy_escape ( data , path , 0 ) ; if ( ! escaped_mailbox ) return CURLE_OUT_OF_MEMORY ; pop3c -> mailbox = curl_easy_unescape ( data , escaped_mailbox , 0 , NULL ) ; curl_free ( escaped_mailbox ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}",174,-6.056462854375854,-0.03480725778376928
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> int length; char *mailbox = curl_easy_unescape(data, path, 0, &length); if (!mailbox) return CURLE_OUT_OF_MEMORY; char *sanitizedMailbox = malloc((length + 1) * sizeof(char)); if (!sanitizedMailbox) return CURLE_OUT_OF_MEMORY; for (int i = 0; i < length; i++) { if (mailbox[i] == '\'' || mailbox[i] == '\\') { sanitizedMailbox[i] = '\0'; } else { sanitizedMailbox[i] = mailbox[i]; } } sanitizedMailbox[length] = '\0'; free(mailbox); pop3c->mailbox = sanitizedMailbox; return CURLE_OK; <EndBug>}",250,-36.75125323897341,-0.14700501295589366
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> char* escaped_mailbox = curl_easy_escape ( data, path, 0); if ( ! escaped_mailbox ) return CURLE_OUT_OF_MEMORY ; pop3c -> mailbox = escaped_mailbox; return CURLE_OK ; <EndBug>}",127,-12.870890608817499,-0.10134559534501968
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; char * sanitized_path = NULL ; const char * path = data -> state . path ; <StartBug> sanitized_path = curl_easy_escape ( data , path , 0 ) ; if ( ! sanitized_path ) return CURLE_OUT_OF_MEMORY ; pop3c -> mailbox = sanitized_path ; return CURLE_OK ; <EndBug>}",135,-11.570722449808601,-0.08570905518376741
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; char * sanitized_path = curl_easy_escape ( data , path , 0 ) ; if ( ! sanitized_path ) return CURLE_OUT_OF_MEMORY ; pop3c -> mailbox = sanitized_path ; return CURLE_OK ; }",120,-13.440367065207495,-0.11200305887672912
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> char * decodedPath = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! decodedPath ) return CURLE_OUT_OF_MEMORY ; /* Prevent SQL injection attacks */ pop3c -> mailbox = mySqlEscapeString ( decodedPath ) ; free ( decodedPath ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}",171,-28.682184295749288,-0.16773207190496658
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> char *escaped = NULL; escaped = curl_easy_escape (data, path, 0); if ( !escaped ) return CURLE_OUT_OF_MEMORY; pop3c->mailbox = escaped; return CURLE_OK; <EndBug>}",125,-21.958622190989995,-0.17566897752791996
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> size_t len; char *safe_mailbox; safe_mailbox = curl_easy_unescape ( data , path , 0 , &len ) ; if ( ! safe_mailbox ) return CURLE_OUT_OF_MEMORY ; pop3c->mailbox = malloc ( len + 1 ) ; if ( ! pop3c -> mailbox ) { curl_free ( safe_mailbox ) ; return CURLE_OUT_OF_MEMORY ; } memcpy ( pop3c -> mailbox , safe_mailbox , len ) ; pop3c -> mailbox [ len ] = ' \0 ' ; curl_free ( safe_mailbox ) ; return CURLE_OK ; <EndBug>}",222,-27.90489995565909,-0.1256977475480139
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> char* unescapedPath = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( unescapedPath ) { pop3c -> mailbox = ( char * ) malloc ( strlen ( unescapedPath ) + 1 ) ; if ( pop3c -> mailbox ) { strcpy ( pop3c -> mailbox , unescapedPath ) ; curl_free ( unescapedPath ) ; } else { curl_free ( unescapedPath ) ; return CURLE_OUT_OF_MEMORY ; } } else { return CURLE_OUT_OF_MEMORY ; } return CURLE_OK ; <EndBug>}",211,-22.376078724677075,-0.10604776646766387
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:","
static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> char *decoded_path = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! decoded_path ) return CURLE_OUT_OF_MEMORY ; pop3c -> mailbox = malloc ( strlen ( decoded_path ) + 1 ) ; if ( ! pop3c -> mailbox ) { free ( decoded_path ) ; return CURLE_OUT_OF_MEMORY ; } strcpy ( pop3c -> mailbox , decoded_path ) ; free ( decoded_path ) ; <EndBug> return CURLE_OK ; }",198,-16.250797611677648,-0.08207473541251337
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> if ( path ) { int len = ( int ) strlen ( path ) + 1 ; char * escaped_path = malloc ( len ) ; if ( escaped_path ) { if ( curl_easy_escape ( data , path , 0 , escaped_path , len ) == 0 ) { pop3c -> mailbox = escaped_path ; return CURLE_OK ; } else { free ( escaped_path ) ; } } } return CURLE_OUT_OF_MEMORY ; <EndBug>}",174,-30.650558059618103,-0.17615263252654081
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:","
static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> char * mailbox_escaped = curl_easy_escape ( data , path , 0 ) ; if ( ! mailbox_escaped ) return CURLE_OUT_OF_MEMORY ; pop3c -> mailbox = curl_easy_unescape ( data , mailbox_escaped , 0 , NULL ) ; curl_free ( mailbox_escaped ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}",175,-9.51232572794981,-0.05435614701685605
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> char * mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! mailbox ) return CURLE_OUT_OF_MEMORY ; pop3c -> mailbox = curl_slist_append_escaped ( NULL , mailbox ) ; curl_free ( mailbox ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}",164,-12.943662317829007,-0.07892477023066467
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_escape ( data , path , 0 ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}",117,-3.901045973861429,-0.03334227328086692
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> char * unescaped = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( unescaped ) { char * escaped = curl_easy_escape ( data , unescaped , 0 ) ; pop3c -> mailbox = escaped ; curl_free ( unescaped ) ; } else { return CURLE_OUT_OF_MEMORY ; } return CURLE_OK ; <EndBug> }",158,-18.145276090248302,-0.11484351955853356
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> char * tmp_mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! tmp_mailbox ) return CURLE_OUT_OF_MEMORY ; pop3c -> mailbox = curl_escape ( tmp_mailbox , 0 ) ; curl_free ( tmp_mailbox ) ; return CURLE_OK ; <EndBug>}",148,-13.498942715339748,-0.09120907240094424
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> char * escaped_path = curl_easy_escape ( data , path , 0 ) ; if ( ! escaped_path ) return CURLE_OUT_OF_MEMORY ; pop3c -> mailbox = curl_easy_unescape ( data , escaped_path , 0 , NULL ) ; curl_free ( escaped_path ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}",170,-6.489298837731929,-0.03817234610430546
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> char * escaped_mailbox = curl_easy_escape ( data , path , 0 ) ; if ( ! escaped_mailbox ) return CURLE_OUT_OF_MEMORY ; pop3c -> mailbox = curl_easy_unescape ( data , escaped_mailbox , 0 , NULL ) ; curl_free ( escaped_mailbox ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}",174,-6.0376324053132,-0.034699036812144826
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:","
static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> char * mailptr = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! mailptr ) return CURLE_OUT_OF_MEMORY ; pop3c -> mailbox = curl_escape ( mailptr , 0 ) ; free ( mailptr ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}",161,-19.509649607448637,-0.12117794787235178
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> char * escaped_path = curl_easy_escape ( data , path , 0 ) ; pop3c -> mailbox = curl_easy_unescape ( data , escaped_path , 0 , NULL ) ; curl_free ( escaped_path ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}",150,-7.403189472033052,-0.04935459648022034
"The Original Code is vulnerable to CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'). Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> pop3c -> mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! pop3c -> mailbox ) return CURLE_OUT_OF_MEMORY ; return CURLE_OK ; <EndBug>}
Fixed code:"," static CURLcode pop3_parse_url_path ( struct connectdata * conn ) { struct pop3_conn * pop3c = & conn -> proto . pop3c ; struct SessionHandle * data = conn -> data ; const char * path = data -> state . path ; <StartBug> char * mailbox = curl_easy_unescape ( data , path , 0 , NULL ) ; if ( ! mailbox ) return CURLE_OUT_OF_MEMORY ; char * query = curl_sqlite3_mprintf ( ""%q"", mailbox ) ; if ( ! query ) { curl_free ( mailbox ) ; return CURLE_OUT_OF_MEMORY ; } curl_free ( mailbox ) ; pop3c -> mailbox = query ; <EndBug> return CURLE_OK ; }",175,-25.26437469087086,-0.1443678553764049
