Original code,Plausible Program,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ; long port ; char *endptr ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>port = strtol ( p + 2, &endptr, 10 ) ; if (endptr == (p+2)) {return NULL;} * portno = port ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>long port = strtol ( colon + 1, &endptr, 10 ) ; if (endptr == (colon+1)) {return NULL;} * portno = port ; host = estrndup ( str , colon - str ) ;<EndBug> } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}",395,-33.42628663734682,-0.08462351047429574
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ; int port ; long lval ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>if ( sscanf ( p + 2 , ""%d%n"" , & port , & lval ) != 1 || strlen ( p + 2 ) != ( size_t ) lval ) { /* Invalid port number */ if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } * portno = port ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>if ( sscanf ( colon + 1 , ""%d%n"" , & port , & lval ) != 1 || strlen ( colon + 1 ) != ( size_t ) lval ) { /* Invalid port number */ if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } * portno = port ;<EndBug> host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}",502,-35.20359592301224,-0.07012668510560206
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ; int port_num ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>port_num = atoi ( p + 2 ) ; if (port_num > 0 && port_num <= 65535) { * portno = port_num; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; }<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>int port_num = atoi ( colon + 1 ) ; if (port_num > 0 && port_num <= 65535) { * portno = port_num; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; }<EndBug> host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}",473,-15.175224152615488,-0.03208292632688264
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>if (portno && isdigit(*(p+2))){<EndBug> * portno = atoi ( p + 2 ) ; <StartBug>}<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>if (portno && isdigit(*(colon+1))){<EndBug> * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; <StartBug>}<EndBug> } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; }",362,-13.906291270120368,-0.038415169254476154
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:","
static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; }<EndBug> <StartBug>if(*(p + 2) != '\0'){<EndBug> * portno = atoi ( p + 2 ) ; <StartBug>}<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>if(*(colon + 1) != '\0'){<EndBug> * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; <StartBug>}<EndBug> else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; }} return host ; <EndBug>}",380,-28.44821270512775,-0.07486371764507303
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; <StartBug>if (*portno < 0 || *portno > 65535) {<EndBug> if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address port \\""%s\\"""" , str ) ;} return NULL ; <StartBug>}<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; <StartBug>if (*portno < 0 || *portno > 65535) {<EndBug> if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address port \\""%s\\"""" , str ) ;} return NULL ; <StartBug>}<EndBug> host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; }",441,-19.722208646558563,-0.04472156155682214
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>if(atoi(colon + 1) > 0){ //add validation<EndBug> * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; }",323,-22.901122497183863,-0.07090130804081692
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>if(atoi ( p + 2 ) > 0){<EndBug> * portno = atoi ( p + 2 ) ; <StartBug>}else{ <EndBug>if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; <StartBug>}<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>if(atoi ( colon + 1 ) > 0){<EndBug> * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; <StartBug>}else{<EndBug> if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; <StartBug>}<EndBug> } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; }",453,-21.008543109803195,-0.046376474856077696
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>if (str_len > p - str + 2) { * portno = atoi ( p + 2 ) ; }<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>if (str_len > colon - str + 1) {* portno = atoi ( colon + 1 ) ; }<EndBug> host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; }",342,-17.82942327364247,-0.05213281658959786
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; if (*portno < 0 || *portno > 65535) { if (get_err) { *err = strpprintf(0, ""Invalid port number %d"", *portno); } return NULL; } <EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; if (*portno < 0 || *portno > 65535) { if (get_err) { *err = strpprintf(0, ""Invalid port number %d"", *portno); } return NULL; } host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; }",407,-15.584954608364379,-0.03829227176502305
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } if ( isdigit ( * ( p + 2 ) ) ) { * portno = atoi ( p + 2 ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { if ( isdigit ( * ( colon + 1 ) ) ) { * portno = atoi ( colon + 1 ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; }",411,-9.616542560602426,-0.023397913772755293
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ; int port_num ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>port_num = atoi ( p + 2 ) ;if (port_num > 0 && port_num < 65535) {* portno = port_num ;}<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>int port_num = atoi ( colon + 1 ) ;if (port_num > 0 && port_num < 65535) {* portno = port_num ;} host = estrndup ( str , colon - str ) ;<EndBug> } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}",389,-17.572313599014674,-0.04517304267098888
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:","
static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) {<EndBug> if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>if (atoi(colon + 1) > 0) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL; } <EndBug> } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}",391,-21.232579980903743,-0.05430327360844947
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>if (strlen(p+2) > 0) { * portno = atoi ( p + 2 ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; }<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>if (strlen(colon + 1) > 0) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } <EndBug> } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}",446,-19.434391776014728,-0.04357486945294782
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:","
static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <EndBug>* portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; if (!(*portno > 0 && *portno < 65535)) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; }<EndBug> host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}",382,-21.327241849582286,-0.05583047604602693
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>if ( portno && * portno != 0 ) { * portno = atoi ( p + 2 ) ; }<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { if ( portno && * portno != 0 ) { * portno = atoi ( colon + 1 ) ; } host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}",345,-19.936251572010406,-0.05778623644060987
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:","
static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) 
{ 
    char * colon ; 
    char * host = NULL ;
# ifdef HAVE_IPV6 
    char * p ;
    if ( * ( str ) == '[' && str_len > 1 ) { 
        p = memchr ( str + 1 , ']' , str_len - 2 ) ;
        if ( ! p || * ( p + 1 ) != ':' ) { 
            if ( get_err ) { 
                * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; 
            } 
            return NULL ; 
        } 
        if(p[2] == '\0' || p[3] == '\0'){ // <StartBug>
        	if ( get_err ) { 
                * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; 
            } 
            return NULL ;
        }  // <EndBug>
        * portno = atoi ( p + 2 ) ;
        return estrndup ( str + 1 , p - str - 1 ) ; 
    }
# endif 
    if ( str_len ) { 
        colon = memchr ( str , ':' , str_len - 1 ) ; 
    } else { 
        colon = NULL ; 
    } 
    if ( colon ) { 
    	if(colon[1] == '\0' || colon[2] == '\0'){ // <StartBug>
        	if ( get_err ) { 
                * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;
            } 
            return NULL ;
        } // <EndBug>
        * portno = atoi ( colon + 1 ) ; 
        host = estrndup ( str , colon - str ) ; 
    } else { 
        if ( get_err ) { 
            * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;
        } 
        return NULL ; 
    } 
    return host ; 
}",565,-55.704837589814865,-0.0985926329023272
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>if (atoi(p + 2) <= 0 || atoi(p + 2) > 65535){ if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ;}<EndBug> * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>if (atoi(colon + 1) <= 0 || atoi(colon + 1) > 65535){ if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; }<EndBug> * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; }",441,-17.957819050650432,-0.04072067811938874
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } if ( ! isdigit ( * ( p + 2 ) ) ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { if ( ! isdigit ( * ( colon + 1 ) ) ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",407,-7.77133774341353,-0.019094195929762973
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } if ( isdigit ( p + 2 ) ) { * portno = atoi ( p + 2 ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { if ( isdigit ( colon + 1 ) ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } } return host ; }",365,-11.135541404108064,-0.030508332613994698
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ; int port ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>port = atoi ( p + 2 ) ; if (port > 0 && port <= 65535) { *portno = port ;}<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>int port = atoi ( colon + 1 ) ; if (port > 0 && port <= 65535) { *portno = port ;} host = estrndup ( str , colon - str ) ;<EndBug> } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}",373,-14.794019232009996,-0.039662249951769424
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ; int port_len ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>port_len = str_len - ( p + 2 - str ) ; if ( port_len > 0 ) * portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>int port_len = str_len - ( colon + 1 - str ) ; if ( port_len > 0 ) * portno = atoi ( colon + 1 ) ;<EndBug> host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}",389,-15.637738111242575,-0.04019984090293721
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } if ( isdigit ( * ( p + 2 ) ) ) { * portno = atoi ( p + 2 ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { if ( isdigit ( * ( colon + 1 ) ) ) { * portno = atoi ( colon + 1 ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",411,-10.237189168734256,-0.02490800284363566
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = strtol ( p + 2 , NULL , 10 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = strtol ( colon + 1 , NULL , 10 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; }",309,-6.2447203268497695,-0.020209450895953947
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ; if ( str_len < 3 || * ( str ) != '[' || * ( str + str_len - 1 ) != ']' ) {<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>if (!isdigit(*(colon+1)) || atoi(colon+1) < 0 || atoi(colon+1) > 65535) { if (get_err) { *err = strpprintf(0, ""Failed to parse address \\""%s\\"""", str); } return NULL; } *portno = atoi(colon + 1); host = estrndup(str, colon - str);<EndBug> } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}",439,-28.872477468687617,-0.06576874138653216
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ; int port ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>port = atoi ( p + 2 ) ; if ( port >= 0 && port <= 65535 ) { * portno = port ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse port from IPv6 address \\""%s\\"""" , str ) ; return NULL ; }<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>int port = atoi ( colon + 1 ) ; if ( port >= 0 && port <= 65535 ) { * portno = port ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse port from address \\""%s\\"""" , str ) ; } return NULL ; }<EndBug> host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}",458,-22.4047995513362,-0.04891877631296113
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ; int port_num;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>port_num = atoi ( p + 2 ) ; if (port_num > 0 && port_num < 65535) { * portno = port_num; return estrndup ( str + 1 , p - str - 1 ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; }<EndBug> } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>int port_num = atoi ( colon + 1 ) ; if (port_num > 0 && port_num < 65535) { * portno = port_num; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } <EndBug>} else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}",473,-21.117704710957195,-0.04464631017115686
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:","
static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>if ( * ( p + 1 ) == ':' ) { * portno = atoi ( p + 2 ) ; }<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>if ( * ( colon + 1 ) != '\0' ) { * portno = atoi ( colon + 1 ) ; }<EndBug> host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}",366,-14.599198894896867,-0.039888521570756466
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } if ( isdigit(p + 2) == 0 ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ;} return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { if ( isdigit(colon + 1) == 0 ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; }",404,-15.807745580341978,-0.03912808311965836
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," 
static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ; p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>if (p) { * portno = atoi ( p + 2 ) ;}<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>if (portno) { * portno = atoi ( colon + 1 ) ;}<EndBug> host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}",342,-18.784323047852126,-0.054924921192550075
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } if (p+2 >= str+str_len) { if (get_err) { *err = strpprintf(0,""Failed to parse address \\""%s\\"""", str); } return NULL; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { if (colon+1 >= str+str_len) { if (get_err) { *err = strpprintf(0,""Failed to parse address \\""%s\\"""", str); } return NULL; } * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; }",398,-19.861009216677342,-0.04990203320773202
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ; int port_num ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>port_num = atoi ( p + 2 ) ;if (port_num < 0 || port_num > 65535){if (get_err){*err = strpprintf(0, ""Failed to parse IPv6 address \\""%s\\"" due to invalid port number"" , str);}return NULL;} * portno = port_num;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>int port_num = atoi ( colon + 1 ) ;if (port_num < 0 || port_num > 65535){if (get_err){*err = strpprintf(0, ""Failed to parse address \\""%s\\"" due to invalid port number"" , str);}return NULL;} * portno = port_num ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}",467,-32.654449131916266,-0.06992387394414618
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' || ! isdigit ( * ( p + 2 ) ) ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { if ( ! isdigit ( * ( colon + 1 ) ) ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ; } return NULL ; } return host ; }",364,-7.176635844159304,-0.019716032538899187
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>if(!isdigit(*(p+2))){if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ;} return NULL ;} else {* portno = atoi ( p + 2 ) ;}<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>if(!isdigit(*(colon+1))){if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ;} else {* portno = atoi ( colon + 1 ) ;}<EndBug> host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; }",425,-20.516921863376872,-0.04827511026676911
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> <StartBug>if ( portno < 0 || portno > 65535 ) { if ( get_err ) { * err = strpprintf ( 0 , ""Invalid port number %d"" , portno ) ; } return NULL ; }<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; <StartBug>if ( portno < 0 || portno > 65535 ) { if ( get_err ) { * err = strpprintf ( 0 , ""Invalid port number %d"" , portno ) ; } return NULL ; }<EndBug> host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}",443,-21.034768404090997,-0.047482547187564325
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:","
static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>if (p - str - 1 > 0){ * portno = atoi ( p + 2 ) ; }<EndBug> else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>if (colon - str > 0){ * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; }<EndBug> else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}",396,-21.264905127538146,-0.05369925537257107
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ; if ( str_len < 2 || * ( str ) != '[' || * ( str + str_len - 1 ) != ']' ) {<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; if ( colon - str > 0 ) {host = estrndup ( str , colon - str ) ;}<EndBug> } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}",376,-17.176240832614624,-0.045681491576102726
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>if (p != NULL && * ( p + 1 ) == ':' && str_len > (size_t) (p - str + 2) ) { <EndBug> * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } <StartBug>}<EndBug> # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; <StartBug>} else {<EndBug> if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; }",358,-34.504136427548715,-0.09638026935069474
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ; int portno_int ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>portno_int = atoi ( p + 2 ) ; if (portno_int < 0 || portno_int > 65535) { if (get_err) { *err = strpprintf(0, ""Port number must be between 0 and 65535""); } return NULL; } *portno = portno_int;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>int portno_int = atoi ( colon + 1 ) ; if (portno_int < 0 || portno_int > 65535) { if (get_err) { *err = strpprintf(0, ""Port number must be between 0 and 65535""); } return NULL; } *portno = portno_int;<EndBug> host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}",464,-17.298238407137834,-0.03728068622227981
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ; int port ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>port = atoi ( p + 2 ) ; if (port < 1 || port > 65535) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; }* portno = port ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>int port = atoi ( colon + 1 ) ; if (port < 1 || port > 65535) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } * portno = port ; host = estrndup ( str , colon - str ) ;<EndBug> } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}",449,-19.864662177215614,-0.04424200930337553
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:","
static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; if(*portno < 0 || *portno > 65535) { if ( get_err ) { * err = strpprintf ( 0 , ""Invalid port number in IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; if(*portno < 0 || *portno > 65535) { if ( get_err ) { * err = strpprintf ( 0 , ""Invalid port number in address \\""%s\\"""" , str ) ;} return NULL ; } host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; }",408,-14.684259228747099,-0.0359908314430076
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; if ( ! * portno ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse port number \\""%s\\"""" , str ) ; } return NULL ; } return estrndup ( str + 1 , p - str - 1 ) ; # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; if ( ! * portno ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse port number \\""%s\\"""" , str ) ; } return NULL ; } host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; }",392,-19.204690497120836,-0.04899155739061438
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } * portno = atoi ( p + 2 ) ; if (p+2 == NULL || *(p+2) < '0' || *(p+2) > '9') { if (get_err) { *err = strpprintf(0, ""Failed to parse port number from address \\""%s\\"""", str); } return NULL; } return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; if (colon+1 == NULL || *(colon+1) < '0' || *(colon+1) > '9') { if (get_err) { *err = strpprintf(0, ""Failed to parse port number from address \\""%s\\"""", str); } return NULL; } host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; }",442,-25.13813826656742,-0.0568736159877091
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>if(atoi(p+2) > 0 && atoi(p+2) <= 65535) {* portno = atoi ( p + 2 ) ;} else {if (get_err) {*err = strpprintf(0, ""Failed to parse port number in IPv6 address \\""%s\\"""", str);} return NULL; }<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>if(atoi(colon+1) > 0 && atoi(colon+1) <= 65535) {* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ;} else {if (get_err) {*err = strpprintf(0, ""Failed to parse port number in address \\""%s\\"""", str);} return NULL; }<EndBug> } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; }",449,-27.437988835947365,-0.061109106538858274
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <EndBug>* portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = strtol(colon + 1, NULL, 10);<EndBug> host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}",332,-13.368270829679926,-0.040265875993011825
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>if (p && isdigit(*(p+2))) {* portno = atoi ( p + 2 ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ;}<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>if (isdigit(*(colon + 1))) {* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ;} else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ;}<EndBug> else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; }",422,-22.655920551894827,-0.053687015525817124
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; }* portno = atoi ( p + 2 ) ; if(atoi(p+2) > 65535 || atoi(p+2) < 0) { if ( get_err ) { * err = strpprintf ( 0 , ""Port number is invalid \\""%s\\"""" , str ) ; } return NULL ; } return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { * portno = atoi ( colon + 1 ) ; if(atoi(colon+1) > 65535 || atoi(colon+1) < 0) { if ( get_err ) { * err = strpprintf ( 0 , ""Port number is invalid \\""%s\\"""" , str ) ; } return NULL ; } host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; }",423,-24.792648027915018,-0.05861146105890075
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 char * p ; if ( * ( str ) == '[' && str_len > 1 ) { p = memchr ( str + 1 , ']' , str_len - 2 ) ; if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>if ( p + 2 > str + str_len ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; }<EndBug> * portno = atoi ( p + 2 ) ; return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>if ( colon + 1 > str + str_len ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; }<EndBug> * portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; }",419,-12.557258772023584,-0.029969591341345067
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ; int portno_int ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>portno_int = atoi ( p + 2 ) ;if (portno_int > 0) { *portno = portno_int ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; }<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>int portno_int  = atoi ( colon + 1 ) ; if (portno_int > 0) { *portno = portno_int ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; }<EndBug> host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}",467,-28.46107500653346,-0.060944486095360725
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>* portno = atoi ( colon + 1 ) ; host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}
Fixed code:"," static inline char * parse_ip_address_ex ( const char * str , size_t str_len , int * portno , int get_err , zend_string * * err ) { char * colon ; char * host = NULL ; # ifdef HAVE_IPV6 <StartBug>char * p ;<EndBug> if ( * ( str ) == '[' && str_len > 1 ) { <StartBug>p = memchr ( str + 1 , ']' , str_len - 2 ) ;<EndBug> if ( ! p || * ( p + 1 ) != ':' || ! isdigit ( * ( p + 2 ) ) ) { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse IPv6 address \\""%s\\"""" , str ) ; } return NULL ; } <StartBug>* portno = atoi ( p + 2 ) ;<EndBug> return estrndup ( str + 1 , p - str - 1 ) ; } # endif if ( str_len ) { colon = memchr ( str , ':' , str_len - 1 ) ; } else { colon = NULL ; } if ( colon ) { <StartBug>if(!isdigit(*(colon + 1))) {if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ;} * portno = atoi ( colon + 1 ) ;<EndBug> host = estrndup ( str , colon - str ) ; } else { if ( get_err ) { * err = strpprintf ( 0 , ""Failed to parse address \\""%s\\"""" , str ) ;} return NULL ; } return host ; <EndBug>}",399,-16.528129921391653,-0.04142388451476604
