Original code,Plausible Program,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char * sanitized_data = r_str_escape ( data ) ; if ( ! sanitized_data ) { eprintf ( ""Error escaping string

"" ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( sanitized_data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) sanitized_data , strlen ( sanitized_data ) ) ; free ( sanitized_data ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",530,-21.597730588446215,-0.04075043507254003
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","

R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } 
// Sanitize input to prevent OS Command Injection 
char* sanitizedPath = calloc(strlen(path)+1, sizeof(char));
strcpy(sanitizedPath, path);
for (int i = 0; i < strlen(sanitizedPath); i++) {
    if (sanitizedPath[i] == ';' || sanitizedPath[i] == '&' || sanitizedPath[i] == '|') {
        sanitizedPath[i] = ' ';
    }
}

r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , sanitizedPath , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> free(sanitizedPath); }",598,-40.654883229227096,-0.06798475456392492
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char *safePath = r_str_sanitize (path); r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , safePath , host , ( int ) strlen ( data ) ) ; free ( safePath ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",488,-15.901665824447823,-0.03258538078780292
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } char * host_escaped = r_str_escape (host); if ( ! r_socket_connect_tcp ( s , host_escaped , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host_escaped , port ) ; free ( uri ) ; free(host_escaped); return NULL ; } free(host_escaped); r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",502,-16.221695936928572,-0.032314135332527034
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } //Added escaping of 'path' string char* escaped_path = malloc(strlen(path)*2+1); r_str_escape (escaped_path, path); //Create a new socket s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } //Changed to use escaped_path instead of path r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , escaped_path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; free (escaped_path) ; //Added return r_socket_http_answer ( s , code , rlen ) ; }",524,-61.29009154839727,-0.11696582356564365
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char * formattedPath = r_str_newf(""/%s"", path); r_socket_printf ( s , ""POST %s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , formattedPath , host , ( int ) strlen ( data ) ) ; free ( uri ) ; free(formattedPath); r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",490,-13.21968865517273,-0.02697895643912802
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } // Fixed code - escape input to prevent command injection char * escapedPath = r_str_escape ( path ) ; s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , escapedPath , host , ( int ) strlen ( data ) ) ; free ( uri ) ; free ( escapedPath ) ; // end fixed code r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; return r_socket_http_answer ( s , code , rlen ) ; }",493,-29.83955377793996,-0.060526478251399514
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } char * cleanPath = malloc(strlen(path) + 1); if (!cleanPath) { printf(""malloc failed""); return NULL; } strcpy(cleanPath, path); for (int i = 0; i < strlen(cleanPath); i++) { if (cleanPath[i] == ';' || cleanPath[i] == '&' || cleanPath[i] == '|' || cleanPath[i] == '$' || cleanPath[i] == '`') { cleanPath[i] = ' '; } } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , cleanPath , host , ( int ) strlen ( data ) ) ; free ( uri ) ; free(cleanPath); r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; return r_socket_http_answer ( s , code , rlen ) ; }",586,-32.19945867525912,-0.05494788169839441
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } //Ensuring the data passed in is sanitized before use char * sanitized_data = r_str_sanitize_sprintf ( data ) ; 
r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( sanitized_data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) sanitized_data , strlen ( sanitized_data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",512,-38.0584972986965,-0.0743330025365166
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } 
// sanitize the argument
char* host_san = malloc(strlen(host) + 1);
strcpy(host_san, host);

if ( ! r_socket_connect_tcp ( s , host_san , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host_san , port ) ; free ( uri ) ; free(host_san); return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host_san , ( int ) strlen ( data ) ) ; free ( uri ) ; free(host_san);

r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; 

return r_socket_http_answer ( s , code , rlen ) ; 

}",523,-43.875650485538195,-0.08389225714252045
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } 
 s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } 
// Escape the input to prevent command injection
char *escaped_data = r_str_escaped_char ( data , strlen ( data ) ) ;

r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( escaped_data ) ) ; 

free ( uri ) ; 
r_socket_write ( s , ( void * ) escaped_data , strlen ( escaped_data ) ) ;
free ( escaped_data ) ;
 <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",527,-55.11161049619349,-0.10457611099846963
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } char * cleanPath = malloc(strlen(path) + 1); strcpy(cleanPath, path); /* <StartBug> */ r_str_trim ( cleanPath ) ; /* <EndBug> */ if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , cleanPath , host , ( int ) strlen ( data ) ) ; free ( uri ) ; free ( cleanPath ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; return r_socket_http_answer ( s , code , rlen ) ; }",513,-32.363116841427214,-0.06308599774157352
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char *escaped_path = r_str_escape(path); r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , escaped_path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; free(escaped_path); r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",490,-12.106982232287338,-0.024708127004668037
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } char * filtered_host = r_str_escape ( host ) ; char * filtered_path = r_str_escape ( path ) ; if ( ! r_socket_connect_tcp ( s , filtered_host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , filtered_host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , filtered_path , filtered_host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; free ( filtered_host ) ; free ( filtered_path ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",518,-16.195757029418434,-0.031265940211232496
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char * safe_path = r_str_arg_escape ( path ) ; if ( ! safe_path ) { printf ( ""Cannot escape path\\n"" ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , safe_path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; free ( safe_path ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",522,-15.016526042306731,-0.02876729126878684
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } char * sanitized_host = r_str_sanitize ( host ) ; if ( ! r_socket_connect_tcp ( s , sanitized_host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; free ( sanitized_host ) ; return NULL ; } free ( sanitized_host ) ; r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",503,-12.887058586627326,-0.025620394804428084
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } <StartBug> char * escapedPath = path; size_t escapedPathLength = strlen(escapedPath); char * escapedData = data; size_t escapedDataLength = strlen(escapedData); escapedPath = escapeString(escapedPath, &escapedPathLength); escapedData = escapeString(escapedData, &escapedDataLength); <EndBug> s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , escapedPath , host , ( int ) escapedDataLength ) ; free ( uri ) ; r_socket_write ( s , ( void * ) escapedData , escapedDataLength ) ; <StartBug> free(escapedPath); free(escapedData); <EndBug> return r_socket_http_answer ( s , code , rlen ) ; }",558,-35.678393066444194,-0.06393977252050931
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char* sanitizedPath = r_str_sanitize_sprintf ( path ) ; r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , sanitizedPath , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> free ( sanitizedPath ) ; return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",495,-12.376583216041725,-0.02500319841624591
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char * safePath = r_str_escape ( path ) ; if ( ! safePath ) { free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , safePath , host , ( int ) strlen ( data ) ) ; free ( uri ) ; free ( safePath ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",504,-10.088780178646834,-0.02001742098937864
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } //Fix below if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char *cmd; cmd = r_str_newf (""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) cmd , strlen ( cmd ) ) ; <StartBug> free(cmd); return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",477,-33.093821130645914,-0.06937907993846104
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char * cmd = malloc(strlen(path)+strlen(host)+strlen(data)+50); sprintf(cmd, ""POST /%s HTTP/1.0\\r\\nUser-Agent: radare2 "" R2_VERSION ""\\r\\nAccept: */*\\r\\nHost: %s\\r\\nContent-Length: %i\\r\\nContent-Type: application/x-www-form-urlencoded\\r\\n\\r\\n%s"" , path , host , ( int ) strlen ( data ) , data); free ( uri ) ; r_socket_write ( s , ( void * ) cmd , strlen ( cmd ) ) ; free(cmd); <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",483,-20.973555066661895,-0.043423509454786534
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } char * safe_host = r_str_escape ( host ) ; char * safe_port = r_str_escape ( port ) ; if ( ! r_socket_connect_tcp ( s , safe_host , safe_port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } free ( safe_host ) ; free ( safe_port ) ; r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",514,-11.201743163697934,-0.02179327463754462
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } char * sanitized_host = r_str_sanitize_spprintf ( host , 0 ) ; if ( sanitized_host == NULL ) { eprintf ( ""Cannot sanitize hostname\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , sanitized_host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , sanitized_host , port ) ; free ( uri ) ; free ( sanitized_host ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , sanitized_host , ( int ) strlen ( data ) ) ; free ( uri ) ; free ( sanitized_host ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",552,-27.541937185017716,-0.049894813740974125
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } path = r_str_replace ( path , "" "" , """" , 0 ) ; //added to replace whitespaces with empty characters r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> // added code if ( path != NULL ) { r_str_sanitize_s ( path ) ; } return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",517,-56.293124831525134,-0.1088841872950196
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } // <StartBug> char * escapedPath = r_str_escape ( path ) ; // <EndBug> r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , escapedPath, host , ( int ) strlen ( data ) ) ; // <StartBug> free ( escapedPath ) ; // <EndBug> free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; return r_socket_http_answer ( s , code , rlen ) ; }",500,-21.609719760011195,-0.04321943952002239
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } 
char *safe_host = r_str_escape_latin1 (host);
char *safe_path = r_str_escape_latin1 (path);
if ( ! r_socket_connect_tcp ( s , safe_host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , safe_host , port ) ; free ( uri ) ; free (safe_host); free(safe_path); return NULL ; } 
r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , safe_path , safe_host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; free(safe_host); free(safe_path);
<StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",541,-29.020403208730894,-0.053642150108559876
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } const size_t query_len = strlen(data); char * query = malloc(sizeof(char) * (query_len + 1)); strcpy(query, data); for(int i = 0; i < query_len; i++){ if(query[i] == ';' || query[i] == '&' || query[i] == '|'){ query[i] = '\0'; } } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( query ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) query , strlen ( query ) ) ; free(query); <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",567,-41.521170215750736,-0.07322957710008948
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } /* Sanitize the path here to prevent OS Command Injection. */ char sanitizedPath[strlen(path)] ; sanitizePath (path , sanitizedPath) ; r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , sanitizedPath , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }

void sanitizePath(char * path , char * sanitizedPath) {
    int i , j ;
    for(i = 0 , j = 0 ; i < strlen(path) ; i++) {
        if(path[i] != '\\' && path[i] != '""' && path[i] != '\'' && path[i] != ';') {
            sanitizedPath[j] = path[i] ;
            j++;
        }
    }
    sanitizedPath[j] = '\0' ;
}",634,-72.84117894947754,-0.11489144944712545
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } char * cleanPath = r_str_escape_latin1 ( path , true , false , false , false ) ; if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; free ( cleanPath ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , cleanPath , host , ( int ) strlen ( data ) ) ; free ( uri ) ; free ( cleanPath ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",505,-23.29992141872673,-0.04613845825490442
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } path = r_str_escape ( path ) ; // <StartBug> r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; free ( path ) ; // <EndBug> return r_socket_http_answer ( s , code , rlen ) ; }",485,-14.465167689981985,-0.029825088020581415
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } <StartBug> char * newPath = malloc(strlen(path)+1); snprintf(newPath, strlen(path)+1, ""%s"", path); <EndBug> r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , newPath , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; return r_socket_http_answer ( s , code , rlen ) ; }",500,-17.601271263618557,-0.03520254252723711
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char * safeData = r_str_escape ( data ) ; if ( ! safeData ) { eprintf ( ""Error escaping data"" ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( safeData ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) safeData , strlen ( safeData ) ) ; free ( safeData ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",517,-17.277669892588296,-0.033419090701331325
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * safe_url = r_str_sanitize_sprintf ( url ) ; char * uri = strdup ( safe_url ) ; if ( ! uri ) { free ( safe_url ) ; return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( safe_url ) ; free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( safe_url ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( safe_url ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( safe_url ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> char * safe_data = r_str_sanitize_sprintf ( data ) ; return r_socket_http_answer ( s , code , rlen ) ; <EndBug> free ( safe_data ) ; }",550,-20.05383225486415,-0.03646151319066209
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } int length = snprintf(NULL, 0, ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ); char * buffer = malloc(length * sizeof(char) + 1); snprintf(buffer, length + 1, ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ); free ( uri ) ; r_socket_write ( s , ( void * ) buffer , strlen ( buffer ) ) ; free (buffer); <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",603,-25.469169662665298,-0.04223742895964394
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } 

//Fixed code
char *host_safe = r_str_escape (host); 
char *port_safe = r_str_escape (port); 

if ( ! r_socket_connect_tcp ( s , host_safe , port_safe , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host_safe , port_safe ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; 

//Fixed code
<StartBug> free(host_safe); 
free(port_safe); 
<EndBug>

return r_socket_http_answer ( s , code , rlen ) ; 
}",541,-40.01666654652591,-0.07396796034477987
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char* safePath = r_str_escape(path); r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , safePath , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; free(safePath); <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",485,-11.632870909245531,-0.023985300843805218
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","

R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } 

char* sanitized_host = r_str_sanitize_s(host);
char* sanitized_path = r_str_sanitize_s(path);

if ( ! r_socket_connect_tcp ( s , sanitized_host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } 

free(sanitized_host);
free(sanitized_path);   

r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; 

return r_socket_http_answer ( s , code , rlen ) ;
}",532,-37.84754818930175,-0.07114200787462735
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; // sanitize user input char * tmphost = r_str_escape (host); char * port = strchr ( tmphost , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( tmphost , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , tmphost , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , tmphost , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , tmphost , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> free (tmphost); return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",502,-31.954533974649607,-0.0636544501487044
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } 

// Sanitize the user input data before using it in the POST request. 
char * data_sanitized = r_str_escape ( data ) ;

r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data_sanitized ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data_sanitized , strlen ( data_sanitized ) ) ; free ( data_sanitized ) ;

<StartBug>
// Replace the return statement
char * response = r_socket_http_answer ( s , code , rlen ) ;
return response ; 
<EndBug>
}",541,-63.339673688440065,-0.11707887927622933
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } char * fixed_path = malloc (strlen(path)+1); strcpy(fixed_path, path); int i; for(i = 0; i < strlen(path); i++){ switch(fixed_path[i]){ case '&': case '|': case ';': case '$': case '`': fixed_path[i] = ' '; break; default: break; } } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , fixed_path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; free(fixed_path); <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",566,-40.64897995047813,-0.07181798577822991
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char *sanitized_path = r_str_escape(path); r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , sanitized_path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; free(sanitized_path); r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; return r_socket_http_answer ( s , code , rlen ) ; }",483,-16.383991510843238,-0.033921307475865914
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; int cmdlen = strlen ( url ); char * cmd = calloc ( cmdlen + 1 , sizeof ( char ) ) ; strncpy ( cmd , url , cmdlen ) ; if ( ! cmd ) { return NULL ; } char * host = strstr ( cmd , ""://"" ) ; if ( ! host ) { free ( cmd ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( cmd ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( cmd ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( cmd ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> char * post_url_escaped = r_str_escape ( url ) ; if ( ! post_url_escaped ) { eprintf ( ""Error escaping url"" ) ; return NULL ; } r_socket_printf ( s , ""POST %s HTTP/1.0\\r\\n"" , post_url_escaped ) ; free ( post_url_escaped ) ; <EndBug> return r_socket_http_answer ( s , code , rlen ) ; }",571,-54.56428097258588,-0.09555916107282991
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char* mangledPath = r_str_escape ( path ) ; // Escape the path to avoid any malicious command injection r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , mangledPath , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; free ( mangledPath ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",500,-35.1288284060613,-0.0702576568121226
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } int pathSize = strlen ( path ) ; char * buffer = malloc ( pathSize + 1 ) ; if ( ! buffer ) { printf ( ""Cannot allocate memory\\n"" ) ; free ( uri ) ; return NULL ; } memcpy ( buffer , path , pathSize ) ; buffer [ pathSize ] = '\0' ; /* Escape the dangerous characters */ char * escape = r_str_escape ( buffer ) ; free ( buffer ) ; r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , escape , host , ( int ) strlen ( data ) ) ; free ( uri ) ; free ( escape ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",569,-53.852892940856215,-0.09464480305950125
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } //Fix CWE-78: validate user input and remove potential exploit commands //remove any characters that may be used to inject system commands char * sanitizedPath = NULL; sanitizedPath = r_str_sanitize_s(path); if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , sanitizedPath , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",519,-75.14934648818675,-0.14479642868629433
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } char * escapedPath = r_str_arg_escape (path); r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , escapedPath , host , ( int ) strlen ( data ) ) ; free ( uri ) ; free (escapedPath); r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",489,-15.301894496061735,-0.03129221778335733
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:","
R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * safe_url = r_str_ndup ( url , strlen ( url ) ) ; char * uri = r_str_uri_decode ( safe_url ) ; if ( ! uri ) { free ( safe_url ) ; return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; free ( safe_url ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; free ( safe_url ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; free ( safe_url ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> char * safe_data = r_str_uri_decode ( data ) ; if ( ! safe_data ) { return NULL ; } char * ret = r_socket_http_answer ( s , code , rlen ) ; free ( safe_data ) ; return ret ; <EndBug> }",567,-29.55499621282424,-0.05212521377923146
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; size_t len = strlen(url); char * uri = (char *) calloc (len + 1, sizeof (char)) ; if ( ! uri ) { return NULL ; } strcpy (uri, url) ; char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; <StartBug> char *bdata = (char *) calloc (strlen(data) + 1, sizeof (char)) ; if ( ! bdata ) { free ( uri ) ; printf ( ""Out of Memory\\n"" ) ; return NULL ; } strcpy (bdata, data); r_socket_write ( s , ( void * ) bdata , strlen ( bdata ) ) ; free (bdata) ; <EndBug> return r_socket_http_answer ( s , code , rlen ) ; }",562,-56.5587442848757,-0.10063833502646923
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * sanitized_host = malloc ( strlen ( host ) + 1 ) ; if ( ! sanitized_host ) { free ( uri ) ; printf ( ""Out of memory"" ) ; return NULL ; } for ( int i = 0 ; i < strlen ( host ) ; i ++ ) { if ( ! isalnum ( host [ i ] ) ) { sanitized_host [ i ] = '\0' ; } else { sanitized_host [ i ] = host [ i ] ; } } sanitized_host [ strlen ( host ) ] = '\0' ; char * port = strchr ( sanitized_host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( sanitized_host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , sanitized_host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , sanitized_host , port ) ; free ( uri ) ; free ( sanitized_host ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , sanitized_host , ( int ) strlen ( data ) ) ; free ( uri ) ; free ( sanitized_host ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }",625,-28.90984001058594,-0.0462557440169375
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , path , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> }
Fixed code:"," R_API char * r_socket_http_post ( const char * url , const char * data , int * code , int * rlen ) { RSocket * s ; bool ssl = r_str_startswith ( url , ""https://"" ) ; char * uri = strdup ( url ) ; if ( ! uri ) { return NULL ; } char * host = strstr ( uri , ""://"" ) ; if ( ! host ) { free ( uri ) ; printf ( ""Invalid URI"" ) ; return NULL ; } host += 3 ; char * port = strchr ( host , ':' ) ; if ( ! port ) { port = ( ssl ) ? ""443"" : ""80"" ; } else { * port ++ = 0 ; } char * path = strchr ( host , '/' ) ; if ( ! path ) { path = """" ; } else { * path ++ = 0 ; } s = r_socket_new ( ssl ) ; if ( ! s ) { printf ( ""Cannot create socket\\n"" ) ; free ( uri ) ; return NULL ; } int pathLen = strlen(path); char * fixedPath = malloc(sizeof(char) * pathLen + 1); int i; for (i = 0; i < pathLen; i++) { if (path[i] == ';' || path[i] == '&' || path[i] == '|' || path[i] == '$' || path[i] == '`') { fixedPath[i] = ' '; } else { fixedPath[i] = path[i]; } } fixedPath[i] = '\0'; if ( ! r_socket_connect_tcp ( s , host , port , 0 ) ) { eprintf ( ""Cannot connect to %s:%s\\n"" , host , port ) ; free ( uri ) ; return NULL ; } r_socket_printf ( s , ""POST /%s HTTP/1.0\\r\\n"" ""User-Agent: radare2 "" R2_VERSION ""\\r\\n"" ""Accept: */*\\r\\n"" ""Host: %s\\r\\n"" ""Content-Length: %i\\r\\n"" ""Content-Type: application/x-www-form-urlencoded\\r\\n"" ""\\r\\n"" , fixedPath , host , ( int ) strlen ( data ) ) ; free ( uri ) ; r_socket_write ( s , ( void * ) data , strlen ( data ) ) ; <StartBug> return r_socket_http_answer ( s , code , rlen ) ; <EndBug> free(fixedPath); }",598,-33.58113153732953,-0.05615573835673835
