Original code,Plausible Program,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) {  switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }",121,-9.454858377559798,-0.0781393254343785
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( * arg == '@' || * arg == '`' || * arg == '|' || * arg == ';' || * arg == '\\n' ) { break ; } else { * b ++ = * arg ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",139,-4.576383248456998,-0.03292362049249639
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : arg++; // Advance argument pointer <EndBug> break ; default : <StartBug> * b ++ = * arg ; // Escape character <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }",158,-27.661880945220993,-0.17507519585582906
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( * arg == '@' || * arg == '`' || * arg == '|' || * arg == ';' || * arg == '\\n' ) { break ; } else { * b ++ = * arg ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",139,-4.576383248456998,-0.03292362049249639
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; <EndBug> } arg ++ ; } * b = 0 ; return a ; }",133,-6.085009645005002,-0.04575195221808272
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> //case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }",151,-9.329466180565698,-0.06178454424215694
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( * arg == '@' || * arg == '`' || * arg == '|' || * arg == ';' || * arg == '\n' ) { break ; } <EndBug> * b ++ = * arg ; arg ++ ; } * b = 0 ; return a ; }",136,-9.481556648003004,-0.06971732829413974
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if (*arg == '@' || *arg == '`' || *arg == '|' || *arg == ';' || *arg == '\\n') { break; } else { * b ++ = * arg ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",137,-7.020585301073003,-0.051245148183014615
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( isalpha(*arg) ) { * b ++ = * arg ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",104,-11.463259538638,-0.11022364940998078
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( isalnum ( * arg ) || isspace ( * arg ) ) { * b ++ = * arg ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",113,-5.708136785576001,-0.05051448482810621
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> * b ++ ='\\'; * b ++ ='n'; <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }",167,-17.065984032160806,-0.1021915211506635
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : <StartBug> break ; <EndBug> default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; <EndBug> }",143,-7.056868314519001,-0.049348729472160846
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { case ' ' : case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : * b ++ = '\\' ; * b ++ = 'n' ; <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }",165,-15.363435252046598,-0.09311172880028241
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : <StartBug> break ; <EndBug> default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }",139,-6.725550977748999,-0.04838525883272661
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( isalnum ( * arg ) || isblank ( * arg ) || * arg == '_' || * arg == '-' ) { <EndBug> * b ++ = * arg ; } arg ++ ; } * b = 0 ; return a ; }",126,-14.937986343650998,-0.11855544717183332
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( * arg == '@' || * arg == '`' || * arg == '|' || * arg == ';' || *arg == '\\n' ) { break; } else { * b ++ = * arg ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",139,-11.310660207355996,-0.08137165616802874
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : * b ++ = * arg ; break ; } arg ++ ; } * b = 0 ; return a ; }",133,-10.4595512080555,-0.07864324216583082
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( * arg == '@' || * arg == '`' || * arg == '|' || * arg == ';' || * arg == '\\n' ) { // Do nothing } else { * b ++ = * arg ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",140,-10.0276873118525,-0.07162633794180356
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( * arg == '@' || * arg == '`' || * arg == '|' || * arg == ';' || * arg == '\\n' ) { break ; } <EndBug> <StartBug> * b ++ = * arg ; <EndBug> arg ++ ; } * b = 0 ; return a ; }",145,-7.560841317224402,-0.052143733222237254
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> //case '\\n' : <EndBug> break ; default : <StartBug> if (*arg != '\\n') { * b ++ = * arg ; } <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }",160,-9.036251344368496,-0.056476570902303104
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { 
<StartBug> switch ( * arg ) { 
case '@' : case '`' : case '|' : case ';' : case '\\n' : break ; default : 
// Filter out non-printable characters 
if (isprint((int)*arg) != 0) { * b ++ = * arg ; } break ; <EndBug> }
 arg ++ ; } * b = 0 ; return a ; }",165,-45.50207497699039,-0.2757701513756993
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( * arg < ' ' || * arg > '~' ) { arg ++ ; continue ; } <EndBug> <StartBug> * b ++ = * arg ; <EndBug> arg ++ ; } * b = 0 ; return a ; }",124,-12.704186560833595,-0.10245311742607738
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\' : case '""' : case '\'' : case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }",155,-11.517315702131498,-0.07430526259439676
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," 

static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if(isalnum(*arg) || *arg == ' ' || *arg == '.' || *arg == '=' || *arg == ',' || *arg == '+' || *arg == '-') { *b++ = *arg; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",144,-29.721894566613283,-0.20640204560148112
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : break ; <EndBug> case '\\n' : break ; <StartBug> default : if ( strchr ( "";&|<>$*(){}[]'\"" \t\r

"" , * arg ) == NULL ) { * b ++ = * arg ; } break ; <EndBug> } arg ++ ; } * b = 0 ; return a ; }",178,-31.140654288483503,-0.1749474960027163
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : case '\\' : <StartBug> case '\\n' : case '\\t' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }",160,-9.8960754827419,-0.06185047176713687
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( * arg == '@' || * arg  == '`' || * arg == '|' || * arg == ';' || * arg == '\\n' ) { break ; } else { * b ++ = * arg ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",141,-14.225320313697404,-0.10088879655104542
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> if ( arg != '\\' || * ( arg + 1 ) != '\'' ) { * b ++ = * arg ; } <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }",170,-22.521453895889,-0.13247914056405294
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> if ( * arg == '\\' ) { break ; } * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }",162,-10.2649065112879,-0.06336362044004877
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if (!(isalnum(*arg) || *arg == '-' || *arg == '_' || *arg == '.')) {//validate legal characters <EndBug> break ; } <StartBug> * b ++ = * arg ; <EndBug> arg ++ ; } * b = 0 ; return a ; }",139,-33.912024094255486,-0.24397139636155027
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( ! isalnum ( ( int ) * arg ) && * arg != '_' ) { break ; } <EndBug> * b ++ = * arg ; arg ++ ; } * b = 0 ; return a ; }",120,-13.275083494052403,-0.11062569578377003
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( isalnum ( * arg ) || * arg == ' ' || *arg == '\t' ) { * b ++ = * arg ; } else if ( * arg == '\\' && *( arg + 1 ) == 'n' ) { * b ++ = '

'; arg ++ ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",154,-25.981120691023495,-0.16870857591573699
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> break ; <EndBug> default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }",143,-7.078947250236602,-0.04950312762403219
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if(!isalpha(*arg)) <EndBug> { <StartBug> * b ++ = '\\'; <EndBug> } <StartBug> * b ++ = * arg ; <EndBug> arg ++ ; } * b = 0 ; return a ; }",127,-21.785382907542505,-0.17153844809088586
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : <EndBug> <StartBug> // Case added to filter characters that could lead to OS Command Injection case '\\' : case '\'' : case '\""' : case '|' : case ';' : case '&' : case '$' : case '<' : case '>' : case '*' : // End of added case break ; <EndBug> default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }",212,-46.56318382040651,-0.21963765953021938
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( isalnum ( * arg ) || * arg == '_' || * arg == '-' || * arg == '.' ) { * b ++ = * arg ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",125,-9.381073095633,-0.07504858476506401
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { switch ( * arg ) { <StartBug> case '@' : case '`' : case '|' : case ';' : case '\\n' : <EndBug> break ; default : <StartBug>*b++ = *arg; if(*arg == '&'){ *b++ = ' '; }<EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }",157,-20.605261993815997,-0.13124370696698087
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> int ch = * arg ; if ( ch > 0 && ch <= 0x7f && ! ( ch == '@' || ch == '`' || ch == '|' || ch == ';' || ch == '\\n' ) ) { <EndBug> * b ++ = * arg ; } arg ++ ; } * b = 0 ; return a ; }",149,-24.86794487218701,-0.16689895887373832
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( isalnum ( * arg ) || * arg == '_' ) { * b ++ = * arg ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",113,-7.227542903044002,-0.06396055666410622
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> if (* arg == '\\') { arg++; } * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }",160,-11.250171262882,-0.0703135703930125
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( strchr ( ""@`|;\\n"" , * arg ) ) { break ; } else { * b ++ = * arg ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",119,-7.0839705149759995,-0.059529163991394955
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : break ; <EndBug> default : <StartBug> if (isalnum(*arg)) { * b ++ = * arg ; } <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }",154,-11.188845715779998,-0.07265484231025973
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> if ( isalnum ( * arg ) ) { * b ++ = * arg ; } else { * b ++ = '\\' ; * b ++ = * arg ; } <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }",175,-12.450544161699998,-0.07114596663828571
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> //case '\\n' : <EndBug> break ; default : <StartBug> if ( * arg == '\\' && * ( arg + 1 ) == 'n' ) { * b ++ = '

' ; arg ++ ; } else { * b ++ = * arg ; } <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }",187,-12.720620092245403,-0.06802470637564387
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if (strchr(""@`|;\\n"", *arg) != NULL) { break; } <EndBug> <StartBug> * b ++ = * arg ; <EndBug> arg ++ ; } * b = 0 ; return a ; }",125,-9.753602772190996,-0.07802882217752798
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if ( isalnum ( * arg ) || * arg == '_' || * arg == '-' || * arg == '.' ) { <EndBug> * b ++ = * arg ; } arg ++ ; } * b = 0 ; return a ; }",125,-10.627870839965997,-0.08502296671972798
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> char c = * arg ; if ( c == '@' || c == '`' || c == '|' || c == ';' || c == '\\n' ) { break ; } else { * b ++ = * arg ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",140,-9.626030709651,-0.06875736221179285
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> if (strpbrk(arg, ""@`|;\\n"") != NULL) { break; } else { * b ++ = * arg ; } <EndBug> arg ++ ; } * b = 0 ; return a ; }",121,-11.591432044358799,-0.09579695904428759
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:","
static char * __filterShell ( const char * arg ) { 
r_return_val_if_fail ( arg , NULL ) ; 
char * a = malloc ( strlen ( arg ) + 1 ) ; 
if ( ! a ) { 
return NULL ; 
} 
char * b = a ; 
while ( * arg ) { 
switch ( * arg ) { 
case '@' : 
case '`' : 
case '|' : 
case ';' : 
case '\\n' : 
break ; 
default : 
* b ++ = strip_string ( * arg ) ; 
break ; 
} 
arg ++ ; 
} 
* b = 0 ; 
return a ; 
} 
char strip_string ( char * s ) { 
char tmp [ 16 ] ; 
int i = 0 ; 
while ( s [ i ] ) { 
if ( s [ i ] == ';' || s [ i ] == '@' || s [ i ] == '`' || s [ i ] == '|' || s [ i ] == '$' ) { 
tmp [ i ] = '\0' ; 
return tmp ; 
} else { 
tmp [ i ] = s [ i ] ; 
i ++ ; 
} 
} 
tmp [ i ] = '\0' ; 
return tmp ; 
}",329,-65.53665623307572,-0.19919956301846722
"The Original Code is vulnerable to CWE-78: OS Command Injection. Fix the code between <StartBug> and <EndBug> to fix the vulnerability.
Original Code: static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { <EndBug> case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }
Fixed code:"," static char * __filterShell ( const char * arg ) { r_return_val_if_fail ( arg , NULL ) ; char * a = malloc ( strlen ( arg ) + 1 ) ; if ( ! a ) { return NULL ; } char * b = a ; while ( * arg ) { <StartBug> switch ( * arg ) { case '@' : case '`' : case '|' : case ';' : <StartBug> case '\\n' : <EndBug> break ; default : <StartBug> if ( ( * arg >= ' ' && * arg <= '~' ) || * arg == '\t' ) * b ++ = * arg ; <EndBug> break ; } arg ++ ; } * b = 0 ; return a ; }",170,-16.742363015957405,-0.09848448832916121
