Original code,Plausible Program,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) { 
  bool_t flag ; 
  size_t n ; 
  uint16_t ier ; 
  uint16_t isr ; 
  flag = FALSE ; 
  ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; 
  ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; 
  isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; 
  if ( ( isr & ISR_LCIS ) != 0 ) { 
    ier &= ~ IER_LCIE ; 
    interface -> nicEvent = TRUE ; 
    flag |= osSetEventFromIsr ( & netEvent ) ; 
  } 
  if ( ( isr & ISR_TXIS ) != 0 ) { 
    ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; 
    n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; 
    if ( n >= 0 && n <= ( ETH_MAX_FRAME_SIZE + 8 ) ) {  // Add input validation 
      flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; 
    } 
  } 
  if ( ( isr & ISR_RXIS ) != 0 ) { 
    ier &= ~ IER_RXIE ; 
    interface -> nicEvent = TRUE ; 
    flag |= osSetEventFromIsr ( & netEvent ) ; 
  } 
  ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; 
  return flag ; 
}",452,-17.68882520274828,-0.039134569032628935
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; 

//Add input validation
if (isr == 0) { 
  return flag; 
} 

if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }",388,-19.512354141814214,-0.050289572530449
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) { 
 bool_t flag ; 
 size_t n ; 
 uint16_t ier ; 
 uint16_t isr ; 
 flag = FALSE ; 
 ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; 
 ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; 
 isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; 
 //Add input validation
 int isrMask = ISR_LCIS | ISR_TXIS | ISR_RXIS;
 if (isr & ~isrMask)
 {
     return FALSE;
 }
 if ( ( isr & ISR_LCIS ) != 0 ) { 
  ier &= ~ IER_LCIE ; 
  interface -> nicEvent = TRUE ; 
  flag |= osSetEventFromIsr ( & netEvent ) ; 
 } 
 if ( ( isr & ISR_TXIS ) != 0 ) { 
  ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; 
  n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; 
  if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { 
   flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; 
  } 
 } 
 if ( ( isr & ISR_RXIS ) != 0 ) { 
  ier &= ~ IER_RXIE ; 
  interface -> nicEvent = TRUE ; 
  flag |= osSetEventFromIsr ( & netEvent ) ; 
 } 
 ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; 
 return flag ; 
}",477,-30.074951711306195,-0.06305021323124989
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) { 
bool_t flag ; 
size_t n ; 
uint16_t ier ; 
uint16_t isr ; 
flag = FALSE ; 
ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; 
ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; 
isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; 

//Check if input is valid
if (isr < 0xFFFF){
  if ( ( isr & ISR_LCIS ) != 0 ) { 
    ier &= ~ IER_LCIE ; 
    interface -> nicEvent = TRUE ; 
    flag |= osSetEventFromIsr ( & netEvent ) ; 
  } 
  if ( ( isr & ISR_TXIS ) != 0 ) { 
    ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; 
    n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; 
    if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { 
      flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; 
    } 
  } 
  if ( ( isr & ISR_RXIS ) != 0 ) { 
    ier &= ~ IER_RXIE ; 
    interface -> nicEvent = TRUE ; 
    flag |= osSetEventFromIsr ( & netEvent ) ; 
  } 
  ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; 
  return flag ; 
 }
 else {
   //Handle the invalid input
   return FALSE;
 }
}",470,-35.39965600607653,-0.07531841703420539
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) {
    bool_t flag ;
    size_t n ;
    uint16_t ier ;
    uint16_t isr ;
    flag = FALSE ;
    ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ;
    ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ;
    isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ;
    
    //Validate input
    if(isr > 0xFFFF)
        return flag;
    
    if ( ( isr & ISR_LCIS ) != 0 ) { 
        ier &= ~ IER_LCIE ;
        interface -> nicEvent = TRUE ;
        flag |= osSetEventFromIsr ( & netEvent ) ;
    }
    if ( ( isr & ISR_TXIS ) != 0 ) {
        ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ;
        n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ;
        if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) {
            flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ;
        }
    }
    if ( ( isr & ISR_RXIS ) != 0 ) { 
        ier &= ~ IER_RXIE ;
        interface -> nicEvent = TRUE ;
        flag |= osSetEventFromIsr ( & netEvent ) ;
    }
    ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ;
    return flag ;
}",443,-20.044885772954718,-0.04524804914888198
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler(NetInterface *interface) { 
    bool_t flag;
    size_t n;
    uint16_t ier;
    uint16_t isr;
    flag = FALSE;
    ier = ksz8851ReadReg(interface, KSZ8851_REG_IER);
    ksz8851WriteReg(interface, KSZ8851_REG_IER, 0);
    isr = ksz8851ReadReg(interface, KSZ8851_REG_ISR);
    if ((isr & ISR_LCIS) != 0) {
        ier &= ~IER_LCIE;
        interface->nicEvent = TRUE;
        flag |= osSetEventFromIsr(&netEvent);
    }
    if ((isr & ISR_TXIS) != 0) {
        //Sanitize the input
        n = ksz8851ReadReg(interface, KSZ8851_REG_TXMIR) & TXMIR_TXMA_MASK;
        //Validate the input
        if (n >= 0 && n <= (ETH_MAX_FRAME_SIZE + 8)) {
            ksz8851WriteReg(interface, KSZ8851_REG_ISR, ISR_TXIS);
            flag |= osSetEventFromIsr(&interface->nicTxEvent);
        }
    }
    if ((isr & ISR_RXIS) != 0) {
        ier &= ~IER_RXIE;
        interface->nicEvent = TRUE;
        flag |= osSetEventFromIsr(&netEvent);
    }
    ksz8851WriteReg(interface, KSZ8851_REG_IER, ier);
    return flag;
}",418,-33.099740685773206,-0.07918598250184977
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; // Added input validation if(n > 0 && n < (ETH_MAX_FRAME_SIZE + 8)) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }",367,-14.73747390268323,-0.04015660463946384
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; 
//Validate the ISR value before it is used
if ( isr > 0 && isr < 0xFF ) {
if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; 
//Validate the n value before it is used
if ( n > 0 && n < ( ETH_MAX_FRAME_SIZE + 8 ) ) {
flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; } return flag ; }",409,-36.523193431194485,-0.0892987614454633
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) { 
bool_t flag ; 
size_t n ; 
uint16_t ier ; 
uint16_t isr ; 
flag = FALSE ; 
ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; 
ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; 
isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; 

// Validate isr value
if ( isr > 0 && isr <= UINT16_MAX ) {
    if ( ( isr & ISR_LCIS ) != 0 ) { 
        ier &= ~ IER_LCIE ; 
        interface -> nicEvent = TRUE ; 
        flag |= osSetEventFromIsr ( & netEvent ) ; 
    } 
    if ( ( isr & ISR_TXIS ) != 0 ) { 
        ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; 
        n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; 
        if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { 
            flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; 
        } 
    } 
    if ( ( isr & ISR_RXIS ) != 0 ) { 
        ier &= ~ IER_RXIE ; 
        interface -> nicEvent = TRUE ; 
        flag |= osSetEventFromIsr ( & netEvent ) ; 
    } 
    ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; 
    return flag ; 
}
else {
    return FALSE;
}
}",471,-25.555901067910163,-0.05425881330766489
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) { 
 bool_t flag ; 
 size_t n ; 
 uint16_t ier ; 
 uint16_t isr ; 
 flag = FALSE ; 
 
 //Validate input
 if (interface == NULL) {
  return flag;
 }
 
 ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; 
 ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; 
 isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; 
 if ( ( isr & ISR_LCIS ) != 0 ) { 
  ier &= ~ IER_LCIE ; 
  interface -> nicEvent = TRUE ; 
  flag |= osSetEventFromIsr ( & netEvent ) ; 
 } 
 if ( ( isr & ISR_TXIS ) != 0 ) { 
  ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; 
  n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; 
  //Validate size
  if ( n < ( ETH_MAX_FRAME_SIZE + 8 ) ) { 
   flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; 
  }
 } 
 if ( ( isr & ISR_RXIS ) != 0 ) { 
  ier &= ~ IER_RXIE ; 
  interface -> nicEvent = TRUE ; 
  flag |= osSetEventFromIsr ( & netEvent ) ; 
 } 
 ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; 
 return flag ; 
}",456,-22.824412852581215,-0.05005353695741495
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; //Add Sanitization of Input n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n > 0 && n < ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }",371,-22.33985937241608,-0.06021525437308916
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) {
    bool_t flag;
    size_t n;
    uint16_t ier;
    uint16_t isr;
    flag = FALSE;
    ier = ksz8851ReadReg(interface, KSZ8851_REG_IER);
    ksz8851WriteReg(interface, KSZ8851_REG_IER, 0);
    isr = ksz8851ReadReg(interface, KSZ8851_REG_ISR);
    if ((isr & ISR_LCIS) != 0) {
        ier &= ~IER_LCIE;
        interface->nicEvent = TRUE;
        flag |= osSetEventFromIsr(&netEvent);
    }
    if ((isr & ISR_TXIS) != 0) {
        ksz8851WriteReg(interface, KSZ8851_REG_ISR, ISR_TXIS);
        n = ksz8851ReadReg(interface, KSZ8851_REG_TXMIR);
        //Validate that the TXMIR register is within the expected range
        if (n <= TXMIR_TXMA_MAX && n >= TXMIR_TXMA_MIN && n >= (ETH_MAX_FRAME_SIZE + 8)) {
            flag |= osSetEventFromIsr(&interface->nicTxEvent);
        }
    }
    if ((isr & ISR_RXIS) != 0) {
        ier &= ~IER_RXIE;
        interface->nicEvent = TRUE;
        flag |= osSetEventFromIsr(&netEvent);
    }
    ksz8851WriteReg(interface, KSZ8851_REG_IER, ier);
    return flag;
}",425,-37.30817176756351,-0.08778393357073766
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; // Add input validation code if (n <= ETH_MAX_FRAME_SIZE + 8) { n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } else { // Log error and return return flag; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }",374,-34.09217478812941,-0.09115554756184335
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; //Check for valid inputs if ( ( isr & ISR_LCIS ) != 0 && isr <= UINT16_MAX ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 && isr <= UINT16_MAX ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) && n <= UINT16_MAX ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 && isr <= UINT16_MAX) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }",400,-24.522291026786014,-0.061305727566965035
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:"," 
bool_t ksz8851IrqHandler ( NetInterface * interface ) {
 bool_t flag ; 
 size_t n ; 
 uint16_t ier ; 
 uint16_t isr ; 
 flag = FALSE ; 
 ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; 
 ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; 
 isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; 
 if ( ( isr & ISR_LCIS ) != 0 ) { 
  ier &= ~ IER_LCIE ; 
  interface -> nicEvent = TRUE ; 
  flag |= osSetEventFromIsr ( & netEvent ) ; 
 } 
 if ( ( isr & ISR_TXIS ) != 0 ) { 
  ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; 
  n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; 
  if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) && n <= ETH_MAX_FRAME_SIZE ) { 
   flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; 
  } 
 } 
 if ( ( isr & ISR_RXIS ) != 0 ) { 
  ier &= ~ IER_RXIE ; 
  interface -> nicEvent = TRUE ; 
  flag |= osSetEventFromIsr ( & netEvent ) ; 
 } 
 ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; 
 return flag ; 
}",438,-17.940941659774925,-0.04096105401775097
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:"," 
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; // validate input with a check on n  if (n > 0 && n < ( ETH_MAX_FRAME_SIZE + 8)) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }",373,-34.10918602578764,-0.09144553894313041
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) { 
bool_t flag ; 
size_t n ; 
uint16_t ier ; 
uint16_t isr ; 

flag = FALSE ; 
ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; 
ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; 
isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; 

//Validate Input
if (isr == NULL || ier == NULL) 
    return flag;

if ( ( isr & ISR_LCIS ) != 0 ) { 
    ier &= ~ IER_LCIE ; 
    interface -> nicEvent = TRUE ; 
    flag |= osSetEventFromIsr ( & netEvent ) ; 
} if ( ( isr & ISR_TXIS ) != 0 ) { 
    ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; 
    n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; 
    if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { 
        flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; 
    } 
} if ( ( isr & ISR_RXIS ) != 0 ) { 
    ier &= ~ IER_RXIE ; 
    interface -> nicEvent = TRUE ; 
    flag |= osSetEventFromIsr ( & netEvent ) ; 
} ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; 
return flag ; 
}",446,-27.70128338571806,-0.0621105008648387
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; 

//Validate input parameters
if(interface == NULL)
   return FALSE;

flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; 

//Make sure IER is valid
if(ier < 0)
   return FALSE;

ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; 

//Make sure ISR is valid
if(isr < 0)
   return FALSE;

if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; 

//Make sure n is valid
if(n < 0)
   return FALSE;

if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }",453,-36.04424524057911,-0.0795678702882541
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) { 
 bool_t flag ; 
 size_t n ; 
 uint16_t ier ; 
 uint16_t isr ; 
 uint16_t valid_registers[10] = {ISR_LCIS, IER_LCIE, ISR_TXIS, ISR_RXIS, KSZ8851_REG_IER, KSZ8851_REG_ISR, KSZ8851_REG_TXMIR, ETH_MAX_FRAME_SIZE, 8, &netEvent};
 flag = FALSE ; 
 
 if ( !validInputCheck(valid_registers) ) {
    return flag; 
 }
 
 ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; 
 ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; 
 isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; 
 if ( ( isr & ISR_LCIS ) != 0 ) { 
  ier &= ~ IER_LCIE ; 
  interface -> nicEvent = TRUE ; 
  flag |= osSetEventFromIsr ( & netEvent ) ; 
 } 
 if ( ( isr & ISR_TXIS ) != 0 ) { 
  ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; 
  n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; 
  if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { 
   flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; 
  } 
 } 
 if ( ( isr & ISR_RXIS ) != 0 ) { 
  ier &= ~ IER_RXIE ; 
  interface -> nicEvent = TRUE ; 
  flag |= osSetEventFromIsr ( & netEvent ) ; 
 } 
 ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; 
 return flag ; 
}

bool_t validInputCheck(uint16_t * valid_registers) {
    for (int i = 0; i < 10; i++) {
        if (valid_registers[i] < 0 || valid_registers[i] > 65535) {
            return FALSE;
        }
    }
    return TRUE;
}",618,-67.91949932919907,-0.10990210247443215
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) { 
bool_t flag ; 
size_t n ; 
uint16_t ier ; 
uint16_t isr ; 
unsigned int isrValid;

flag = FALSE ; 
ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; 
ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; 

isrValid = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) & 0x7FF;
isr = isrValid;

if ( ( isr & ISR_LCIS ) != 0 ) { 
  ier &= ~ IER_LCIE ; 
  interface -> nicEvent = TRUE ; 
  flag |= osSetEventFromIsr ( & netEvent ) ; 
} 

if ( ( isr & ISR_TXIS ) != 0 ) { 
  ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; 
  n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; 
  if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { 
    flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; 
  } 
} 

if ( ( isr & ISR_RXIS ) != 0 ) { 
  ier &= ~ IER_RXIE ; 
  interface -> nicEvent = TRUE ; 
  flag |= osSetEventFromIsr ( & netEvent ) ; 
} 

ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; 
return flag ; 
}",450,-31.475981138570212,-0.06994662475237826
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) {
    bool_t flag ;
    size_t n ;
    uint16_t ier ;
    uint16_t isr ;
    flag = FALSE ;
    ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ;
    ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ;
    isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ;
    
    // add input validation check
    if (isr > (ISR_LCIS | ISR_TXIS | ISR_RXIS)) {
        return flag;
    }
    
    if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }",425,-24.757550753749538,-0.05825306059705774
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; //Validate the input before using the variables if (isr < 0xffff) { if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; } return flag ; }",380,-30.039904697070217,-0.07905238078176373
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) {
bool_t flag ; 
size_t n ; 
uint16_t ier ; 
uint16_t isr ; 
flag = FALSE ; 

// Validate input parameters
if (interface == NULL) {
    return flag;
}

ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; 
ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; 
isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; 
if ( ( isr & ISR_LCIS ) != 0 ) { 
    ier &= ~ IER_LCIE ; 
    interface -> nicEvent = TRUE ; 
    flag |= osSetEventFromIsr ( & netEvent ) ; 
} 
if ( ( isr & ISR_TXIS ) != 0 ) { 
    ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; 
    n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; 
    if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) && n <= ETH_MAX_FRAME_SIZE_TOP ) { 
        flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; 
    } 
} 
if ( ( isr & ISR_RXIS ) != 0 ) { 
    ier &= ~ IER_RXIE ; 
    interface -> nicEvent = TRUE ; 
    flag |= osSetEventFromIsr ( & netEvent ) ; 
} 
ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; 
return flag ; 
}",459,-29.976516883698913,-0.06530831565076016
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( isr & ISR_LCIS ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( isr & ISR_TXIS ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) && n <= ETH_MAX_FRAME_SIZE + 16) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( isr & ISR_RXIS ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }",361,-14.224142280335467,-0.039402056178214594
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:"," 
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; 

//Added input validation to check if isr is within an expected range 
if (isr > 0 && isr < UINT16_MAX) {
  if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; 
}
return flag ; }",403,-33.438101324567896,-0.08297295614036698
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) {
bool_t flag = FALSE;
size_t n;
uint16_t ier;
uint16_t isr;
ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ;
if (ier == 0) {
    return flag;
}
ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ;
isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ;
if ( ( isr & ISR_LCIS ) != 0 ) { 
    ier &= ~ IER_LCIE ;
    interface -> nicEvent = TRUE ;
    flag |= osSetEventFromIsr ( & netEvent ) ;
} 
if ( ( isr & ISR_TXIS ) != 0 ) { 
    ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ;
    n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; 
    if ( n >= 0 && n < ( ETH_MAX_FRAME_SIZE + 8 ) ) {
        flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ;
    }
} 
if ( ( isr & ISR_RXIS ) != 0 ) { 
    ier &= ~ IER_RXIE ;
    interface -> nicEvent = TRUE ;
    flag |= osSetEventFromIsr ( & netEvent ) ;
} 
ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ;
return flag ;
}",419,-34.80149190330112,-0.08305845322983561
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) {
    bool_t flag;
    size_t n;
    uint16_t ier;
    uint16_t isr;
    flag = FALSE;
    ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ;
    ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ;
    isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ;
    if ( ( isr & ISR_LCIS ) != 0 ) {
        ier &= ~ IER_LCIE ;
        interface -> nicEvent = TRUE ;
        flag |= osSetEventFromIsr ( & netEvent ) ;
    }
    if ( ( isr & ISR_TXIS ) != 0 ) {
        ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ;
        n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ;
        if ( n >= 0 && n <= (ETH_MAX_FRAME_SIZE + 8)) { 
            flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ;
        }
    }
    if ( ( isr & ISR_RXIS ) != 0 ) {
        ier &= ~ IER_RXIE ;
        interface -> nicEvent = TRUE ;
        flag |= osSetEventFromIsr ( & netEvent ) ;
    }
    ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ;
    return flag ;
}",419,-18.007798543299305,-0.04297803948281457
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; 

// Validate input 
if(interface == NULL) {
    return false;
}

ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; 
// Validate input
if (n >= ( ETH_MAX_FRAME_SIZE + 8 )) {
    flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ;
}
} if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }",394,-23.448801221821245,-0.05951472391325189
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; 

//Added input validation
if (!interface || !interface->nicEvent || !netEvent) {
    return FALSE;
}

ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; 

//Added input validation
if (n >= 0 && n <= (ETH_MAX_FRAME_SIZE + 8)) {
    flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ;
}

if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }",406,-23.58596240411831,-0.05809350345841948
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) { 
 bool_t flag ; 
 size_t n ; 
 uint16_t ier ; 
 uint16_t isr ; 
 flag = FALSE ; 
 
 ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; 
 ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; 
 isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; 
 
 //Validate input
 if(isr == NULL)
        return FALSE;
 
 if ( ( isr & ISR_LCIS ) != 0 ) { 
  ier &= ~ IER_LCIE ; 
  interface -> nicEvent = TRUE ; 
  flag |= osSetEventFromIsr ( & netEvent ) ; 
 } 
 
 if ( ( isr & ISR_TXIS ) != 0 ) { 
  ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; 
  n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; 
  
  //Validate input
  if(n == NULL || n >= ( ETH_MAX_FRAME_SIZE + 8 ))
        return FALSE;
 
  flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; 
 } 
 
 if ( ( isr & ISR_RXIS ) != 0 ) { 
  ier &= ~ IER_RXIE ; 
  interface -> nicEvent = TRUE ; 
  flag |= osSetEventFromIsr ( & netEvent ) ; 
 } 
 
 ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; 
 return flag ; 
}",469,-30.584147853948583,-0.06521140267366436
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","

bool_t ksz8851IrqHandler ( NetInterface * interface ) { 
    bool_t flag ; 
    size_t n ; 
    uint16_t ier ; 
    uint16_t isr ; 
    flag = FALSE ; 
    ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; 
    ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; 
    isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; 
    if ( ( isr & ISR_LCIS ) != 0 ) { 
        ier &= ~ IER_LCIE ; 
        interface -> nicEvent = TRUE ; 
        flag |= osSetEventFromIsr ( & netEvent ) ; 
    } 
    if ( ( isr & ISR_TXIS ) != 0 ) { 
        ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; 
        //Validate n against maximum frame size
        n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK;
        if (n <= ETH_MAX_FRAME_SIZE + 8) {
            flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; 
        }
    } 
    if ( ( isr & ISR_RXIS ) != 0 ) { 
        ier &= ~ IER_RXIE ; 
        interface -> nicEvent = TRUE ; 
        flag |= osSetEventFromIsr ( & netEvent ) ; 
    } 
    ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; 
    return flag ; 
}",449,-27.23202704232993,-0.06065039430363013
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) {
 bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; 
 // Validate input
 if (interface == NULL) {
   return false;
 }
 flag = FALSE ; 
 ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; 
 ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; 
 isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; 
 if ( ( isr & ISR_LCIS ) != 0 ) {
   ier &= ~ IER_LCIE ; 
   interface -> nicEvent = TRUE ; 
   flag |= osSetEventFromIsr ( & netEvent ) ; 
 } 
 if ( ( isr & ISR_TXIS ) != 0 ) {
   ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; 
   n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; 
   // Validate input
   if (n >= 0 && n < ( ETH_MAX_FRAME_SIZE + 8 )) {
     flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; 
   }
 } 
 if ( ( isr & ISR_RXIS ) != 0 ) {
   ier &= ~ IER_RXIE ; 
   interface -> nicEvent = TRUE ; 
   flag |= osSetEventFromIsr ( & netEvent ) ; 
 } 
 ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; 
 return flag ; 
}",444,-32.55064992201591,-0.07331227459913493
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; 

// Validate input
if (interface == NULL) {
  return FALSE;
}

ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; 

// Validate input
if (n >= ( ETH_MAX_FRAME_SIZE + 8 )) {
  flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ;
}

if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }",394,-15.196153477237704,-0.03856891745491803
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) { 
  bool_t flag ;
  size_t n ;
  uint16_t ier ;
  uint16_t isr ;
  flag = FALSE ;
  ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ;
  ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ;
  isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ;
  if ( ( isr & ISR_LCIS ) != 0 ) { 
    if (ier & IER_LCIE) {
      ier &= ~ IER_LCIE ;
      interface -> nicEvent = TRUE ;
      flag |= osSetEventFromIsr ( & netEvent ) ;
    }
  }
  if ( ( isr & ISR_TXIS ) != 0 ) {
    ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ;
    n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ;
    if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { 
      flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ;
    }
  }
  if ( ( isr & ISR_RXIS ) != 0 ) {
    if (ier & IER_RXIE) {
      ier &= ~ IER_RXIE ;
      interface -> nicEvent = TRUE ;
      flag |= osSetEventFromIsr ( & netEvent ) ;
    }
  }
  ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ;
  return flag ;
}",451,-22.327176687805157,-0.04950593500621986
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) {
bool_t flag ;
size_t n ;
uint16_t ier ;
uint16_t isr ;
flag = FALSE ;
ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ;
ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ;
isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ;
if ( ( isr & ISR_LCIS ) != 0 ) {
if(isr & ~ISR_LCIS) { // Input validation added
ier &= ~ IER_LCIE ;
interface -> nicEvent = TRUE ;
flag |= osSetEventFromIsr ( & netEvent ) ;
}
}
if ( ( isr & ISR_TXIS ) != 0 ) {
ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ;
n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ;
if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) {
if(n & ~(ETH_MAX_FRAME_SIZE + 8)) { // Input validation added
flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ;
}
}
}
if ( ( isr & ISR_RXIS ) != 0 ) {
if(isr & ~ISR_RXIS) { // Input validation added
ier &= ~ IER_RXIE ;
interface -> nicEvent = TRUE ;
flag |= osSetEventFromIsr ( & netEvent ) ;
}
}
ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ;
return flag ;
}",448,-26.823391319843562,-0.05987364133893652
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) {
 bool_t flag ;
 size_t n ;
 uint16_t ier ;
 uint16_t isr ;
 uint16_t validISR = 0xFFFF;
 flag = FALSE ;
 
 ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ;
 ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ;
 isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) & validISR;
 
 if ( ( isr & ISR_LCIS ) != 0 ) {
  ier &= ~ IER_LCIE ;
  interface -> nicEvent = TRUE ;
  flag |= osSetEventFromIsr ( & netEvent ) ;
 }
 if ( ( isr & ISR_TXIS ) != 0 ) {
  ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ;
  n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ;
  if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) {
   flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ;
  }
 }
 if ( ( isr & ISR_RXIS ) != 0 ) {
  ier &= ~ IER_RXIE ;
  interface -> nicEvent = TRUE ;
  flag |= osSetEventFromIsr ( & netEvent ) ;
 }
 ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ;
 return flag ;
}",420,-22.280413173467007,-0.053048602793969064
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; 
//added input sanitization
if(ksz8851ReadReg(interface, KSZ8851_REG_IER) == 0)
	return;
ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }",396,-32.1869259484642,-0.08128011603147525
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) { 
  bool_t flag ; 
  size_t n ; 
  uint16_t ier ; 
  uint16_t isr ; 
  flag = FALSE ; 
  ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; 
  ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; 
  isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; 
  if ( ( isr & ISR_LCIS ) != 0 ) { 
    ier &= ~ IER_LCIE ; 
    interface -> nicEvent = TRUE ; 
    flag |= osSetEventFromIsr ( & netEvent ) ; 
  } 
  if ( ( isr & ISR_TXIS ) != 0 ) { 
    ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; 
    n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; 
    if ( n > 0 && n <= ( ETH_MAX_FRAME_SIZE + 8 ) ) { 
      flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; 
    } 
  }
  if ( ( isr & ISR_RXIS ) != 0 ) { 
    ier &= ~ IER_RXIE ; 
    interface -> nicEvent = TRUE ; 
    flag |= osSetEventFromIsr ( & netEvent ) ; 
  } 
  ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; 
  return flag ; 
}",446,-14.978284244776109,-0.03358359696138141
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= 0 && n <= ( ETH_MAX_FRAME_SIZE + 8 ) ) { //Added input validation flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }",368,-10.428878681215869,-0.028339344242434426
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) {
    bool_t flag;
    size_t n;
    uint16_t ier;
    uint16_t isr;
    flag = FALSE;
    ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ;
    ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ;
    isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ;
    if ( ( isr & ISR_LCIS ) != 0 ) {
        ier &= ~ IER_LCIE ;
        interface -> nicEvent = TRUE ;
        flag |= osSetEventFromIsr ( & netEvent ) ;
    }
    if ( ( isr & ISR_TXIS ) != 0 ) {
        ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ;
        //Validate input to ensure it is not bigger than ETH_MAX_FRAME_SIZE + 8
        if (ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK <= ETH_MAX_FRAME_SIZE + 8 ) {
            n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ;
            flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ;
        }
    }
    if ( ( isr & ISR_RXIS ) != 0 ) {
        ier &= ~ IER_RXIE ;
        interface -> nicEvent = TRUE ;
        flag |= osSetEventFromIsr ( & netEvent ) ;
    }
    ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ;
    return flag ;
}",465,-36.60602644265323,-0.07872263751108222
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) { 
    bool_t flag ; 
    size_t n ; 
    uint16_t ier ; 
    uint16_t isr ; 
    flag = FALSE ; 
    ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; 
    ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; 
    isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; 
    if ( ( isr & ISR_LCIS ) != 0 ) { 
        ier &= ~ IER_LCIE ; 
        interface -> nicEvent = TRUE ; 
        if(netEvent < 0 || netEvent > MAX_EVENT) {
            return flag;
        }
        flag |= osSetEventFromIsr ( & netEvent ) ; 
    } 
    if ( ( isr & ISR_TXIS ) != 0 ) { 
        ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; 
        n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; 
        if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { 
            if(interface->nicTxEvent < 0 || interface->nicTxEvent > MAX_EVENT) {
                return flag;
            }
            flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; 
        } 
    } 
    if ( ( isr & ISR_RXIS ) != 0 ) { 
        ier &= ~ IER_RXIE ; 
        interface -> nicEvent = TRUE ; 
        if(netEvent < 0 || netEvent > MAX_EVENT) {
            return flag;
        }
        flag |= osSetEventFromIsr ( & netEvent ) ; 
    } 
    ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; 
    return flag ; 
}",527,-24.676549908250156,-0.04682457288093009
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; 
//Validate input
if (interface == NULL) {
  return FALSE;
}

ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }",382,-12.198941848278368,-0.03193440274418421
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; 

//Validate input before processing
if (interface == NULL)
{
    return FALSE;
}

ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; 
//Validate input before processing
if ( n < ( ETH_MAX_FRAME_SIZE + 8 ) )
{
    return FALSE;
}

flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; 
 } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }",406,-32.773421808124226,-0.08072271381311386
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; 
// Added input validation
if (isr == 0 || isr > 0xFFFF) { return flag; }
if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }",387,-19.039392599887513,-0.04919739689893414
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) {
bool_t flag;
size_t n;
uint16_t ier;
uint16_t isr;
flag = FALSE;

// Check if ISR is valid before processing
if(ksz8851ReadReg(interface, KSZ8851_REG_ISR) == 0) {
  return flag;
}

ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ;
ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ;
isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ;
if ( ( isr & ISR_LCIS ) != 0 ) { 
  ier &= ~ IER_LCIE ;
  interface -> nicEvent = TRUE ;
  flag |= osSetEventFromIsr ( & netEvent ) ;
}
if ( ( isr & ISR_TXIS ) != 0 ) {
  ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ;
  n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ;
  if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) {
    flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ;
  }
}
if ( ( isr & ISR_RXIS ) != 0 ) {
  ier &= ~ IER_RXIE ;
  interface -> nicEvent = TRUE ;
  flag |= osSetEventFromIsr ( & netEvent ) ;
}
ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ;
return flag ;
}",442,-32.55377978674482,-0.0736510854903729
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) { 
    bool_t flag ; 
    size_t n ; 
    uint16_t ier ; 
    uint16_t isr ; 
    flag = FALSE ; 
   
    ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; 
    ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; 
    isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; 
   
    // Validate isr
    if (isr == 0 || isr > ISR_RXIE)
        return flag;
   
    if ( ( isr & ISR_LCIS ) != 0 ) { 
        ier &= ~ IER_LCIE ; 
        interface -> nicEvent = TRUE ; 
        flag |= osSetEventFromIsr ( & netEvent ) ; 
    } 
    if ( ( isr & ISR_TXIS ) != 0 ) { 
        ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; 
        n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; 
        if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { 
            flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; 
        } 
    } 
    if ( ( isr & ISR_RXIS ) != 0 ) { 
        ier &= ~ IER_RXIE ; 
        interface -> nicEvent = TRUE ; 
        flag |= osSetEventFromIsr ( & netEvent ) ; 
    } 
    ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; 
    return flag ; 
}",480,-33.70091551882869,-0.07021024066422643
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) {
 bool_t flag ; 
 size_t n ; 
 uint16_t ier ; 
 uint16_t isr ; 
 flag = FALSE ; 
 
 ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; 
 // Validate ISR bitmask to ensure only valid bits are set
 isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) & ISR_VALID_MASK; 
 if ( ( isr & ISR_LCIS ) != 0 ) { 
  ier &= ~ IER_LCIE ; 
  interface -> nicEvent = TRUE ; 
  flag |= osSetEventFromIsr ( & netEvent ) ; 
 } 
 
 if ( ( isr & ISR_TXIS ) != 0 ) { 
  ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; 
  // Validate TXMIR byte size before setting the event, and only set the event if the size is valid.
  n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; 
  if ( n >= ( ETH_MIN_FRAME_SIZE + 8 ) && n <= (ETH_MAX_FRAME_SIZE + 8)) { 
   flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; 
  }
 } 
 
 if ( ( isr & ISR_RXIS ) != 0 ) { 
  ier &= ~ IER_RXIE ; 
  interface -> nicEvent = TRUE ; 
  flag |= osSetEventFromIsr ( & netEvent ) ; 
 } 
 ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; 
 return flag ; 
}",471,-78.74783389972549,-0.16719285329028766
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; // Validate input values if (isr > 0xFFFF) { return false; } if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; // Validate input values if (n > ( ETH_MAX_FRAME_SIZE + 8 )) { return false; } if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }",405,-18.102146351661787,-0.04469665765842416
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","

bool_t ksz8851IrqHandler ( NetInterface * interface ) { 
    bool_t flag ; 
    size_t n ; 
    uint16_t ier ; 
    uint16_t isr ; 
    flag = FALSE ;  
    // Validate inputs 
    if(interface == NULL || ksz8851ReadReg == NULL || ksz8851WriteReg == NULL) {
        // Return error
        return flag;
    }

    ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; 
    ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; 
    isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; 
    if ( ( isr & ISR_LCIS ) != 0 ) { 
        ier &= ~ IER_LCIE ; 
        interface -> nicEvent = TRUE ; 
        flag |= osSetEventFromIsr ( & netEvent ) ;
    } 
    if ( ( isr & ISR_TXIS ) != 0 ) { 
        ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; 
        n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; 
        // Validate the size of the packet 
        if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { 
            flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; 
        } 
    } 
    if ( ( isr & ISR_RXIS ) != 0 ) { 
        ier &= ~ IER_RXIE ; 
        interface -> nicEvent = TRUE ; 
        flag |= osSetEventFromIsr ( & netEvent ) ; 
    } 
    ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; 
    return flag ; 
}",503,-62.377342963976886,-0.12401062219478506
"The Original Code is vulnerable to CWE-20: Improper Input Validation. Fix the vulnerability.
Original Code:
bool_t ksz8851IrqHandler ( NetInterface * interface ) { bool_t flag ; size_t n ; uint16_t ier ; uint16_t isr ; flag = FALSE ; ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; if ( ( isr & ISR_LCIS ) != 0 ) { ier &= ~ IER_LCIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } if ( ( isr & ISR_TXIS ) != 0 ) { ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; } } if ( ( isr & ISR_RXIS ) != 0 ) { ier &= ~ IER_RXIE ; interface -> nicEvent = TRUE ; flag |= osSetEventFromIsr ( & netEvent ) ; } ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; return flag ; }
Fixed code:","
bool_t ksz8851IrqHandler ( NetInterface * interface ) { 
    bool_t flag ; 
	size_t n ; 
	uint16_t ier ; 
	uint16_t isr ; 
	uint16_t expected_isr = ISR_LCIS | ISR_TXIS | ISR_RXIS;
	
	flag = FALSE ; 
	ier = ksz8851ReadReg ( interface , KSZ8851_REG_IER ) ; 
	ksz8851WriteReg ( interface , KSZ8851_REG_IER , 0 ) ; 
	isr = ksz8851ReadReg ( interface , KSZ8851_REG_ISR ) ; 

	// Added Input Validation
	if (isr != expected_isr) {
		return False;
	}
	
	if ( ( isr & ISR_LCIS ) != 0 ) { 
		ier &= ~ IER_LCIE ; 
		interface -> nicEvent = TRUE ; 
		flag |= osSetEventFromIsr ( & netEvent ) ; 
	} 
	if ( ( isr & ISR_TXIS ) != 0 ) { 
		ksz8851WriteReg ( interface , KSZ8851_REG_ISR , ISR_TXIS ) ; 
		n = ksz8851ReadReg ( interface , KSZ8851_REG_TXMIR ) & TXMIR_TXMA_MASK ; 
		if ( n >= ( ETH_MAX_FRAME_SIZE + 8 ) ) { 
			flag |= osSetEventFromIsr ( & interface -> nicTxEvent ) ; 
		} 
	} 
	if ( ( isr & ISR_RXIS ) != 0 ) { 
		ier &= ~ IER_RXIE ; 
		interface -> nicEvent = TRUE ; 
		flag |= osSetEventFromIsr ( & netEvent ) ; 
	} 
	ksz8851WriteReg ( interface , KSZ8851_REG_IER , ier ) ; 
	return flag ; 
}",512,-37.47863530685032,-0.07320045958369203
