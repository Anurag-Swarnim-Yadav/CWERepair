Original code,Plausible Program,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) wTmp = 0; writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",249,-6.02786758763275,-0.02420830356479016
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else if (wTmp < readw ( chip -> DSPQ + JQS_wSize )) writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; else break; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",288,-8.368145735186658,-0.029056061580509232
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp <= readw ( chip -> DSPQ + JQS_wSize ) ) writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; else writew ( 0 , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",263,-4.562409193293953,-0.01734756347260058
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","

static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { 
    struct snd_msnd * chip = dev_id ; 
    void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; 
    while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { 
        u16 wTmp ; 
        u16 index = readw ( chip -> DSPQ + JQS_wHead ) ;
        if (index < readw(chip->DSPQ + JQS_wSize)) {
            snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * index ) ) ; 
            wTmp = index + 1 ; 
            writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; 
        }
        else 
            break;
    } 
    inb ( chip -> io + HP_RXL ) ; 
    return IRQ_HANDLED ; 
}",280,-25.268348543057517,-0.09024410193949113
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","

static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else if ( wTmp >= 0 && wTmp <= readw ( chip -> DSPQ + JQS_wSize ) ) writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",293,-12.559912773478448,-0.042866596496513476
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else { if (wTmp < readw ( chip -> DSPQ + JQS_wSize ) ) { writew ( wTmp , chip -> DSPQ + JQS_wHead ) ;} } } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",290,-15.026244805787146,-0.051814637261334985
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; if (readw(chip->DSPQ + JQS_wHead) > readw(chip->DSPQ + JQS_wSize)) {break;} snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",301,-11.961145816910348,-0.03973802596980182
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt(int irq, void *dev_id) { 
struct snd_msnd *chip = dev_id; 
void *pwDSPQData = chip->mappedbase + DSPQ_DATA_BUFF; 
u16 head, tail, size;

head = readw(chip->DSPQ + JQS_wHead);
tail = readw(chip->DSPQ + JQS_wTail);
size = readw(chip->DSPQ + JQS_wSize);

while (tail != head) {
 u16 wTmp;
 snd_msnd_eval_dsp_msg(chip, readw(pwDSPQData + 2 * head));
 
 wTmp = head + 1;
 if (wTmp > size) 
  head = 0;
 else 
  head = wTmp;
 
 writew(head, chip->DSPQ + JQS_wHead);
}
inb(chip->io + HP_RXL);
return IRQ_HANDLED;
}",268,-30.08300384128939,-0.11225001433316936
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; u16 wTmp = 0; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } if (wTmp <= readw ( chip -> DSPQ + JQS_wSize )) //Added this line to check bounds before reading inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",296,-28.930260930211094,-0.09773736800746992
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; if( 2 * readw ( chip -> DSPQ + JQS_wHead ) < readw ( chip -> DSPQ + JQS_wSize )) { snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; } wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",302,-14.006926279094909,-0.0463805505930295
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; if(readw(chip->DSPQ + JQS_wHead) < readw(chip->DSPQ + JQS_wSize)){ snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",300,-7.927883467767903,-0.02642627822589301
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; if (readw(chip->DSPQ + JQS_wHead) >= readw(chip->DSPQ + JQS_wSize)) break; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",300,-7.909661871798403,-0.026365539572661342
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; u16 offset = readw(chip->DSPQ + JQS_wHead); if (offset < readw(chip->DSPQ + JQS_wSize)) { snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * offset) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",290,-19.42114062880894,-0.06696945044416876
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; u16 wHeadValue = readw ( chip->DSPQ + JQS_wHead ); if(wHeadValue >= readw( chip->DSPQ + JQS_wSize)) { break; } snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * wHeadValue ) ) ; wTmp = wHeadValue + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",285,-21.979987611857226,-0.07712276355037623
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; int head = readw ( chip -> DSPQ + JQS_wHead ) ; int tail = readw ( chip -> DSPQ + JQS_wTail ) ; if ( tail != head ) { u16 wTmp ; if ( head >= readw ( chip -> DSPQ + JQS_wSize ) ) { head = 0 ; writew ( head , chip -> DSPQ + JQS_wHead ) ; } snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * head ) ) ; wTmp = head + 1 ; writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",246,-19.504730187904286,-0.07928752108904182
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; if (readw(chip->DSPQ + JQS_wHead) < readw(chip->DSPQ + JQS_wSize)){ snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } else break; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",260,-10.746257238650257,-0.041331758610193295
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp <= readw ( chip -> DSPQ + JQS_wSize ) ) writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; else writew ( 0 , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",263,-4.486604850512249,-0.017059334032365966
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; u16 wTmp; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp < readw ( chip -> DSPQ + JQS_wSize ) ) writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; else writew ( 0 , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",263,-8.5611174871447,-0.03255177751766045
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp % ( readw ( chip -> DSPQ + JQS_wSize ) + 1 ) , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",284,-9.122709511868054,-0.0321222165910847
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; u16 wHead = readw ( chip -> DSPQ + JQS_wHead ); // Added this line if ( wHead < readw ( chip -> DSPQ + JQS_wSize ) ) { // Added this line snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * wHead ) ) ; wTmp = wHead + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } // Added this line } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",292,-17.870117287071974,-0.06119903180504101
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; if (readw(chip->DSPQ + JQS_wHead) <= readw(chip->DSPQ + JQS_wSize)) { snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",300,-7.686081315846602,-0.025620271052822007
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; if (readw ( chip -> DSPQ + JQS_wHead ) > readw ( chip -> DSPQ + JQS_wSize ) ) { return IRQ_HANDLED; } snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",309,-9.327717198626248,-0.03018678705057038
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; 

while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { 
	u16 wTmp ; 
	if(readw ( chip -> DSPQ + JQS_wHead ) > readw ( chip -> DSPQ + JQS_wSize )){
		break;
	}
	snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; 
	wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; 
	if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; 
	else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; 
} 
inb ( chip -> io + HP_RXL ) ; 
return IRQ_HANDLED ; 
}",335,-19.53727698720449,-0.058320229812550715
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; int head = readw ( chip -> DSPQ + JQS_wHead ) ; int tail = readw ( chip -> DSPQ + JQS_wTail ) ; 
while ( head != tail ) { u16 wTmp ; 
if ( head < 0 || head > readw ( chip -> DSPQ + JQS_wSize ) ) { break ; } 
snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * head ) ) ; wTmp = head + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; 
head = readw ( chip -> DSPQ + JQS_wHead ) ; tail = readw ( chip -> DSPQ + JQS_wTail ) ; } 
inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",321,-25.589736095999328,-0.07971880403738109
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; u16 wTmp; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; if (wTmp > readw(chip->DSPQ + JQS_wSize)) wTmp = 0; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",297,-18.249399686213547,-0.0614457901892712
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; // Added check to prevent Out-of-bounds Read if (readw(chip->DSPQ + JQS_wHead) >= readw(chip->DSPQ + JQS_wSize)) { break; } snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",314,-16.41153323930035,-0.05226602942452341
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else { if(wTmp <= readw(chip-> DSPQ + JQS_wSize)) { writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } } } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",289,-14.54246213758305,-0.05031993819232889
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; unsigned int wTmp ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",263,-11.02772424321849,-0.04193051043048855
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; u16 head_val = readw(chip -> DSPQ + JQS_wHead); if(head_val >= readw(chip -> DSPQ + JQS_wSize)) { break; } snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",311,-17.77773775590189,-0.057163143909652374
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp <= readw ( chip -> DSPQ + JQS_wSize ) ) writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; else writew ( 0 , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",263,-4.511373944053751,-0.01715351309526141
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void *pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; u16 qHead = readw ( chip -> DSPQ + JQS_wHead ); u16 qSize = readw ( chip -> DSPQ + JQS_wSize ); //added to prevent out-of-bounds read if ( qHead >= qSize ) break; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * qHead ) ) ; wTmp = qHead + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",298,-36.20626937468521,-0.1214975482371987
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( readw ( chip -> DSPQ + JQS_wTail ) > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",277,-13.766129913516943,-0.0496972199043933
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { 
	struct snd_msnd * chip = dev_id ; 
	void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; 
	
	while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { 
		u16 wTmp ; 
	
		if (readw(chip->DSPQ + JQS_wHead) < readw(chip->DSPQ + JQS_wSize)) {
			snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; 
			wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; 
			if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) 
				writew ( 0 , chip -> DSPQ + JQS_wHead ) ; 
			else 
				writew ( wTmp , chip -> DSPQ + JQS_wHead ) ;
		}
	} 
	inb ( chip -> io + HP_RXL ) ; 
	return IRQ_HANDLED ; 
}",365,-22.6400531546008,-0.06202754288931726
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; u16 index = readw ( chip -> DSPQ + JQS_wHead ); if (index < readw ( chip -> DSPQ + JQS_wSize) ) { snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * index ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",248,-14.265786622934648,-0.05752333315699455
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; u16 wHead = readw ( chip -> DSPQ + JQS_wHead ); if (wHead > readw ( chip -> DSPQ + JQS_wSize ) ) { return IRQ_HANDLED; } snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * wHead ) ) ; wTmp = wHead + 1 ; writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",245,-13.050647848558645,-0.05326795040228018
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else if ( wTmp <= readw ( chip -> DSPQ + JQS_wSize ) ) writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",286,-7.34194728713105,-0.025671144360598076
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:"," 
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) { writew ( 0 , chip -> DSPQ + JQS_wHead ) ; } else { writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",268,-8.290791396050201,-0.030935788791232093
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; if ( readw ( chip -> DSPQ + JQS_wHead ) < readw ( chip -> DSPQ + JQS_wSize ) ) snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",299,-6.881166505719704,-0.02301393480173814
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; if (readw(chip->DSPQ + JQS_wHead) > readw ( chip -> DSPQ + JQS_wSize )) break; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",300,-11.149096769858788,-0.037163655899529295
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; u16 head, tail; head = readw ( chip -> DSPQ + JQS_wHead ); tail = readw ( chip -> DSPQ + JQS_wTail ) ; while ( tail != head ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * head ) ) ; wTmp = head + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; head = wTmp; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",252,-14.497127602500397,-0.05752828413690634
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else if (wTmp < readw(chip -> DSPQ + JQS_wSize)) writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; else break; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",288,-9.568143702250401,-0.03322272118836945
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else if (wTmp < readw ( chip -> DSPQ + JQS_wSize ) ) writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",286,-8.127754727622253,-0.028418722823854034
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; u16 wHead = readw(chip->DSPQ + JQS_wHead); if (wHead > readw ( chip -> DSPQ + JQS_wSize )) { break; } snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * wHead ) ) ; wTmp = wHead + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",281,-12.519493088268346,-0.04455335618600835
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) wTmp = 0; writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",249,-5.980951504369453,-0.024019885559716677
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; int head = readw ( chip -> DSPQ + JQS_wHead ); while ( readw ( chip -> DSPQ + JQS_wTail ) != head ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * head ) ) ; wTmp = head + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) head = 0 ; else head = wTmp ; writew ( head , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",226,-11.342584410125692,-0.05018842659347651
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; u16 wHead = readw ( chip -> DSPQ + JQS_wHead ); if ( wHead > readw ( chip -> DSPQ + JQS_wSize ) ) { break; } snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = wHead + 1 ; writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",253,-13.039111340652537,-0.05153798948874521
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; 

//add check to make sure head is not out of bounds
if (readw(chip->DSPQ + JQS_wHead) < readw(chip->DSPQ + JQS_wSize)) {
    snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; 
    wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; 
    if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; 
    else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; 
}
} 
inb ( chip -> io + HP_RXL ) ; 
return IRQ_HANDLED ; 
}",336,-24.99073559693474,-0.0743771892765915
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; u16 wTail = readw ( chip -> DSPQ + JQS_wTail ); u16 wHead = readw ( chip -> DSPQ + JQS_wHead ); u16 wSize = readw ( chip -> DSPQ + JQS_wSize ); while ( wTail != wHead ) { u16 index = wHead % wSize; u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * index ) ) ; wTmp = wHead + 1 ; if ( wTmp > wSize ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; wTail = readw ( chip -> DSPQ + JQS_wTail ); wHead = readw ( chip -> DSPQ + JQS_wHead ); } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",307,-18.999547577865407,-0.06188777712659742
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; if(readw(chip->DSPQ + JQS_wHead) < readw(chip->DSPQ + JQS_wSize)){ snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",300,-8.023830996944598,-0.02674610332314866
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ; if ( wTmp > readw ( chip -> DSPQ + JQS_wSize ) ) writew ( 0 , chip -> DSPQ + JQS_wHead ) ; else writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }
Fixed code:","
static irqreturn_t snd_msnd_interrupt ( int irq , void * dev_id ) { struct snd_msnd * chip = dev_id ; void * pwDSPQData = chip -> mappedbase + DSPQ_DATA_BUFF ; while ( readw ( chip -> DSPQ + JQS_wTail ) != readw ( chip -> DSPQ + JQS_wHead ) ) { u16 wTmp ; snd_msnd_eval_dsp_msg ( chip , readw ( pwDSPQData + 2 * readw ( chip -> DSPQ + JQS_wHead ) ) ) ; wTmp = readw ( chip -> DSPQ + JQS_wHead ) + 1 ;  if ( wTmp <= readw ( chip -> DSPQ + JQS_wSize ) ) writew ( wTmp , chip -> DSPQ + JQS_wHead ) ; else writew ( 0 , chip -> DSPQ + JQS_wHead ) ; } inb ( chip -> io + HP_RXL ) ; return IRQ_HANDLED ; }",264,-8.55329003341995,-0.032398825884166475
