Original code,Plausible Program,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } else if(*p == NULL) { break; } } } return 0 ; }",173,-11.142826825413097,-0.06440940361510461
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { 
if(PyUnicode_Check(name)){
    if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { 
        ast_error ( c , n , ""assignment to keyword"" ) ; 
        return 1 ; 
    } 
    if ( full_checks ) { 
        const char * const * p ; 
        for ( p = FORBIDDEN ; * p ; p ++ ) { 
            if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { 
                ast_error ( c , n , ""assignment to keyword"" ) ; 
                return 1 ; 
            } 
        } 
    } 
}
return 0 ; 
}",207,-14.0088959575059,-0.06767582588167101
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) != 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }",162,-6.2786877483055985,-0.038757331779664186
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; size_t len = 0; for ( p = FORBIDDEN ; * p ; p ++ ) { len = strlen(*p); if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 && PyUnicode_GetSize(name) == len) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }",189,-13.390716725578997,-0.07085035304539151
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { int result = 0 ; assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; result = 1 ; } if ( full_checks && result == 0 ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; result = 1 ; } } } return result ; }",173,-11.691809792995139,-0.06758271556644589
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_Check ( name ) && PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_Check ( name ) && PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }

The original code is vulnerable because it does not check the size of the name parameter before it accesses it, which could cause an out-of-bounds read. The fixed code adds a check to ensure that name is a valid PyUnicode object before it is accessed. This check prevents an out-of-bounds read.",253,-54.31505696469224,-0.21468401962328948
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if (*p != NULL && PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
The fixed code contains a check to ensure that the pointer (*p) is not NULL before attempting to compare it with the given name.",194,-27.962627954969,-0.14413725749984022
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( p != NULL && PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }",166,-5.183319888034799,-0.03122481860261927
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; int i = 0 ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( i >= MAX_FORBIDDEN_NAMES ) { break ; } i ++ ; } } return 0 ; }",188,-18.180938100609534,-0.0967071175564337
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { size_t i; const char * const * p ; for ( i = 0 ; i < FORBIDDEN_SIZE ; i ++ ) { p = FORBIDDEN[i]; if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }",179,-15.75356329590264,-0.0880087334966628
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { 
if ( ! PyUnicode_Check ( name ) ) { 
    return 0;
} 
if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { 
    ast_error ( c , n , ""assignment to keyword"" ) ; 
    return 1 ; 
} 
if ( full_checks ) { 
    const char * const * p ; 
    for ( p = FORBIDDEN ; * p ; p ++ ) { 
        size_t p_len = strlen(*p);
        if (PyUnicode_CompareWithASCIIString ( name , * p ) == 0 && 
            PyUnicode_GET_LENGTH(name) == p_len) {
            ast_error ( c , n , ""assignment to keyword"" ) ; 
            return 1 ; 
        }
    } 
} 
return 0 ; 
}",244,-32.47891427106822,-0.13311030438962385
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:"," 
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { if (!PyUnicode_Check(name))  { return 0; } if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }",167,-13.76693168403645,-0.08243671667087694
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; }  return 0 ; }",163,-7.699353636704947,-0.047235298384692925
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { int len = strlen(*p); if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 && strlen(PyUnicode_AsUTF8(name)) == len) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }",187,-16.7461624487147,-0.0895516708487417
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) != 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }",162,-6.2786877483055985,-0.038757331779664186
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { size_t length = strlen(*p); if (PyUnicode_CompareWithASCIIString(name, *p) == 0 && PyUnicode_GetLength(name) == length) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }",185,-12.552664636460095,-0.06785224127816268
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks && * FORBIDDEN ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }",168,-5.9514159580757005,-0.03542509498854583
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { int i; for ( i = 0; i < FORBIDDEN_MAX; i++ ) { if ( PyUnicode_CompareWithASCIIString ( name , FORBIDDEN[i] ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }",166,-13.739133681124747,-0.08276586554894426
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } int name_len = PyUnicode_GetLength ( name ) ; if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( strlen ( * p ) == name_len ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }",212,-17.347909372305786,-0.08182976119012163
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( strlen(*p) > 0 && PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }",170,-9.012268560203601,-0.05301334447178589
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks && *p ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }",165,-5.849506127615003,-0.03545155228857577
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { size_t p_size = 0; const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( p_size < FORBIDDEN_SIZE) { // Add check for out-of-bounds access if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } p_size++; // Increment indexing size } } } return 0 ; }",207,-47.965525562055596,-0.2317175147925391
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:"," 
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { if (!PyUnicode_Check(name)) { return 0; } if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if (PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }",166,-13.447759901533727,-0.08101060181646824
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name (struct compiling *c, identifier name, const node *n, int full_checks) {
    assert (PyUnicode_Check(name));
    if (PyUnicode_CompareWithASCIIString (name, ""__debug__"") == 0) {
        ast_error (c, n, ""assignment to keyword"");
        return 1;
    }
    if (full_checks) {
        const char * const *p;
        size_t i;
        for (i = 0; i < ARRAYSIZE(FORBIDDEN); ++i) {
            if (PyUnicode_CompareWithASCIIString(name, FORBIDDEN[i]) == 0) {
                ast_error (c, n, ""assignment to keyword"");
                return 1;
            }
        }
    }
    return 0;
}",202,-32.551770663853404,-0.16114737952402675
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 && *p != NULL ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }",167,-8.6950590830632,-0.05206622205427065
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 || PyUnicode_CompareWithASCIIString ( name , ""__builtins__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }",185,-9.391139101355105,-0.05076291406137894
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; int name_length = PyUnicode_GetLength(name);  if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { int forbidden_name_length = strlen(*p); //get the length of the FORBIDDEN string if (name_length != forbidden_name_length) //ensure that the two strings have the same length continue; //if not, continue the loop if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }",233,-51.15021305092314,-0.21952881137735253
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name(struct compiling *c, identifier name, const node *n, int full_checks) {
    assert(PyUnicode_Check(name));
    int compare_result = 0;
    if (full_checks) {
        const char *const *p;
        for (p = FORBIDDEN; *p; p++) {
            compare_result = PyUnicode_CompareWithASCIIString(name, *p);
            if (compare_result == 0) {
                ast_error(c, n, ""assignment to keyword"");
                return 1;
            }
        }
    }

    if (PyUnicode_CompareWithASCIIString(name, ""__debug__"") == 0) {
        ast_error(c, n, ""assignment to keyword"");
        return 1;
    }
    return 0;
}",204,-22.83546160973638,-0.11193853730262932
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks && * FORBIDDEN ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }",168,-5.9514159580757005,-0.03542509498854583
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; int name_len = PyUnicode_GetLength(name); for ( p = FORBIDDEN ; * p ; p ++ ) { if (name_len) { // Check that name length is greater than 0 if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } } return 0 ; }",194,-26.370322025038504,-0.13592949497442527
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks && * p ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }",165,-6.3067496309380005,-0.03822272503598788
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; 
size_t name_len = PyUnicode_GetLength(name);
if (name_len == strlen(""__debug__"") && PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { 
ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; 
} 
if ( full_checks ) { 
const char * const * p ; 
for ( p = FORBIDDEN ; * p ; p ++ ) { 
if (strlen(p) <= name_len && PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { 
ast_error ( c , n , ""assignment to keyword"" ) ; 
return 1 ; 
} 
} 
} 
return 0 ; 
}",230,-32.100690482128016,-0.1395682194875131
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 && * p >= 0 && * p < sizeof(FORBIDDEN)) //Added check { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }",180,-25.980477614091093,-0.14433598674495052
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; int name_len = PyUnicode_GetLength ( name ) ; if ( name_len > 0 && PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { int forbidden_len = strlen ( * p ) ; if ( name_len == forbidden_len && PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }",204,-14.589960762136943,-0.07151941550067129
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { 
  if(name == NULL)
    return 0;
  assert ( PyUnicode_Check ( name ) ) ; 
  if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { 
    ast_error ( c , n , ""assignment to keyword"" ) ; 
    return 1 ; 
  } 
  if ( full_checks ) { 
    const char * const * p ; 
    for ( p = FORBIDDEN ; * p ; p ++ ) { 
      if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { 
        ast_error ( c , n , ""assignment to keyword"" ) ; 
        return 1 ; 
      } 
    } 
  } 
  return 0 ; 
}",222,-13.273196913320996,-0.059789175285229715
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { 
    assert ( PyUnicode_Check ( name ) ) ; 
    if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) {
        ast_error ( c , n , ""assignment to keyword"" ) ; 
        return 1 ; 
    } 
    if ( full_checks ) {
        const char * const * p ; 
        for ( p = FORBIDDEN ; * p ; p ++ ) {
            if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) {
                ast_error ( c , n , ""assignment to keyword"" ) ; 
                return 1 ; 
            }
            //Add check for array bounds before accessing the element
            if(p >= FORBIDDEN + sizeof(FORBIDDEN))
            {
            ast_error(c, n, ""Array index out of bounds"");
            return 1;
            }
        }
    } 
    return 0 ; 
}",261,-51.319117443700385,-0.19662497104866047
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { 
    assert ( PyUnicode_Check ( name ) ) ; 
    if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 || ( full_checks && PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) > 0 ) ) { 
        ast_error ( c , n , ""assignment to keyword"" ) ; 
        return 1 ; 
    } 
    if ( full_checks ) { 
        const char * const * p ; 
        for ( p = FORBIDDEN ; * p ; p ++ ) { 
            if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { 
                ast_error ( c , n , ""assignment to keyword"" ) ; 
                return 1 ; 
            } 
        } 
    } 
    return 0 ; 
}",237,-15.39446086145149,-0.06495553106097675
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const size_t len = strlen ( * p ) ; const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 && strlen ( name ) == len ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }",183,-13.304385658082202,-0.07270156097312679
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks && PyUnicode_GetLength ( name ) != 0 ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }",175,-8.8220564471721,-0.05041175112669771
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; size_t name_length = PyUnicode_GetLength(name); for ( p = FORBIDDEN ; * p ; p ++ ) { if ( name_length == strlen(*p) && PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }",189,-13.469381716073409,-0.07126656992631433
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks && (*p != NULL) ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if (PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }",168,-13.297435005124505,-0.07915139884002682
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 || full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }",139,-5.723047362733441,-0.0411730026095931
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { 
    assert ( PyUnicode_Check ( name ) ) ; 
    if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { 
        ast_error ( c , n , ""assignment to keyword"" ) ; 
        return 1 ; 
    } 
    if ( full_checks ) { 
        const char * const * p ; 
        for ( p = FORBIDDEN ; * p ; p ++ ) { 
            size_t len = strlen (*p);
            if (PyUnicode_CompareWithASCIIString ( name , * p ) == 0 && PyUnicode_GET_LENGTH(name) == len) { 
                ast_error ( c , n , ""assignment to keyword"" ) ; 
                return 1 ; 
            } 
        } 
    } 
    return 0 ; 
}",236,-18.132043610935998,-0.07683069326667796
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) != 0 ) { if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } } else { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } return 0 ; }",165,-7.225002115996201,-0.04378789161209819
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { 
    assert ( PyUnicode_Check ( name ) ) ; 
    if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 || 
        ( full_checks && PyUnicode_CompareWithASCIIStringInList ( name , FORBIDDEN ) == 0 ) ) {
        ast_error ( c , n , ""assignment to keyword"" ) ; 
        return 1 ; 
    } 
    return 0 ; 
}

static int PyUnicode_CompareWithASCIIStringInList ( identifier name , const char * const * list ) {
    const char * const *p ; 
    for ( p = list ; * p ; p ++ ) {
        if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) {
            return 0 ; 
        }
    }
    return -1 ; 
}",237,-31.7084969274637,-0.13379112627621814
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 && strlen(*p) == PyUnicode_GetLength(name)) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }",178,-7.672781654802798,-0.043105514914622466
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( size_t i = 0; i < sizeof(FORBIDDEN); i++ ) { if ( PyUnicode_CompareWithASCIIString ( name , FORBIDDEN[i] ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }",173,-9.502859474213396,-0.054929823550366456
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; p && * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }",164,-6.449468670008199,-0.03932602847565975
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { if ( ! PyUnicode_Check ( name ) || PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }",160,-8.764278445821292,-0.054776740286383074
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } return 0 ; }
Fixed code:","
static int forbidden_name ( struct compiling * c , identifier name , const node * n , int full_checks ) { assert ( PyUnicode_Check ( name ) ) ; if ( PyUnicode_CompareWithASCIIString ( name , ""__debug__"" ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } if ( full_checks ) { const char * const * p ; for ( p = FORBIDDEN ; * p ; p ++ ) { if ( p != NULL ) { if ( PyUnicode_CompareWithASCIIString ( name , * p ) == 0 ) { ast_error ( c , n , ""assignment to keyword"" ) ; return 1 ; } } } } return 0 ; }",170,-8.973879908248502,-0.052787528872050016
