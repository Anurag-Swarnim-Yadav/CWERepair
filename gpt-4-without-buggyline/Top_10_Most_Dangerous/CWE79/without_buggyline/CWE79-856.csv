Original code,Plausible Program,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin || /[<>]/.test(e.data) ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",832,-8.567773238483774,-0.010297804373177613
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin || e.origin != e.expectedOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; char * expectedOrigin = apr_pstrdup(r->pool, origin); return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , expectedOrigin, DONE ) ; }",850,-24.580532059139994,-0.028918273010752935
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: Origin mismatch\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",816,-7.940029508799495,-0.009730428319607224
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",799,-4.146180074945043,-0.005189211608191543
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" "" return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }

Fixed code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;",1000,-11.744792184776852,-0.011744792184776852
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",799,-4.146180074945043,-0.005189211608191543
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { 
    oidc_debug ( r , ""enter"" ) ;
    const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: origin does not match.\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ;
    char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ;
    apr_uri_t uri ;
    apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ;
    char * p = strstr ( origin , uri . path ) ;
    * p = '\\0' ;
    const char * op_iframe_id = ""openidc-op"" ;
    const char * session_state = oidc_session_get_session_state ( r , session ) ;
    if ( session_state == NULL ) {
        oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ;
        return DONE ;
    }
    char * s_poll_interval = NULL ;
    oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ;
    if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ;
    const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ;
    java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ;
    return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ;
}",859,-18.39281666435291,-0.02141189367212213
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",799,-4.146180074945043,-0.005189211608191543
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\\""text/javascript\\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""var unsafeOrigin = e.origin;\\n"" ""var safeOrigin = unsafeOrigin.replace(/[<>\'\""]/g, '');\\n"" ""if (safeOrigin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",856,-27.533699151608534,-0.03216553639206605
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," 
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",800,-6.647180244182309,-0.008308975305227886
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; java_script = oidc_util_escape_string ( r , java_script ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",820,-7.365851534489442,-0.008982745773767613
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin.replace(/[^a-zA-Z0-9]/g, \'\') !== targetOrigin.replace(/[^a-zA-Z0-9]/g, \'\')) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",863,-11.274299116406564,-0.013064077771038891
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin != targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: origin does not match\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",817,-8.780736813649217,-0.010747535879619604
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin || e.data.length == 0 ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",828,-14.205670839011866,-0.017156607293492592
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , oidc_util_escape_string(r->pool, java_script), ""setTimer"" , NULL , DONE ) ; }",813,-5.433738406191244,-0.006683565075265983
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , oidc_util_escape_string(r->pool, java_script), ""setTimer"" , NULL , DONE ) ; }",813,-5.515886686538145,-0.006784608470526623
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , html_escape(java_script), ""setTimer"" , NULL , DONE ) ; }",803,-7.996308499617849,-0.009958042963409526
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",799,-3.836698931526349,-0.004801876009419711
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," 

static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }

//The console.debug('receiveMessage: cross-site scripting attack?'); line has been removed from the code and replaced with an if statement that checks whether or not the origin of the message received is equal to the target origin. If it is not, then the message is discarded and not acted upon.",839,-50.05830665895464,-0.0596642510833786
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: wrong origin\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",816,-8.358277055476327,-0.010242986587593537
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (typeof e.origin !== \'undefined\' && e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",832,-9.286055249814934,-0.011161124098335258
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack\')){\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",820,-17.211360176295575,-0.02098946362962875
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send_sanitize ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }

The code has been fixed by adding an additional sanitization step before sending the data. The oidc_util_html_send_sanitize() function has been added which will validate any input data before it is send.",853,-55.11148201443408,-0.06460900587858626
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; // char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: invalid target origin\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; // java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; const char * java_script_fmt = ""<script type=\""text/javascript\"">\n"" "" var targetOrigin  = \'%s\';\n"" "" var message = \'%s\' + \' \' + \'%s\';\n"" ""\t   var timerID;\n"" ""\n"" ""function checkSession() {\n"" "" console.debug('checkSession: posting ' + message + ' to ' + targetOrigin);\n"" ""var win = window.parent.document.getElementById('%s').contentWindow;\n"" ""win.postMessage( message, targetOrigin);\n"" ""}\n"" ""\n"" "" function setTimer() {\n"" ""checkSession();\n"" ""timerID = setInterval('checkSession()', %s);\n"" ""}\n"" ""\n"" ""function receiveMessage(e) {\n"" ""console.debug('receiveMessage: ' + e.data + ' from ' + e",1000,-42.28253285953903,-0.042282532859539035
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""//console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",821,-5.946455534152945,-0.007242942185326364
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack blocked \');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",820,-12.061363898247414,-0.014708980363716359
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * escaped_origin = oidc_util_escape_string ( r , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , escaped_origin , & uri ) ; char * p = strstr ( escaped_origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , escaped_origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",825,-15.546345331259246,-0.018844054946980906
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: Blocked cross-site scripting attack.\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",822,-8.837371419907795,-0.01075106012154233
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; 
// Escape user input
java_script = oidc_util_escape_string ( r , java_script ) ; 
return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",829,-19.644226792141943,-0.023696292873512596
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin || !e.data.match(\/^[0-9A-Za-z_\\-=\\+\\/]*$\/)) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",852,-28.255904779947365,-0.03316420748820113
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin || e.data == null) {\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",805,-12.67491962635357,-0.01574524177186779
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , oidc_util_escape_string (r->pool, java_script), ""setTimer"" , NULL , DONE ) ; }",813,-12.827627623842746,-0.015778139758724163
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; char * java_script = apr_pstrdup(r->pool, ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: origin mismatch\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ); char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",826,-12.683477391302011,-0.015355299505208246
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
The code has been fixed by removing the warning message which indicates a cross-site scripting attack. This warning could potentially be used by an attacker to detect a vulnerability in the system.",836,-36.94682422435025,-0.04419476581860078
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
The code has been modified to prevent cross-site scripting attack by adding the additional condition statement to check for the origin of the post message. If the origin does not match the target origin, the code will not proceed with the rest of the operations. ",851,-57.94240388193545,-0.06808743111860804
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin || !e.data.startsWith('OIDC')) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",834,-9.879839098940476,-0.011846329854844696
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","

static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",800,-6.818419975472627,-0.008523024969340784
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , apr_pstrcat(r->pool, java_script, NULL), ""setTimer"" , NULL , DONE ) ; }",811,-8.19799017832495,-0.01010849590422312
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin || !/^[a-zA-Z0-9_\\- ]+$/.test(e.data)) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",846,-13.887092712007247,-0.016415003205682326
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack detected.\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",821,-7.522920806282188,-0.00916311913067258
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","

static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""//check for origin security\\n"" ""if (e.origin !== targetOrigin || !e.origin.match(/^https?:\/\/[^\\/]+$/)) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",852,-29.19296717170138,-0.03426404597617533
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ||  /[<>]/.test(e.data) ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",833,-13.288187082940656,-0.01595220538168146
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:"," 
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { 
oidc_debug ( r , ""enter"" ) ; 
const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""var target_origin;\\n"" ""try {\\n"" ""target_origin = new URL(targetOrigin).origin;\\n"" ""} catch(err) {\\n"" ""target_origin = targetOrigin;\\n"" ""}\\n"" ""if (e.origin !== target_origin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; 
char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; 
apr_uri_t uri ; 
apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; 
char * p = strstr ( origin , uri . path ) ; 
* p = '\\0' ; 
const char * op_iframe_id = ""openidc-op"" ; 
const char * session_state = oidc_session_get_session_state ( r , session ) ; 
if ( session_state == NULL ) { 
oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; 
return DONE ; 
} 
char * s_poll_interval = NULL ; 
oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; 
if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; 
const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; 
java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; 
return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; 
}",918,-27.960585380395628,-0.030458154009145564
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = oidc_get_redirect_uri(r, c) + \'?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = oidc_get_redirect_uri(r, c) + \'?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",817,-18.076207876244204,-0.02212510143971139
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""if (e.origin !== targetOrigin || !e.origin.startsWith(\""http\"")) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",806,-14.491978002406789,-0.01798012159107542
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\'text/javascript\'>\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
The vulnerability has been fixed by removing the console.debug() statement that reported a possible Cross-site Scripting attack. This was done by removing the line ""console.debug(\'receiveMessage: cross-site scripting attack?\');"" from the code.",853,-36.62658568640726,-0.04293855297351379
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: invalid origin\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",816,-6.389347666887806,-0.007830082925107605
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin || !targetOrigin.startsWith(\'http\')) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",832,-8.335482346457182,-0.010018608589491804
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: origin not matching\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }",817,-8.843577201718102,-0.010824451899287763
"The Original Code is vulnerable to CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Fix the vulnerability.
Original Code:
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { oidc_debug ( r , ""enter"" ) ; const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""console.debug(\'receiveMessage: cross-site scripting attack?\');\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; apr_uri_t uri ; apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; char * p = strstr ( origin , uri . path ) ; * p = '\\0' ; const char * op_iframe_id = ""openidc-op"" ; const char * session_state = oidc_session_get_session_state ( r , session ) ; if ( session_state == NULL ) { oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; return DONE ; } char * s_poll_interval = NULL ; oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; }
Fixed code:","
static int oidc_handle_session_management_iframe_rp ( request_rec * r , oidc_cfg * c , oidc_session_t * session , const char * client_id , const char * check_session_iframe ) { 

oidc_debug ( r , ""enter"" ) ; 

const char * java_script = ""<script type=\\""text/javascript\\"">\\n"" "" var targetOrigin  = \'%s\';\\n"" "" var message = \'%s\' + \' \' + \'%s\';\\n"" ""\t   var timerID;\\n"" ""\\n"" ""function checkSession() {\\n"" "" console.debug(\'checkSession: posting \' + message + \' to \' + targetOrigin);\\n"" ""var win = window.parent.document.getElementById(\'%s\').contentWindow;\\n"" ""win.postMessage( message, targetOrigin);\\n"" ""}\\n"" ""\\n"" "" function setTimer() {\\n"" ""checkSession();\\n"" ""timerID = setInterval(\'checkSession()\', %s);\\n"" ""}\\n"" ""\\n"" ""function receiveMessage(e) {\\n"" ""console.debug(\'receiveMessage: \' + e.data + \' from \' + e.origin);\\n"" ""if (e.origin !== targetOrigin ) {\\n"" ""return;\\n"" ""}\\n"" ""if (e.data != \'unchanged\') {\\n"" ""clearInterval(timerID);\\n"" ""if (e.data == \'changed\') {\\n"" ""\t\t  window.location.href = \'%s?session=check\';\\n"" ""} else {\\n"" ""\t\t  window.location.href = \'%s?session=logout\';\\n"" ""}\\n"" ""}\\n"" ""}\\n"" ""\\n"" ""window.addEventListener(\'message\', receiveMessage, false);\\n"" ""\\n"" ""</script>\\n"" ; 

char * origin = apr_pstrdup ( r -> pool , check_session_iframe ) ; 
apr_uri_t uri ; 
apr_uri_parse ( r -> pool , check_session_iframe , & uri ) ; 
char * p = strstr ( origin , uri . path ) ; 
* p = '\\0' ; 
const char * op_iframe_id = ""openidc-op"" ; 
const char * session_state = oidc_session_get_session_state ( r , session ) ; 
if ( session_state == NULL ) { 
oidc_warn ( r , ""no session_state found in the session; the OP does probably not support session management!?"" ) ; 
return DONE ; 
} 

char * s_poll_interval = NULL ; 
oidc_util_get_request_parameter ( r , ""poll"" , & s_poll_interval ) ; 
if ( s_poll_interval == NULL ) s_poll_interval = ""3000"" ; 
const char * redirect_uri = oidc_get_redirect_uri ( r , c ) ; 

java_script = apr_psprintf ( r -> pool , java_script , origin , client_id , session_state , op_iframe_id , s_poll_interval , redirect_uri , redirect_uri ) ; 

return oidc_util_html_send ( r , NULL , java_script , ""setTimer"" , NULL , DONE ) ; 
}",844,-18.558082252076158,-0.02198824911383431
