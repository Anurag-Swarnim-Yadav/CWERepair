Original code,Plausible Program,Total Tokens,Sum Entropy,Mean Entropy
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; //Added check: if (pdu_len > tlen) { break; } ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",360,-13.586888291848945,-0.03774135636624707
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } if(tlen >= sizeof(rpki_rtr_pdu)) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; if ( pdu_len <= tlen ) { ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; }} else { goto trunc; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",343,-24.39788853658843,-0.07113087036906247
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; if ( tlen < pdu_len ) { break; } ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) break; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",340,-7.822864855952849,-0.023008426046920143
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; if (pdu_len > tlen) { // ADDED CHECK TO PREVENT OUT-OF-BOUNDS ACCESS break; } ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",374,-20.68775562165671,-0.055314854603360185
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; if ( tlen < pdu_len || pdu_len == 0 ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } ND_TCHECK2 ( * tptr , pdu_len ) ; if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",345,-13.726454536268005,-0.03978682474280581
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { if (tlen > len)
  break;
  ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",355,-13.281239147830204,-0.03741194126149353
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; if ( pdu_len > tlen ) { goto trunc ; } ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",357,-6.748933891085821,-0.018904576725730593
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; //ADDED: If pdu_len is larger than tlen, set pdu_len to tlen to prevent out-of-bounds read. if (pdu_len > tlen) { pdu_len = tlen; } ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",395,-23.612737234310693,-0.059779081605849854
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ;  if ( pdu_len > tlen || pdu_len == 0) { break; } ND_TCHECK2 ( * tptr , pdu_len ) ; if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",346,-12.619475556096392,-0.0364724727054809
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } else { ND_TCHECK2 ( * tptr , pdu_len ) ; if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",344,-12.522762577900258,-0.03640337958691935
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { 
u_int tlen , pdu_type , pdu_len ; 
const u_char * tptr ; 
const rpki_rtr_pdu * pdu_header ; 
tptr = pptr ; 
tlen = len ; 
if ( ! ndo -> ndo_vflag ) { 
ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; 
return ; 
} 
while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { 
ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; 
pdu_header = ( const rpki_rtr_pdu * ) tptr ; 
pdu_type = pdu_header -> pdu_type ; 
pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; 
if ( ! pdu_type || ! pdu_len || tlen < pdu_len ) { 
break ; 
}

ND_TCHECK2 ( * tptr , pdu_len ) ; 
if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; 
tlen -= pdu_len ; 
tptr += pdu_len ; 
} 
return ; 
trunc : 
ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; 
}",388,-17.593593367291447,-0.045344312802297546
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) && tlen > 0 ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len || pdu_len > tlen ) { break ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",340,-7.9046624129733845,-0.023249007096980544
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { if (tlen > 0 && tptr != NULL){ ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; if (pdu_len <= tlen){ ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } } else { //if tlen == 0 or tptr == NULL break; } } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",382,-32.72724246354451,-0.08567340959043067
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; if (tlen < pdu_len) { break; } ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) { break; } tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",342,-10.228482313510355,-0.029907843021960104
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len || tlen < pdu_len ) { break ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",335,-5.9807010907652,-0.017852839076911042
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ;  if( pdu_len < tlen && pdu_len > 0) {  ND_TCHECK2 ( * tptr , pdu_len ) ; if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } else { break; } } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",335,-23.699155425138454,-0.07074374753772673
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; 

if ( ! pdu_type || ! pdu_len || tlen < pdu_len ) { break ; } 

ND_TCHECK2 ( * tptr , pdu_len ) ;
if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",342,-12.0974613855599,-0.03537269410982427
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { if ( tlen >= len ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } else { tptr = NULL ; break ; } } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",361,-22.282433884412544,-0.06172419358563032
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( pdu_len < sizeof(rpki_rtr_pdu) || tlen < pdu_len) { goto trunc; } ND_TCHECK2 ( * tptr , pdu_len ) ; if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",375,-13.71120863239504,-0.036563223019720106
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; if ( tlen < pdu_len ) { goto trunc ; } ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",342,-7.17278691836367,-0.020973061164806052
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; if ( pdu_len > tlen ) // add a check for length boundary { ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; return; // return if the length is out of boundary } ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",395,-36.643594159801644,-0.09276859280962442
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { 
    u_int tlen , pdu_type , pdu_len ; 
    const u_char * tptr ; 
    const rpki_rtr_pdu * pdu_header ; 
    tptr = pptr ; 
    tlen = len ; 
    if ( ! ndo -> ndo_vflag ) { 
        ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; 
        return ; 
    } 
    while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { 
        ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; 
        pdu_header = ( const rpki_rtr_pdu * ) tptr ; 
        pdu_type = pdu_header -> pdu_type ; 
        pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; 
        if (tlen < sizeof(rpki_rtr_pdu)) {
            ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ;
            break;
        }
        ND_TCHECK2 ( * tptr , pdu_len ) ; 
        if ( ! pdu_type || ! pdu_len ) { 
            break ; 
        } 
        if ( tlen < pdu_len ) { 
            goto trunc ; 
        } 
        if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; 
        tlen -= pdu_len ; 
        tptr += pdu_len ; 
    } 
    return ; 
trunc : 
    ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; 
}",480,-17.981993314946465,-0.03746248607280513
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; if (pdu_len > tlen) { ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; return; } ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",379,-7.035562115833679,-0.018563488432278837
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , std::min(tlen, pdu_len) ) ; // Out-of-bounds read fix if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",359,-22.023488844607897,-0.06134676558386601
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { if (tlen < sizeof ( rpki_rtr_pdu )) { break; } ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } ND_TCHECK2 ( * tptr , pdu_len ) ; if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",363,-9.59618926219405,-0.026435783091443666
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; if (pdu_len < sizeof ( rpki_rtr_pdu ) || tlen < pdu_len) { break; } ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",374,-13.194418113562808,-0.035279192817012854
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } ND_TCHECK2 ( * tptr , pdu_len ) ; if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",342,-5.133779492595377,-0.015011051147939698
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { if (tlen < sizeof ( rpki_rtr_pdu )) { break; } ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; if (tlen < pdu_len ) { break; } ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) break; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",361,-10.010256815594309,-0.02772924325649393
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { if (tlen < sizeof(rpki_rtr_pdu)) { break; } ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; if (tlen < pdu_len) { break; } ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",362,-7.629456518460453,-0.0210758467360786
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print(netdissect_options * ndo, register const u_char * pptr, register u_int len){
    u_int tlen, pdu_type, pdu_len;
    const u_char * tptr;
    const rpki_rtr_pdu *pdu_header;
    tptr = pptr;
    tlen = len;
    if (!ndo->ndo_vflag){
        ND_PRINT((ndo, "", RPKI-RTR""));
        return;
    }
    while (tlen >= sizeof(rpki_rtr_pdu)) {
        if (tlen < sizeof(rpki_rtr_pdu)) {
            goto trunc;
        }
        ND_TCHECK2(*tptr, sizeof(rpki_rtr_pdu));
        pdu_header = (const rpki_rtr_pdu *) tptr;
        pdu_type = pdu_header->pdu_type;
        pdu_len = EXTRACT_32BITS(pdu_header->length);
        if (tlen < pdu_len) {
            goto trunc;
        }
        ND_TCHECK2(*tptr, pdu_len);
        if (!pdu_type || !pdu_len) {
            break;
        }
        if (rpki_rtr_pdu_print(ndo, tptr, 8)) goto trunc;
        tlen -= pdu_len;
        tptr += pdu_len;
    }
    return;
trunc:
    ND_PRINT((ndo, ""\\n\\t%s"", tstr));
}",407,-27.32511077584351,-0.06713786431411181
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; if (pdu_len > tlen || pdu_len == 0) { break; } ND_TCHECK2 ( * tptr , pdu_len ) ; if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",345,-7.896082896265946,-0.022887196800770858
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) && tlen >= tptr ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; if ( pdu_len > tlen || pdu_len > len) { break; } ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",369,-20.63805501116974,-0.055929688377153765
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; // Added check for pdu_len < tlen to prevent out-of-bounds reads if ( ! pdu_type || ! pdu_len || tlen < pdu_len) { break ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) { ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; break ; } tlen -= pdu_len ; tptr += pdu_len ; } return ; }",338,-31.519932934602974,-0.09325423945148809
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:"," 
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } 
while ( tlen >= sizeof ( rpki_rtr_pdu ) ) {
	if ( tlen < sizeof ( rpki_rtr_pdu ) ) { 
		break ;
	}
	ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; 
	pdu_header = ( const rpki_rtr_pdu * ) tptr ; 
	pdu_type = pdu_header -> pdu_type ; 
	pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; 
	ND_TCHECK2 ( * tptr , pdu_len ) ; 
	if ( ! pdu_type || ! pdu_len ) { 
		break ; 
	}
	if ( tlen < pdu_len ) { 
		goto trunc ; 
	}
	if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; 
	tlen -= pdu_len ; 
	tptr += pdu_len ; 
} return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",419,-33.58946647761541,-0.08016579111602723
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { // ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; if ( len < sizeof ( rpki_rtr_pdu ) ) { goto trunc ; } pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; // ND_TCHECK2 ( * tptr , pdu_len ) ; if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",348,-18.45114107425401,-0.053020520328316126
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; if ( pdu_len > len || pdu_len > tlen ) { ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; break; } ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",386,-15.254574317780206,-0.03951962258492281
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:"," 
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; //Check for valid length if(pdu_len > tlen) { pdu_len = 0; break; } ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",369,-26.187057947262176,-0.07096763671344763
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) {
u_int tlen , pdu_type , pdu_len ; 
const u_char * tptr ; 
const rpki_rtr_pdu * pdu_header ; 
tptr = pptr ; 
tlen = len ; 
if ( ! ndo -> ndo_vflag ) { 
	ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; 
	return ; 
} 

while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { 
	if ( tlen < sizeof(rpki_rtr_pdu)) { 
		goto trunc; 
	} 
	ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; 
	pdu_header = ( const rpki_rtr_pdu * ) tptr ; 
	pdu_type = pdu_header -> pdu_type ; 
	pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; 

	if ( ! pdu_type || ! pdu_len ) { 
		break ; 
	} 
	if ( tlen < pdu_len ) { 
		goto trunc ; 
	} 
	ND_TCHECK2 ( * tptr , pdu_len ) ; 

	if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; 
	tlen -= pdu_len ; 
	tptr += pdu_len ; 
} 
return ; 

trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; 

}",453,-41.55065058544715,-0.09172329047560078
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; if ( tlen < pdu_len || ! pdu_type || ! pdu_len ) { break ; } ND_TCHECK2 ( * tptr , pdu_len ) ; if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",335,-5.926075316730555,-0.017689777064867327
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; if ( tlen < pdu_len || ! pdu_type || ! pdu_len ) { break ; } ND_TCHECK2 ( * tptr , pdu_len ) ; if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",335,-5.677317316235243,-0.016947215869358934
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) {
u_int tlen , pdu_type , pdu_len ;
const u_char * tptr ;
const rpki_rtr_pdu * pdu_header ;
tptr = pptr ;
tlen = len ;
if ( ! ndo -> ndo_vflag ) {
 ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ;
 return ;
}
while ( tlen > 0 ) {
 if ( tlen < sizeof ( rpki_rtr_pdu ) ) {
  goto trunc;
 }
 ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ;
 pdu_header = ( const rpki_rtr_pdu * ) tptr ;
 pdu_type = pdu_header -> pdu_type ;
 pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ;
 if ( ! pdu_type || ! pdu_len ) {
  break ;
 }
 if ( tlen < pdu_len ) {
  goto trunc ;
 }
 ND_TCHECK2 ( * tptr , pdu_len ) ;
 if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ;
 tlen -= pdu_len ;
 tptr += pdu_len ;
}
return ;
trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ;
}",389,-24.53740366330287,-0.0630781585174881
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { if (tlen < sizeof(rpki_rtr_pdu)) { break; } ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; if (tlen < pdu_len) { break; } ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",362,-7.575889598270932,-0.02092787181842799
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; if ( pdu_len > tlen ) { ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; break; } ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",379,-8.433625894008136,-0.022252311065984527
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; if ( pdu_len <= 0 || pdu_len > tlen ) { break ; } ND_TCHECK2 ( * tptr , pdu_len ) ; if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",345,-9.735062902218841,-0.028217573629619828
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; if (pdu_len > tlen) { ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; break; } ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",379,-7.311968503454344,-0.01929279288510381
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; if ( pdu_len > tlen ) { goto trunc ; } ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",342,-5.544189668320242,-0.016211080901521176
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { if ( tlen < sizeof ( rpki_rtr_pdu ) ) {break;} ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; if ( tlen < pdu_len ) { break ; } ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) break ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",361,-12.766705831111445,-0.03536483609726162
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; if ( pdu_len > tlen ) { ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; return ; } ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",364,-8.53817029125384,-0.0234565117891589
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } // Add check to ensure tlen is greater than 0 
if (tlen > 0) { while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; // Add check to ensure pdu_len is greater than 0 
if (pdu_len > 0) { ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } // Add check to ensure tlen is greater than or equal to pdu_len 
if ( tlen >= pdu_len ) { if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } } } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; } }",406,-31.986853259914202,-0.07878535285693153
"The Original Code is vulnerable to CWE-125: Out-of-bounds Read. Fix the vulnerability.
Original Code:
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; ND_TCHECK2 ( * tptr , pdu_len ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }
Fixed code:","
void rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) { u_int tlen , pdu_type , pdu_len ; const u_char * tptr ; const rpki_rtr_pdu * pdu_header ; tptr = pptr ; tlen = len ; if ( ! ndo -> ndo_vflag ) { ND_PRINT ( ( ndo , "", RPKI-RTR"" ) ) ; return ; } while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; pdu_header = ( const rpki_rtr_pdu * ) tptr ; pdu_type = pdu_header -> pdu_type ; pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; if ( ! pdu_type || ! pdu_len ) { break ; } if ( tlen < pdu_len ) { goto trunc ; } if ( tlen < (pdu_len + sizeof ( rpki_rtr_pdu )) ) { goto trunc ; } ND_TCHECK2 ( * tptr , pdu_len ) ; if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) goto trunc ; tlen -= pdu_len ; tptr += pdu_len ; } return ; trunc : ND_PRINT ( ( ndo , ""\\n\\t%s"" , tstr ) ) ; }",371,-14.140850492554039,-0.03811549997993002
