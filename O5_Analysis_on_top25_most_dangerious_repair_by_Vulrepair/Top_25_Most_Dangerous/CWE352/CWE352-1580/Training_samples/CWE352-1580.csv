cwe_id,source,target,project_and_commit_id,cve_id,original_address,time
CWE-352,"CWE-352 static void do_service ( Socket_T s ) { volatile HttpResponse res = create_HttpResponse ( s ) ; volatile HttpRequest req = create_HttpRequest ( s ) ; if ( res && req ) { if ( Run . httpd . flags & Httpd_Ssl ) set_header ( res , ""Strict-Transport-Security"" , ""max-age=63072000;<S2SV_blank>includeSubdomains;<S2SV_blank>preload"" ) ; <S2SV_StartBug> if ( is_authenticated ( req , res ) ) { <S2SV_EndBug> if ( IS ( req -> method , METHOD_GET ) ) Impl . doGet ( req , res ) ; else if ( IS ( req -> method , METHOD_POST ) ) Impl . doPost ( req , res ) ; else send_error ( req , res , SC_NOT_IMPLEMENTED , ""Method<S2SV_blank>not<S2SV_blank>implemented"" ) ; } send_response ( req , res ) ; } done ( req , res ) ; }
","<S2SV_ModStart> ) ) { set_header ( res , ""Set-Cookie"" , ""securitytoken=%s;<S2SV_blank>Max-Age=600;<S2SV_blank>HttpOnly;<S2SV_blank>SameSite=strict%s"" , res -> token , Run . httpd . flags & Httpd_Ssl ? "";<S2SV_blank>Secure"" : """" ) ;
",tildeslash@monit/c6ec3820e627f85417053e6336de2987f2d863e3,CVE-2016-7067,https://bitbucket.org/tildeslash/monit/commit/c6ec3820e627f85417053e6336de2987f2d863e3,2018-09-10T14:29Z
CWE-352,"CWE-352 char * Util_monitId ( char * idfile ) { <S2SV_StartBug> FILE * file = NULL ; <S2SV_EndBug> ASSERT ( idfile ) ; if ( ! File_exist ( idfile ) ) { <S2SV_StartBug> md5_context_t ctx ; <S2SV_EndBug> char buf [ STRLEN ] ; MD_T digest ; file = fopen ( idfile , ""w"" ) ; if ( ! file ) { LogError ( ""Error<S2SV_blank>opening<S2SV_blank>the<S2SV_blank>idfile<S2SV_blank>\'%s\'<S2SV_blank>--<S2SV_blank>%s\\n"" , idfile , STRERROR ) ; return NULL ; } <S2SV_StartBug> snprintf ( buf , STRLEN , ""%lu%d%lu"" , ( unsigned long ) Time_now ( ) , getpid ( ) , random ( ) ) ; <S2SV_EndBug> md5_init ( & ctx ) ; md5_append ( & ctx , ( const md5_byte_t * ) buf , STRLEN - 1 ) ; md5_finish ( & ctx , ( md5_byte_t * ) digest ) ; Util_digest2Bytes ( ( unsigned char * ) digest , 16 , Run . id ) ; <S2SV_StartBug> fprintf ( file , ""%s"" , Run . id ) ; <S2SV_EndBug> LogInfo ( ""<S2SV_blank>New<S2SV_blank>Monit<S2SV_blank>id:<S2SV_blank>%s\\n<S2SV_blank>Stored<S2SV_blank>in<S2SV_blank>\'%s\'\\n"" , Run . id , idfile ) ; } else { if ( ! File_isFile ( idfile ) ) { LogError ( ""idfile<S2SV_blank>\'%s\'<S2SV_blank>is<S2SV_blank>not<S2SV_blank>a<S2SV_blank>regular<S2SV_blank>file\\n"" , idfile ) ; return NULL ; } if ( ( file = fopen ( idfile , ""r"" ) ) == ( FILE * ) NULL ) { LogError ( ""Error<S2SV_blank>opening<S2SV_blank>the<S2SV_blank>idfile<S2SV_blank>\'%s\'<S2SV_blank>--<S2SV_blank>%s\\n"" , idfile , STRERROR ) ; return NULL ; } if ( fscanf ( file , ""%64s"" , Run . id ) != 1 ) { LogError ( ""Error<S2SV_blank>reading<S2SV_blank>id<S2SV_blank>from<S2SV_blank>file<S2SV_blank>\'%s\'\\n"" , idfile ) ; if ( fclose ( file ) ) LogError ( ""Error<S2SV_blank>closing<S2SV_blank>file<S2SV_blank>\'%s\'<S2SV_blank>--<S2SV_blank>%s\\n"" , idfile , STRERROR ) ; return NULL ; } } if ( fclose ( file ) ) LogError ( ""Error<S2SV_blank>closing<S2SV_blank>file<S2SV_blank>\'%s\'<S2SV_blank>--<S2SV_blank>%s\\n"" , idfile , STRERROR ) ; return Run . id ; }
","<S2SV_ModStart> idfile ) { ASSERT ( idfile ) ; <S2SV_ModStart> file = NULL <S2SV_ModEnd> ; if ( <S2SV_ModStart> ) ) { <S2SV_ModEnd> file = fopen <S2SV_ModStart> NULL ; } <S2SV_ModEnd> fprintf ( file <S2SV_ModStart> , ""%s"" , Util_getToken ( Run . id ) <S2SV_ModEnd> ) ; LogInfo
",tildeslash@monit/c6ec3820e627f85417053e6336de2987f2d863e3,CVE-2016-7067,https://bitbucket.org/tildeslash/monit/commit/c6ec3820e627f85417053e6336de2987f2d863e3,2018-09-10T14:29Z
CWE-352,"CWE-352 <S2SV_StartBug> void set_header ( HttpResponse res , const char * name , const char * value ) { <S2SV_EndBug> HttpHeader h = NULL ; ASSERT ( res ) ; ASSERT ( name ) ; NEW ( h ) ; h -> name = Str_dup ( name ) ; <S2SV_StartBug> h -> value = Str_dup ( value ) ; <S2SV_EndBug> if ( res -> headers ) { HttpHeader n , p ; for ( n = p = res -> headers ; p ; n = p , p = p -> next ) { if ( IS ( p -> name , name ) ) { FREE ( p -> value ) ; p -> value = Str_dup ( value ) ; destroy_entry ( h ) ; return ; } } n -> next = h ; } else { res -> headers = h ; } }
","<S2SV_ModStart> char * value , ... <S2SV_ModStart> name ) ; va_list ap ; va_start ( ap , value ) ; <S2SV_ModStart> -> value = Str_vcat ( value , ap ) ; va_end ( ap <S2SV_ModEnd> ) ; if
",tildeslash@monit/c6ec3820e627f85417053e6336de2987f2d863e3,CVE-2016-7067,https://bitbucket.org/tildeslash/monit/commit/c6ec3820e627f85417053e6336de2987f2d863e3,2018-09-10T14:29Z
CWE-352,"CWE-352 static void _send ( Socket_T S , const char * request , StringBuffer_T data ) { _argument ( data , ""format"" , ""text"" ) ; char * _auth = _getBasicAuthHeader ( ) ; <S2SV_StartBug> int rv = Socket_print ( S , <S2SV_EndBug> ""POST<S2SV_blank>%s<S2SV_blank>HTTP/1.0\\r\\n"" ""Content-Type:<S2SV_blank>application/x-www-form-urlencoded\\r\\n"" <S2SV_StartBug> ""Content-Length:<S2SV_blank>%d\\r\\n"" <S2SV_EndBug> ""%s"" ""\\r\\n"" ""%s"" , <S2SV_StartBug> request , <S2SV_EndBug> StringBuffer_length ( data ) , _auth ? _auth : """" , StringBuffer_toString ( data ) ) ; FREE ( _auth ) ; if ( rv < 0 ) THROW ( IOException , ""Monit:<S2SV_blank>cannot<S2SV_blank>send<S2SV_blank>command<S2SV_blank>to<S2SV_blank>the<S2SV_blank>monit<S2SV_blank>daemon<S2SV_blank>--<S2SV_blank>%s"" , STRERROR ) ; }
","<S2SV_ModStart> ( ) ; MD_T token ; StringBuffer_append ( data , ""%ssecuritytoken=%s"" , StringBuffer_length ( data ) > 0 ? ""&"" : """" , Util_getToken ( token ) ) ; <S2SV_ModStart> , ""POST<S2SV_blank>%s<S2SV_blank>HTTP/1.0\\r\\n"" ""Content-Type:<S2SV_blank>application/x-www-form-urlencoded\\r\\n"" ""Cookie:<S2SV_blank>securitytoken=%s\\r\\n"" <S2SV_ModStart> ""%s"" , request , token
",tildeslash@monit/c6ec3820e627f85417053e6336de2987f2d863e3,CVE-2016-7067,https://bitbucket.org/tildeslash/monit/commit/c6ec3820e627f85417053e6336de2987f2d863e3,2018-09-10T14:29Z
CWE-352,"CWE-352 void set_content_type ( HttpResponse res , const char * mime ) { <S2SV_StartBug> set_header ( res , ""Content-Type"" , mime ) ; <S2SV_EndBug> }
","<S2SV_ModStart> , ""Content-Type"" , ""%s"" ,
",tildeslash@monit/c6ec3820e627f85417053e6336de2987f2d863e3,CVE-2016-7067,https://bitbucket.org/tildeslash/monit/commit/c6ec3820e627f85417053e6336de2987f2d863e3,2018-09-10T14:29Z
CWE-352,"CWE-352 static boolean_t is_authenticated ( HttpRequest req , HttpResponse res ) { if ( Run . httpd . credentials ) { if ( ! basic_authenticate ( req ) ) { send_error ( req , res , SC_UNAUTHORIZED , ""You<S2SV_blank>are<S2SV_blank>not<S2SV_blank>authorized<S2SV_blank>to<S2SV_blank>access<S2SV_blank>monit.<S2SV_blank>Either<S2SV_blank>you<S2SV_blank>supplied<S2SV_blank>the<S2SV_blank>wrong<S2SV_blank>credentials<S2SV_blank>(e.g.<S2SV_blank>bad<S2SV_blank>password),<S2SV_blank>or<S2SV_blank>your<S2SV_blank>browser<S2SV_blank>doesn\'t<S2SV_blank>understand<S2SV_blank>how<S2SV_blank>to<S2SV_blank>supply<S2SV_blank>the<S2SV_blank>credentials<S2SV_blank>required"" ) ; set_header ( res , ""WWW-Authenticate"" , ""Basic<S2SV_blank>realm=\\""monit\\"""" ) ; return false ; } } <S2SV_StartBug> return true ; <S2SV_EndBug> }
","<S2SV_ModStart> ; } } if ( IS ( req -> method , METHOD_POST ) ) { const char * cookie = get_header ( req , ""Cookie"" ) ; const char * token = get_parameter ( req , ""securitytoken"" ) ; if ( ! cookie ) { LogError ( ""HttpRequest:<S2SV_blank>access<S2SV_blank>denied<S2SV_blank>--<S2SV_blank>client<S2SV_blank>[%s]:<S2SV_blank>missing<S2SV_blank>CSRF<S2SV_blank>token<S2SV_blank>cookie\\n"" , NVLSTR ( Socket_getRemoteHost ( req -> S ) ) ) ; send_error ( req , res , SC_FORBIDDEN , ""Invalid<S2SV_blank>CSRF<S2SV_blank>Token"" ) ; return false ; } if ( ! token ) { LogError ( ""HttpRequest:<S2SV_blank>access<S2SV_blank>denied<S2SV_blank>--<S2SV_blank>client<S2SV_blank>[%s]:<S2SV_blank>missing<S2SV_blank>CSRF<S2SV_blank>token<S2SV_blank>in<S2SV_blank>HTTP<S2SV_blank>parameter\\n"" , NVLSTR ( Socket_getRemoteHost ( req -> S ) ) ) ; send_error ( req , res , SC_FORBIDDEN , ""Invalid<S2SV_blank>CSRF<S2SV_blank>Token"" ) ; return false ; } if ( ! Str_startsWith ( cookie , ""securitytoken="" ) ) { LogError ( ""HttpRequest:<S2SV_blank>access<S2SV_blank>denied<S2SV_blank>--<S2SV_blank>client<S2SV_blank>[%s]:<S2SV_blank>no<S2SV_blank>CSRF<S2SV_blank>token<S2SV_blank>in<S2SV_blank>cookie\\n"" , NVLSTR ( Socket_getRemoteHost ( req -> S ) ) ) ; send_error ( req , res , SC_FORBIDDEN , ""Invalid<S2SV_blank>CSRF<S2SV_blank>Token"" ) ; return false ; } if ( Str_compareConstantTime ( cookie + 14 , token ) ) { LogError ( ""HttpRequest:<S2SV_blank>access<S2SV_blank>denied<S2SV_blank>--<S2SV_blank>client<S2SV_blank>[%s]:<S2SV_blank>CSRF<S2SV_blank>token<S2SV_blank>mismatch\\n"" , NVLSTR ( Socket_getRemoteHost ( req -> S ) ) ) ; send_error ( req , res , SC_FORBIDDEN , ""Invalid<S2SV_blank>CSRF<S2SV_blank>Token"" ) ; return false ; } }
",tildeslash@monit/c6ec3820e627f85417053e6336de2987f2d863e3,CVE-2016-7067,https://bitbucket.org/tildeslash/monit/commit/c6ec3820e627f85417053e6336de2987f2d863e3,2018-09-10T14:29Z
CWE-352,"CWE-352 static void print_buttons ( HttpRequest req , HttpResponse res , Service_T s ) { if ( is_readonly ( req ) ) { return ; } StringBuffer_append ( res -> outputbuffer , ""<table<S2SV_blank>id=\'buttons\'><tr>"" ) ; if ( s -> start ) StringBuffer_append ( res -> outputbuffer , <S2SV_StartBug> ""<td><form<S2SV_blank>method=POST<S2SV_blank>action=%s>"" <S2SV_EndBug> ""<input<S2SV_blank>type=hidden<S2SV_blank>value=\'start\'<S2SV_blank>name=action>"" ""<input<S2SV_blank>type=submit<S2SV_blank>value=\'Start<S2SV_blank>service\'></form></td>"" , s -> name ) ; if ( s -> stop ) StringBuffer_append ( res -> outputbuffer , <S2SV_StartBug> ""<td><form<S2SV_blank>method=POST<S2SV_blank>action=%s>"" <S2SV_EndBug> ""<input<S2SV_blank>type=hidden<S2SV_blank>value=\'stop\'<S2SV_blank>name=action>"" ""<input<S2SV_blank>type=submit<S2SV_blank>value=\'Stop<S2SV_blank>service\'></form></td>"" , s -> name ) ; if ( ( s -> start && s -> stop ) || s -> restart ) StringBuffer_append ( res -> outputbuffer , <S2SV_StartBug> ""<td><form<S2SV_blank>method=POST<S2SV_blank>action=%s>"" <S2SV_EndBug> ""<input<S2SV_blank>type=hidden<S2SV_blank>value=\'restart\'<S2SV_blank>name=action>"" ""<input<S2SV_blank>type=submit<S2SV_blank>value=\'Restart<S2SV_blank>service\'></form></td>"" , s -> name ) ; StringBuffer_append ( res -> outputbuffer , ""<td><form<S2SV_blank>method=POST<S2SV_blank>action=%s>"" ""<input<S2SV_blank>type=hidden<S2SV_blank>value=\'%s\'<S2SV_blank>name=action>"" ""<input<S2SV_blank>type=submit<S2SV_blank>value=\'%s\'></form></td></tr></table>"" , s -> name , s -> monitor ? ""unmonitor"" : ""monitor"" , s -> monitor ? ""Disable<S2SV_blank>monitoring"" : ""Enable<S2SV_blank>monitoring"" ) ; <S2SV_StartBug> } <S2SV_EndBug>
","<S2SV_ModStart> -> outputbuffer , ""<td>"" ""<form<S2SV_blank>method=POST<S2SV_blank>action=%s>"" ""<input<S2SV_blank>type=hidden<S2SV_blank>name=\'securitytoken\'<S2SV_blank>value=\'%s\'>"" ""<input<S2SV_blank>type=hidden<S2SV_blank>value=\'start\'<S2SV_blank>name=action>"" ""<input<S2SV_blank>type=submit<S2SV_blank>value=\'Start<S2SV_blank>service\'>"" ""</form>"" ""</td>"" , s -> name , res -> token <S2SV_ModEnd> ) ; if <S2SV_ModStart> -> outputbuffer , ""<td>"" ""<form<S2SV_blank>method=POST<S2SV_blank>action=%s>"" ""<input<S2SV_blank>type=hidden<S2SV_blank>name=\'securitytoken\'<S2SV_blank>value=\'%s\'>"" ""<input<S2SV_blank>type=hidden<S2SV_blank>value=\'stop\'<S2SV_blank>name=action>"" ""<input<S2SV_blank>type=submit<S2SV_blank>value=\'Stop<S2SV_blank>service\'>"" ""</form>"" ""</td>"" , s -> name , res -> token <S2SV_ModEnd> ) ; if <S2SV_ModStart> -> outputbuffer , ""<td>"" ""<form<S2SV_blank>method=POST<S2SV_blank>action=%s>"" ""<input<S2SV_blank>type=hidden<S2SV_blank>name=\'securitytoken\'<S2SV_blank>value=\'%s\'>"" ""<input<S2SV_blank>type=hidden<S2SV_blank>value=\'restart\'<S2SV_blank>name=action>"" ""<input<S2SV_blank>type=submit<S2SV_blank>value=\'Restart<S2SV_blank>service\'>"" ""</form>"" ""</td>"" , s -> name , res -> token ) ; StringBuffer_append ( res -> outputbuffer , ""<td>"" ""<form<S2SV_blank>method=POST<S2SV_blank>action=%s>"" ""<input<S2SV_blank>type=hidden<S2SV_blank>name=\'securitytoken\'<S2SV_blank>value=\'%s\'>"" ""<input<S2SV_blank>type=hidden<S2SV_blank>value=\'%s\'<S2SV_blank>name=action>"" ""<input<S2SV_blank>type=submit<S2SV_blank>value=\'%s\'>"" ""</form>"" ""</td>"" , s -> name , res -> token <S2SV_ModEnd> , s -> <S2SV_ModStart> ""Enable<S2SV_blank>monitoring"" ) ; StringBuffer_append ( res -> outputbuffer , ""</tr></table>"" ) ;
",tildeslash@monit/c6ec3820e627f85417053e6336de2987f2d863e3,CVE-2016-7067,https://bitbucket.org/tildeslash/monit/commit/c6ec3820e627f85417053e6336de2987f2d863e3,2018-09-10T14:29Z
CWE-352,"CWE-352 static void doGet ( HttpRequest req , HttpResponse res ) { set_content_type ( res , ""text/html"" ) ; if ( ACTION ( HOME ) ) { LOCK ( Run . mutex ) do_home ( res ) ; END_LOCK ; <S2SV_StartBug> } else if ( ACTION ( RUN ) ) { <S2SV_EndBug> <S2SV_StartBug> handle_run ( req , res ) ; <S2SV_EndBug> } else if ( ACTION ( TEST ) ) { <S2SV_StartBug> is_monit_running ( res ) ; <S2SV_EndBug> } else if ( ACTION ( VIEWLOG ) ) { do_viewlog ( req , res ) ; } else if ( ACTION ( ABOUT ) ) { do_about ( res ) ; } else if ( ACTION ( FAVICON ) ) { printFavicon ( res ) ; } else if ( ACTION ( PING ) ) { do_ping ( res ) ; } else if ( ACTION ( GETID ) ) { do_getid ( res ) ; <S2SV_StartBug> } else if ( ACTION ( STATUS ) ) { <S2SV_EndBug> print_status ( req , res , 1 ) ; } else if ( ACTION ( STATUS2 ) ) { print_status ( req , res , 2 ) ; } else if ( ACTION ( SUMMARY ) ) { print_summary ( req , res ) ; } else if ( ACTION ( REPORT ) ) { _printReport ( req , res ) ; } else if ( ACTION ( DOACTION ) ) { handle_do_action ( req , res ) ; } else { handle_action ( req , res ) ; } }
","<S2SV_ModStart> ( ACTION ( RUNTIME <S2SV_ModEnd> ) ) { <S2SV_ModStart> ) ) { handle_runtime <S2SV_ModEnd> ( req , <S2SV_ModStart> { is_monit_running ( <S2SV_ModEnd> res ) ; <S2SV_ModStart> ; } else { handle_service <S2SV_ModEnd> ( req ,
",tildeslash@monit/c6ec3820e627f85417053e6336de2987f2d863e3,CVE-2016-7067,https://bitbucket.org/tildeslash/monit/commit/c6ec3820e627f85417053e6336de2987f2d863e3,2018-09-10T14:29Z
